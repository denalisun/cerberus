#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: B_Prj_FireworksMortar_Rocket

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "FortniteGame_structs.hpp"
#include "FortniteGame_classes.hpp"


namespace SDK
{

// BlueprintGeneratedClass B_Prj_FireworksMortar_Rocket.B_Prj_FireworksMortar_Rocket_C
// 0x0178 (0x0910 - 0x0798)
class AB_Prj_FireworksMortar_Rocket_C final : public AFortProjectileBase
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x0798(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	class UAudioComponent*                        Audio_Proj_Loop;                                   // 0x07A0(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UParticleSystemComponent*               P_Trail;                                           // 0x07A8(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UStaticMeshComponent*                   Mesh;                                              // 0x07B0(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UMaterialInstanceDynamic*               Dynamic_Material;                                  // 0x07B8(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class USoundBase*                             BottleRocketFireCue;                               // 0x07C0(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UParticleSystem*                        P_Explosion;                                       // 0x07C8(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class USoundBase*                             ExplosionSound;                                    // 0x07D0(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         Lifetime_Min;                                      // 0x07D8(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         Lifetime_Max;                                      // 0x07DC(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         BounceExplosionDelay;                              // 0x07E0(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         BounceExplosionDelayVariance;                      // 0x07E4(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FHitResult                             BounceHit;                                         // 0x07E8(0x0088)(Edit, BlueprintVisible, Net, DisableEditOnInstance, IsPlainOldData, NoDestructor, ContainsInstancedReference)
	class USoundBase*                             SpawnSound;                                        // 0x0870(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FHitResult                             HitResult;                                         // 0x0878(0x0088)(Edit, BlueprintVisible, DisableEditOnInstance, IsPlainOldData, NoDestructor, ContainsInstancedReference)
	TArray<float>                                 HueShiftColorRange;                                // 0x0900(0x0010)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance)

public:
	void ExecuteUbergraph_B_Prj_FireworksMortar_Rocket(int32 EntryPoint);
	void ReceiveBeginPlay();
	void OnExploded(const TArray<class AActor*>& HitActors, const TArray<struct FHitResult>& HitResults);
	void OnBounce(const struct FHitResult& Hit);
	void UserConstructionScript();

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"B_Prj_FireworksMortar_Rocket_C">();
	}
	static class AB_Prj_FireworksMortar_Rocket_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<AB_Prj_FireworksMortar_Rocket_C>();
	}
};
static_assert(alignof(AB_Prj_FireworksMortar_Rocket_C) == 0x000008, "Wrong alignment on AB_Prj_FireworksMortar_Rocket_C");
static_assert(sizeof(AB_Prj_FireworksMortar_Rocket_C) == 0x000910, "Wrong size on AB_Prj_FireworksMortar_Rocket_C");
static_assert(offsetof(AB_Prj_FireworksMortar_Rocket_C, UberGraphFrame) == 0x000798, "Member 'AB_Prj_FireworksMortar_Rocket_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(AB_Prj_FireworksMortar_Rocket_C, Audio_Proj_Loop) == 0x0007A0, "Member 'AB_Prj_FireworksMortar_Rocket_C::Audio_Proj_Loop' has a wrong offset!");
static_assert(offsetof(AB_Prj_FireworksMortar_Rocket_C, P_Trail) == 0x0007A8, "Member 'AB_Prj_FireworksMortar_Rocket_C::P_Trail' has a wrong offset!");
static_assert(offsetof(AB_Prj_FireworksMortar_Rocket_C, Mesh) == 0x0007B0, "Member 'AB_Prj_FireworksMortar_Rocket_C::Mesh' has a wrong offset!");
static_assert(offsetof(AB_Prj_FireworksMortar_Rocket_C, Dynamic_Material) == 0x0007B8, "Member 'AB_Prj_FireworksMortar_Rocket_C::Dynamic_Material' has a wrong offset!");
static_assert(offsetof(AB_Prj_FireworksMortar_Rocket_C, BottleRocketFireCue) == 0x0007C0, "Member 'AB_Prj_FireworksMortar_Rocket_C::BottleRocketFireCue' has a wrong offset!");
static_assert(offsetof(AB_Prj_FireworksMortar_Rocket_C, P_Explosion) == 0x0007C8, "Member 'AB_Prj_FireworksMortar_Rocket_C::P_Explosion' has a wrong offset!");
static_assert(offsetof(AB_Prj_FireworksMortar_Rocket_C, ExplosionSound) == 0x0007D0, "Member 'AB_Prj_FireworksMortar_Rocket_C::ExplosionSound' has a wrong offset!");
static_assert(offsetof(AB_Prj_FireworksMortar_Rocket_C, Lifetime_Min) == 0x0007D8, "Member 'AB_Prj_FireworksMortar_Rocket_C::Lifetime_Min' has a wrong offset!");
static_assert(offsetof(AB_Prj_FireworksMortar_Rocket_C, Lifetime_Max) == 0x0007DC, "Member 'AB_Prj_FireworksMortar_Rocket_C::Lifetime_Max' has a wrong offset!");
static_assert(offsetof(AB_Prj_FireworksMortar_Rocket_C, BounceExplosionDelay) == 0x0007E0, "Member 'AB_Prj_FireworksMortar_Rocket_C::BounceExplosionDelay' has a wrong offset!");
static_assert(offsetof(AB_Prj_FireworksMortar_Rocket_C, BounceExplosionDelayVariance) == 0x0007E4, "Member 'AB_Prj_FireworksMortar_Rocket_C::BounceExplosionDelayVariance' has a wrong offset!");
static_assert(offsetof(AB_Prj_FireworksMortar_Rocket_C, BounceHit) == 0x0007E8, "Member 'AB_Prj_FireworksMortar_Rocket_C::BounceHit' has a wrong offset!");
static_assert(offsetof(AB_Prj_FireworksMortar_Rocket_C, SpawnSound) == 0x000870, "Member 'AB_Prj_FireworksMortar_Rocket_C::SpawnSound' has a wrong offset!");
static_assert(offsetof(AB_Prj_FireworksMortar_Rocket_C, HitResult) == 0x000878, "Member 'AB_Prj_FireworksMortar_Rocket_C::HitResult' has a wrong offset!");
static_assert(offsetof(AB_Prj_FireworksMortar_Rocket_C, HueShiftColorRange) == 0x000900, "Member 'AB_Prj_FireworksMortar_Rocket_C::HueShiftColorRange' has a wrong offset!");

}


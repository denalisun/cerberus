#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: B_DualPistol_Athena

#include "Basic.hpp"


namespace SDK::Params
{

// Function B_DualPistol_Athena.B_DualPistol_Athena_C.ExecuteUbergraph_B_DualPistol_Athena
// 0x0008 (0x0008 - 0x0000)
struct B_DualPistol_Athena_C_ExecuteUbergraph_B_DualPistol_Athena final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_Event_bPersistentFire;                      // 0x0004(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_Event_bSecondaryFire;                       // 0x0005(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(B_DualPistol_Athena_C_ExecuteUbergraph_B_DualPistol_Athena) == 0x000004, "Wrong alignment on B_DualPistol_Athena_C_ExecuteUbergraph_B_DualPistol_Athena");
static_assert(sizeof(B_DualPistol_Athena_C_ExecuteUbergraph_B_DualPistol_Athena) == 0x000008, "Wrong size on B_DualPistol_Athena_C_ExecuteUbergraph_B_DualPistol_Athena");
static_assert(offsetof(B_DualPistol_Athena_C_ExecuteUbergraph_B_DualPistol_Athena, EntryPoint) == 0x000000, "Member 'B_DualPistol_Athena_C_ExecuteUbergraph_B_DualPistol_Athena::EntryPoint' has a wrong offset!");
static_assert(offsetof(B_DualPistol_Athena_C_ExecuteUbergraph_B_DualPistol_Athena, K2Node_Event_bPersistentFire) == 0x000004, "Member 'B_DualPistol_Athena_C_ExecuteUbergraph_B_DualPistol_Athena::K2Node_Event_bPersistentFire' has a wrong offset!");
static_assert(offsetof(B_DualPistol_Athena_C_ExecuteUbergraph_B_DualPistol_Athena, K2Node_Event_bSecondaryFire) == 0x000005, "Member 'B_DualPistol_Athena_C_ExecuteUbergraph_B_DualPistol_Athena::K2Node_Event_bSecondaryFire' has a wrong offset!");

// Function B_DualPistol_Athena.B_DualPistol_Athena_C.OnPlayWeaponFireFX
// 0x0002 (0x0002 - 0x0000)
struct B_DualPistol_Athena_C_OnPlayWeaponFireFX final
{
public:
	bool                                          bPersistentFire;                                   // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          bSecondaryFire;                                    // 0x0001(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(B_DualPistol_Athena_C_OnPlayWeaponFireFX) == 0x000001, "Wrong alignment on B_DualPistol_Athena_C_OnPlayWeaponFireFX");
static_assert(sizeof(B_DualPistol_Athena_C_OnPlayWeaponFireFX) == 0x000002, "Wrong size on B_DualPistol_Athena_C_OnPlayWeaponFireFX");
static_assert(offsetof(B_DualPistol_Athena_C_OnPlayWeaponFireFX, bPersistentFire) == 0x000000, "Member 'B_DualPistol_Athena_C_OnPlayWeaponFireFX::bPersistentFire' has a wrong offset!");
static_assert(offsetof(B_DualPistol_Athena_C_OnPlayWeaponFireFX, bSecondaryFire) == 0x000001, "Member 'B_DualPistol_Athena_C_OnPlayWeaponFireFX::bSecondaryFire' has a wrong offset!");

}


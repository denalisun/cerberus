#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BGA_RiftPortal_Item_Athena

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "GameplayAbilities_structs.hpp"
#include "CoreUObject_structs.hpp"
#include "GameplayTags_structs.hpp"


namespace SDK::Params
{

// Function BGA_RiftPortal_Item_Athena.BGA_RiftPortal_Item_Athena_C.ExecuteUbergraph_BGA_RiftPortal_Item_Athena
// 0x04E0 (0x04E0 - 0x0000)
struct BGA_RiftPortal_Item_Athena_C_ExecuteUbergraph_BGA_RiftPortal_Item_Athena final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x000C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_K2_GetActorLocation_ReturnValue;          // 0x0010(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable1;                   // 0x001C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_HasAuthority_ReturnValue;                 // 0x0020(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_21[0x3];                                       // 0x0021(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue1;                  // 0x0024(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UPrimitiveComponent*                    K2Node_ComponentBoundEvent_OverlappedComponent2;   // 0x0028(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 K2Node_ComponentBoundEvent_OtherActor2;            // 0x0030(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UPrimitiveComponent*                    K2Node_ComponentBoundEvent_OtherComp2;             // 0x0038(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         K2Node_ComponentBoundEvent_OtherBodyIndex2;        // 0x0040(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_ComponentBoundEvent_bFromSweep1;            // 0x0044(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_45[0x3];                                       // 0x0045(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FHitResult                             K2Node_ComponentBoundEvent_SweepResult1;           // 0x0048(0x0088)(ConstParm, IsPlainOldData, NoDestructor, ContainsInstancedReference)
	class UPrimitiveComponent*                    K2Node_ComponentBoundEvent_OverlappedComponent1;   // 0x00D0(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 K2Node_ComponentBoundEvent_OtherActor1;            // 0x00D8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UPrimitiveComponent*                    K2Node_ComponentBoundEvent_OtherComp1;             // 0x00E0(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         K2Node_ComponentBoundEvent_OtherBodyIndex1;        // 0x00E8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_ComponentBoundEvent_bFromSweep;             // 0x00EC(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_ED[0x3];                                       // 0x00ED(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FHitResult                             K2Node_ComponentBoundEvent_SweepResult;            // 0x00F0(0x0088)(ConstParm, IsPlainOldData, NoDestructor, ContainsInstancedReference)
	class AFortPlayerPawn*                        K2Node_DynamicCast_AsFort_Player_Pawn;             // 0x0178(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0180(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_181[0x7];                                      // 0x0181(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UPrimitiveComponent*                    K2Node_ComponentBoundEvent_OverlappedComponent;    // 0x0188(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 K2Node_ComponentBoundEvent_OtherActor;             // 0x0190(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UPrimitiveComponent*                    K2Node_ComponentBoundEvent_OtherComp;              // 0x0198(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         K2Node_ComponentBoundEvent_OtherBodyIndex;         // 0x01A0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1A4[0x4];                                      // 0x01A4(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class AFortPlayerPawnAthena*                  K2Node_DynamicCast_AsFort_Player_Pawn_Athena;      // 0x01A8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess1;                      // 0x01B0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1B1[0x7];                                      // 0x01B1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class AActor*>                         CallFunc_GetOverlappingActors_OverlappingActors;   // 0x01B8(0x0010)(ZeroConstructor, ReferenceParm)
	int32                                         Temp_int_Array_Index_Variable1;                    // 0x01C8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x01CC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_LessEqual_IntInt_ReturnValue;             // 0x01D0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1D1[0x3];                                      // 0x01D1(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_GetValueAtLevel_ReturnValue;              // 0x01D4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Add_FloatFloat_ReturnValue;               // 0x01D8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                K2Node_CustomEvent_PlayerLocation;                 // 0x01DC(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UParticleSystemComponent*               CallFunc_SpawnEmitterAtLocation_ReturnValue;       // 0x01E8(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_RandomFloatInRange_ReturnValue;           // 0x01F0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               CallFunc_MakeRotator_ReturnValue;                  // 0x01F4(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsPlaying_ReturnValue;                    // 0x0200(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_HasAuthority_ReturnValue1;                // 0x0201(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_202[0x2];                                      // 0x0202(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	TDelegate<void(class AFortPlayerPawnAthena* FortPlayerPawnAthena)> K2Node_CreateDelegate_OutputDelegate;              // 0x0204(0x0010)(ZeroConstructor, NoDestructor)
	struct FVector                                CallFunc_Add_VectorVector_ReturnValue;             // 0x0214(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TDelegate<void(class FName PlaylistName, struct FGameplayTagContainer& PlaylistContextTags)> K2Node_CreateDelegate_OutputDelegate1;             // 0x0220(0x0010)(ZeroConstructor, NoDestructor)
	struct FVector                                CallFunc_K2_GetActorLocation_ReturnValue1;         // 0x0230(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x023C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_23D[0x3];                                      // 0x023D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class AFortAthenaVehicle*                     K2Node_DynamicCast_AsFort_Athena_Vehicle;          // 0x0240(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess2;                      // 0x0248(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_249[0x7];                                      // 0x0249(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class AFortPlayerPawn*                        K2Node_DynamicCast_AsFort_Player_Pawn1;            // 0x0250(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess3;                      // 0x0258(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_259[0x7];                                      // 0x0259(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class AActor*                                 K2Node_Event_Actor;                                // 0x0260(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FActiveGameplayEffectHandle            CallFunc_ApplyGlobalEnvironmentGameplayEffectToActor_ReturnValue; // 0x0268(0x0008)(NoDestructor, HasGetValueTypeHash)
	class AFortAthenaVehicle*                     CallFunc_GetVehicle_ReturnValue;                   // 0x0270(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_HasDriver_ReturnValue;                    // 0x0278(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsInVehicle_ReturnValue;                  // 0x0279(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_27A[0x2];                                      // 0x027A(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_K2_GetActorLocation_ReturnValue2;         // 0x027C(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_HasAuthority_ReturnValue2;                // 0x0288(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_289[0x3];                                      // 0x0289(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_K2_GetActorLocation_ReturnValue3;         // 0x028C(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_X;                            // 0x0298(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_Y;                            // 0x029C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_Z;                            // 0x02A0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetValueAtLevel_ReturnValue1;             // 0x02A4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Add_VectorVector_ReturnValue1;            // 0x02A8(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_MakeVector_ReturnValue;                   // 0x02B4(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UParticleSystemComponent*               CallFunc_SpawnEmitterAtLocation_ReturnValue1;      // 0x02C0(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<class AFortPlayerPawn*>                CallFunc_GetAllPassengers_ReturnValue;             // 0x02C8(0x0010)(ZeroConstructor, ReferenceParm)
	bool                                          CallFunc_HasDriver_ReturnValue1;                   // 0x02D8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_2D9[0x3];                                      // 0x02D9(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Length_ReturnValue1;                // 0x02DC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_IntInt_ReturnValue;            // 0x02E0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_2E1[0x3];                                      // 0x02E1(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	TDelegate<void()>                             K2Node_CreateDelegate_OutputDelegate2;             // 0x02E4(0x0010)(ZeroConstructor, NoDestructor)
	float                                         CallFunc_GetValueAtLevel_ReturnValue2;             // 0x02F4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UAudioComponent*                        CallFunc_SpawnSoundAtLocation_ReturnValue;         // 0x02F8(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FTimerHandle                           CallFunc_K2_SetTimerDelegate_ReturnValue;          // 0x0300(0x0008)(NoDestructor, HasGetValueTypeHash)
	class AFortPlayerPawn*                        K2Node_DynamicCast_AsFort_Player_Pawn2;            // 0x0308(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess4;                      // 0x0310(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsLocallyControlled_ReturnValue;          // 0x0311(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsDrivingVehicle_ReturnValue;             // 0x0312(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x0313(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_314[0x4];                                      // 0x0314(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class AFortAthenaVehicle*                     CallFunc_GetVehicle_ReturnValue1;                  // 0x0318(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AFortAthenaVehicle*                     K2Node_Event_Vehicle;                              // 0x0320(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_K2_GetActorLocation_ReturnValue4;         // 0x0328(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_334[0x4];                                      // 0x0334(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class AFortPlayerPawnAthena*                  K2Node_DynamicCast_AsFort_Player_Pawn_Athena1;     // 0x0338(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess5;                      // 0x0340(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_LocalIsTryingToEnterVehicle_ReturnValue;  // 0x0341(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_342[0x6];                                      // 0x0342(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class AGameStateBase*                         CallFunc_GetGameState_ReturnValue;                 // 0x0348(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   K2Node_CustomEvent_PlaylistName;                   // 0x0350(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FGameplayTagContainer                  K2Node_CustomEvent_PlaylistContextTags;            // 0x0358(0x0020)(ConstParm)
	class AFortGameStateAthena*                   K2Node_DynamicCast_AsFort_Game_State_Athena;       // 0x0378(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess6;                      // 0x0380(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Athena_CheckCreativeMode_CanCompleteQuest; // 0x0381(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Athena_CheckCreativeMode_CanCompleteQuest1; // 0x0382(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue1;                     // 0x0383(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue2;                     // 0x0384(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_385[0x3];                                      // 0x0385(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class AFortPlayerPawn*>                CallFunc_GetAllPassengers_ReturnValue1;            // 0x0388(0x0010)(ZeroConstructor, ReferenceParm)
	class AFortPlayerPawn*                        CallFunc_GetDriver_ReturnValue;                    // 0x0398(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AFortPlayerPawn*                        CallFunc_Array_Get_Item;                           // 0x03A0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue3;                     // 0x03A8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue4;                     // 0x03A9(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3AA[0x6];                                      // 0x03AA(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class AController*                            CallFunc_GetController_ReturnValue;                // 0x03B0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AController*                            CallFunc_GetController_ReturnValue1;               // 0x03B8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue2;                // 0x03C0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3C4[0x4];                                      // 0x03C4(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class AController*                            CallFunc_GetController_ReturnValue2;               // 0x03C8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x03D0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsDedicatedServer_ReturnValue;            // 0x03D1(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3D2[0x2];                                      // 0x03D2(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	struct FRotator                               CallFunc_K2_GetActorRotation_ReturnValue;          // 0x03D4(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor)
	float                                         CallFunc_BreakRotator_Roll;                        // 0x03E0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakRotator_Pitch;                       // 0x03E4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakRotator_Yaw;                         // 0x03E8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               CallFunc_MakeRotator_ReturnValue1;                 // 0x03EC(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor)
	class AFortPlayerPawn*                        CallFunc_Array_Get_Item1;                          // 0x03F8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue3;                // 0x0400(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue1;                 // 0x0404(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_405[0x3];                                      // 0x0405(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class AFortPlayerPawn*>                CallFunc_GetAllPassengers_ReturnValue2;            // 0x0408(0x0010)(ZeroConstructor, ReferenceParm)
	class AFortPlayerPawnAthena*                  K2Node_CustomEvent_FortPlayerPawnAthena;           // 0x0418(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<class AActor*>                         CallFunc_GetOverlappingActors_OverlappingActors1;  // 0x0420(0x0010)(ZeroConstructor, ReferenceParm)
	bool                                          CallFunc_Array_Contains_ReturnValue;               // 0x0430(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Is_Flying_NewParam;                       // 0x0431(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Is_Flying_NewParam1;                      // 0x0432(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_CanTeleport_ReturnValue;                  // 0x0433(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	float                                         CallFunc_SelectFloat_ReturnValue;                  // 0x0434(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Multiply_FloatFloat_ReturnValue;          // 0x0438(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               CallFunc_MakeRotator_ReturnValue2;                 // 0x043C(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FVector                                CallFunc_K2_GetActorLocation_ReturnValue5;         // 0x0448(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FHitResult                             CallFunc_K2_SetRelativeRotation_SweepHitResult;    // 0x0454(0x0088)(IsPlainOldData, NoDestructor, ContainsInstancedReference)
};
static_assert(alignof(BGA_RiftPortal_Item_Athena_C_ExecuteUbergraph_BGA_RiftPortal_Item_Athena) == 0x000008, "Wrong alignment on BGA_RiftPortal_Item_Athena_C_ExecuteUbergraph_BGA_RiftPortal_Item_Athena");
static_assert(sizeof(BGA_RiftPortal_Item_Athena_C_ExecuteUbergraph_BGA_RiftPortal_Item_Athena) == 0x0004E0, "Wrong size on BGA_RiftPortal_Item_Athena_C_ExecuteUbergraph_BGA_RiftPortal_Item_Athena");
static_assert(offsetof(BGA_RiftPortal_Item_Athena_C_ExecuteUbergraph_BGA_RiftPortal_Item_Athena, EntryPoint) == 0x000000, "Member 'BGA_RiftPortal_Item_Athena_C_ExecuteUbergraph_BGA_RiftPortal_Item_Athena::EntryPoint' has a wrong offset!");
static_assert(offsetof(BGA_RiftPortal_Item_Athena_C_ExecuteUbergraph_BGA_RiftPortal_Item_Athena, Temp_int_Array_Index_Variable) == 0x000004, "Member 'BGA_RiftPortal_Item_Athena_C_ExecuteUbergraph_BGA_RiftPortal_Item_Athena::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(BGA_RiftPortal_Item_Athena_C_ExecuteUbergraph_BGA_RiftPortal_Item_Athena, Temp_int_Loop_Counter_Variable) == 0x000008, "Member 'BGA_RiftPortal_Item_Athena_C_ExecuteUbergraph_BGA_RiftPortal_Item_Athena::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(BGA_RiftPortal_Item_Athena_C_ExecuteUbergraph_BGA_RiftPortal_Item_Athena, CallFunc_Add_IntInt_ReturnValue) == 0x00000C, "Member 'BGA_RiftPortal_Item_Athena_C_ExecuteUbergraph_BGA_RiftPortal_Item_Athena::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BGA_RiftPortal_Item_Athena_C_ExecuteUbergraph_BGA_RiftPortal_Item_Athena, CallFunc_K2_GetActorLocation_ReturnValue) == 0x000010, "Member 'BGA_RiftPortal_Item_Athena_C_ExecuteUbergraph_BGA_RiftPortal_Item_Athena::CallFunc_K2_GetActorLocation_ReturnValue' has a wrong offset!");
static_assert(offsetof(BGA_RiftPortal_Item_Athena_C_ExecuteUbergraph_BGA_RiftPortal_Item_Athena, Temp_int_Loop_Counter_Variable1) == 0x00001C, "Member 'BGA_RiftPortal_Item_Athena_C_ExecuteUbergraph_BGA_RiftPortal_Item_Athena::Temp_int_Loop_Counter_Variable1' has a wrong offset!");
static_assert(offsetof(BGA_RiftPortal_Item_Athena_C_ExecuteUbergraph_BGA_RiftPortal_Item_Athena, CallFunc_HasAuthority_ReturnValue) == 0x000020, "Member 'BGA_RiftPortal_Item_Athena_C_ExecuteUbergraph_BGA_RiftPortal_Item_Athena::CallFunc_HasAuthority_ReturnValue' has a wrong offset!");
static_assert(offsetof(BGA_RiftPortal_Item_Athena_C_ExecuteUbergraph_BGA_RiftPortal_Item_Athena, CallFunc_Add_IntInt_ReturnValue1) == 0x000024, "Member 'BGA_RiftPortal_Item_Athena_C_ExecuteUbergraph_BGA_RiftPortal_Item_Athena::CallFunc_Add_IntInt_ReturnValue1' has a wrong offset!");
static_assert(offsetof(BGA_RiftPortal_Item_Athena_C_ExecuteUbergraph_BGA_RiftPortal_Item_Athena, K2Node_ComponentBoundEvent_OverlappedComponent2) == 0x000028, "Member 'BGA_RiftPortal_Item_Athena_C_ExecuteUbergraph_BGA_RiftPortal_Item_Athena::K2Node_ComponentBoundEvent_OverlappedComponent2' has a wrong offset!");
static_assert(offsetof(BGA_RiftPortal_Item_Athena_C_ExecuteUbergraph_BGA_RiftPortal_Item_Athena, K2Node_ComponentBoundEvent_OtherActor2) == 0x000030, "Member 'BGA_RiftPortal_Item_Athena_C_ExecuteUbergraph_BGA_RiftPortal_Item_Athena::K2Node_ComponentBoundEvent_OtherActor2' has a wrong offset!");
static_assert(offsetof(BGA_RiftPortal_Item_Athena_C_ExecuteUbergraph_BGA_RiftPortal_Item_Athena, K2Node_ComponentBoundEvent_OtherComp2) == 0x000038, "Member 'BGA_RiftPortal_Item_Athena_C_ExecuteUbergraph_BGA_RiftPortal_Item_Athena::K2Node_ComponentBoundEvent_OtherComp2' has a wrong offset!");
static_assert(offsetof(BGA_RiftPortal_Item_Athena_C_ExecuteUbergraph_BGA_RiftPortal_Item_Athena, K2Node_ComponentBoundEvent_OtherBodyIndex2) == 0x000040, "Member 'BGA_RiftPortal_Item_Athena_C_ExecuteUbergraph_BGA_RiftPortal_Item_Athena::K2Node_ComponentBoundEvent_OtherBodyIndex2' has a wrong offset!");
static_assert(offsetof(BGA_RiftPortal_Item_Athena_C_ExecuteUbergraph_BGA_RiftPortal_Item_Athena, K2Node_ComponentBoundEvent_bFromSweep1) == 0x000044, "Member 'BGA_RiftPortal_Item_Athena_C_ExecuteUbergraph_BGA_RiftPortal_Item_Athena::K2Node_ComponentBoundEvent_bFromSweep1' has a wrong offset!");
static_assert(offsetof(BGA_RiftPortal_Item_Athena_C_ExecuteUbergraph_BGA_RiftPortal_Item_Athena, K2Node_ComponentBoundEvent_SweepResult1) == 0x000048, "Member 'BGA_RiftPortal_Item_Athena_C_ExecuteUbergraph_BGA_RiftPortal_Item_Athena::K2Node_ComponentBoundEvent_SweepResult1' has a wrong offset!");
static_assert(offsetof(BGA_RiftPortal_Item_Athena_C_ExecuteUbergraph_BGA_RiftPortal_Item_Athena, K2Node_ComponentBoundEvent_OverlappedComponent1) == 0x0000D0, "Member 'BGA_RiftPortal_Item_Athena_C_ExecuteUbergraph_BGA_RiftPortal_Item_Athena::K2Node_ComponentBoundEvent_OverlappedComponent1' has a wrong offset!");
static_assert(offsetof(BGA_RiftPortal_Item_Athena_C_ExecuteUbergraph_BGA_RiftPortal_Item_Athena, K2Node_ComponentBoundEvent_OtherActor1) == 0x0000D8, "Member 'BGA_RiftPortal_Item_Athena_C_ExecuteUbergraph_BGA_RiftPortal_Item_Athena::K2Node_ComponentBoundEvent_OtherActor1' has a wrong offset!");
static_assert(offsetof(BGA_RiftPortal_Item_Athena_C_ExecuteUbergraph_BGA_RiftPortal_Item_Athena, K2Node_ComponentBoundEvent_OtherComp1) == 0x0000E0, "Member 'BGA_RiftPortal_Item_Athena_C_ExecuteUbergraph_BGA_RiftPortal_Item_Athena::K2Node_ComponentBoundEvent_OtherComp1' has a wrong offset!");
static_assert(offsetof(BGA_RiftPortal_Item_Athena_C_ExecuteUbergraph_BGA_RiftPortal_Item_Athena, K2Node_ComponentBoundEvent_OtherBodyIndex1) == 0x0000E8, "Member 'BGA_RiftPortal_Item_Athena_C_ExecuteUbergraph_BGA_RiftPortal_Item_Athena::K2Node_ComponentBoundEvent_OtherBodyIndex1' has a wrong offset!");
static_assert(offsetof(BGA_RiftPortal_Item_Athena_C_ExecuteUbergraph_BGA_RiftPortal_Item_Athena, K2Node_ComponentBoundEvent_bFromSweep) == 0x0000EC, "Member 'BGA_RiftPortal_Item_Athena_C_ExecuteUbergraph_BGA_RiftPortal_Item_Athena::K2Node_ComponentBoundEvent_bFromSweep' has a wrong offset!");
static_assert(offsetof(BGA_RiftPortal_Item_Athena_C_ExecuteUbergraph_BGA_RiftPortal_Item_Athena, K2Node_ComponentBoundEvent_SweepResult) == 0x0000F0, "Member 'BGA_RiftPortal_Item_Athena_C_ExecuteUbergraph_BGA_RiftPortal_Item_Athena::K2Node_ComponentBoundEvent_SweepResult' has a wrong offset!");
static_assert(offsetof(BGA_RiftPortal_Item_Athena_C_ExecuteUbergraph_BGA_RiftPortal_Item_Athena, K2Node_DynamicCast_AsFort_Player_Pawn) == 0x000178, "Member 'BGA_RiftPortal_Item_Athena_C_ExecuteUbergraph_BGA_RiftPortal_Item_Athena::K2Node_DynamicCast_AsFort_Player_Pawn' has a wrong offset!");
static_assert(offsetof(BGA_RiftPortal_Item_Athena_C_ExecuteUbergraph_BGA_RiftPortal_Item_Athena, K2Node_DynamicCast_bSuccess) == 0x000180, "Member 'BGA_RiftPortal_Item_Athena_C_ExecuteUbergraph_BGA_RiftPortal_Item_Athena::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(BGA_RiftPortal_Item_Athena_C_ExecuteUbergraph_BGA_RiftPortal_Item_Athena, K2Node_ComponentBoundEvent_OverlappedComponent) == 0x000188, "Member 'BGA_RiftPortal_Item_Athena_C_ExecuteUbergraph_BGA_RiftPortal_Item_Athena::K2Node_ComponentBoundEvent_OverlappedComponent' has a wrong offset!");
static_assert(offsetof(BGA_RiftPortal_Item_Athena_C_ExecuteUbergraph_BGA_RiftPortal_Item_Athena, K2Node_ComponentBoundEvent_OtherActor) == 0x000190, "Member 'BGA_RiftPortal_Item_Athena_C_ExecuteUbergraph_BGA_RiftPortal_Item_Athena::K2Node_ComponentBoundEvent_OtherActor' has a wrong offset!");
static_assert(offsetof(BGA_RiftPortal_Item_Athena_C_ExecuteUbergraph_BGA_RiftPortal_Item_Athena, K2Node_ComponentBoundEvent_OtherComp) == 0x000198, "Member 'BGA_RiftPortal_Item_Athena_C_ExecuteUbergraph_BGA_RiftPortal_Item_Athena::K2Node_ComponentBoundEvent_OtherComp' has a wrong offset!");
static_assert(offsetof(BGA_RiftPortal_Item_Athena_C_ExecuteUbergraph_BGA_RiftPortal_Item_Athena, K2Node_ComponentBoundEvent_OtherBodyIndex) == 0x0001A0, "Member 'BGA_RiftPortal_Item_Athena_C_ExecuteUbergraph_BGA_RiftPortal_Item_Athena::K2Node_ComponentBoundEvent_OtherBodyIndex' has a wrong offset!");
static_assert(offsetof(BGA_RiftPortal_Item_Athena_C_ExecuteUbergraph_BGA_RiftPortal_Item_Athena, K2Node_DynamicCast_AsFort_Player_Pawn_Athena) == 0x0001A8, "Member 'BGA_RiftPortal_Item_Athena_C_ExecuteUbergraph_BGA_RiftPortal_Item_Athena::K2Node_DynamicCast_AsFort_Player_Pawn_Athena' has a wrong offset!");
static_assert(offsetof(BGA_RiftPortal_Item_Athena_C_ExecuteUbergraph_BGA_RiftPortal_Item_Athena, K2Node_DynamicCast_bSuccess1) == 0x0001B0, "Member 'BGA_RiftPortal_Item_Athena_C_ExecuteUbergraph_BGA_RiftPortal_Item_Athena::K2Node_DynamicCast_bSuccess1' has a wrong offset!");
static_assert(offsetof(BGA_RiftPortal_Item_Athena_C_ExecuteUbergraph_BGA_RiftPortal_Item_Athena, CallFunc_GetOverlappingActors_OverlappingActors) == 0x0001B8, "Member 'BGA_RiftPortal_Item_Athena_C_ExecuteUbergraph_BGA_RiftPortal_Item_Athena::CallFunc_GetOverlappingActors_OverlappingActors' has a wrong offset!");
static_assert(offsetof(BGA_RiftPortal_Item_Athena_C_ExecuteUbergraph_BGA_RiftPortal_Item_Athena, Temp_int_Array_Index_Variable1) == 0x0001C8, "Member 'BGA_RiftPortal_Item_Athena_C_ExecuteUbergraph_BGA_RiftPortal_Item_Athena::Temp_int_Array_Index_Variable1' has a wrong offset!");
static_assert(offsetof(BGA_RiftPortal_Item_Athena_C_ExecuteUbergraph_BGA_RiftPortal_Item_Athena, CallFunc_Array_Length_ReturnValue) == 0x0001CC, "Member 'BGA_RiftPortal_Item_Athena_C_ExecuteUbergraph_BGA_RiftPortal_Item_Athena::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(BGA_RiftPortal_Item_Athena_C_ExecuteUbergraph_BGA_RiftPortal_Item_Athena, CallFunc_LessEqual_IntInt_ReturnValue) == 0x0001D0, "Member 'BGA_RiftPortal_Item_Athena_C_ExecuteUbergraph_BGA_RiftPortal_Item_Athena::CallFunc_LessEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BGA_RiftPortal_Item_Athena_C_ExecuteUbergraph_BGA_RiftPortal_Item_Athena, CallFunc_GetValueAtLevel_ReturnValue) == 0x0001D4, "Member 'BGA_RiftPortal_Item_Athena_C_ExecuteUbergraph_BGA_RiftPortal_Item_Athena::CallFunc_GetValueAtLevel_ReturnValue' has a wrong offset!");
static_assert(offsetof(BGA_RiftPortal_Item_Athena_C_ExecuteUbergraph_BGA_RiftPortal_Item_Athena, CallFunc_Add_FloatFloat_ReturnValue) == 0x0001D8, "Member 'BGA_RiftPortal_Item_Athena_C_ExecuteUbergraph_BGA_RiftPortal_Item_Athena::CallFunc_Add_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BGA_RiftPortal_Item_Athena_C_ExecuteUbergraph_BGA_RiftPortal_Item_Athena, K2Node_CustomEvent_PlayerLocation) == 0x0001DC, "Member 'BGA_RiftPortal_Item_Athena_C_ExecuteUbergraph_BGA_RiftPortal_Item_Athena::K2Node_CustomEvent_PlayerLocation' has a wrong offset!");
static_assert(offsetof(BGA_RiftPortal_Item_Athena_C_ExecuteUbergraph_BGA_RiftPortal_Item_Athena, CallFunc_SpawnEmitterAtLocation_ReturnValue) == 0x0001E8, "Member 'BGA_RiftPortal_Item_Athena_C_ExecuteUbergraph_BGA_RiftPortal_Item_Athena::CallFunc_SpawnEmitterAtLocation_ReturnValue' has a wrong offset!");
static_assert(offsetof(BGA_RiftPortal_Item_Athena_C_ExecuteUbergraph_BGA_RiftPortal_Item_Athena, CallFunc_RandomFloatInRange_ReturnValue) == 0x0001F0, "Member 'BGA_RiftPortal_Item_Athena_C_ExecuteUbergraph_BGA_RiftPortal_Item_Athena::CallFunc_RandomFloatInRange_ReturnValue' has a wrong offset!");
static_assert(offsetof(BGA_RiftPortal_Item_Athena_C_ExecuteUbergraph_BGA_RiftPortal_Item_Athena, CallFunc_MakeRotator_ReturnValue) == 0x0001F4, "Member 'BGA_RiftPortal_Item_Athena_C_ExecuteUbergraph_BGA_RiftPortal_Item_Athena::CallFunc_MakeRotator_ReturnValue' has a wrong offset!");
static_assert(offsetof(BGA_RiftPortal_Item_Athena_C_ExecuteUbergraph_BGA_RiftPortal_Item_Athena, CallFunc_IsPlaying_ReturnValue) == 0x000200, "Member 'BGA_RiftPortal_Item_Athena_C_ExecuteUbergraph_BGA_RiftPortal_Item_Athena::CallFunc_IsPlaying_ReturnValue' has a wrong offset!");
static_assert(offsetof(BGA_RiftPortal_Item_Athena_C_ExecuteUbergraph_BGA_RiftPortal_Item_Athena, CallFunc_HasAuthority_ReturnValue1) == 0x000201, "Member 'BGA_RiftPortal_Item_Athena_C_ExecuteUbergraph_BGA_RiftPortal_Item_Athena::CallFunc_HasAuthority_ReturnValue1' has a wrong offset!");
static_assert(offsetof(BGA_RiftPortal_Item_Athena_C_ExecuteUbergraph_BGA_RiftPortal_Item_Athena, K2Node_CreateDelegate_OutputDelegate) == 0x000204, "Member 'BGA_RiftPortal_Item_Athena_C_ExecuteUbergraph_BGA_RiftPortal_Item_Athena::K2Node_CreateDelegate_OutputDelegate' has a wrong offset!");
static_assert(offsetof(BGA_RiftPortal_Item_Athena_C_ExecuteUbergraph_BGA_RiftPortal_Item_Athena, CallFunc_Add_VectorVector_ReturnValue) == 0x000214, "Member 'BGA_RiftPortal_Item_Athena_C_ExecuteUbergraph_BGA_RiftPortal_Item_Athena::CallFunc_Add_VectorVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(BGA_RiftPortal_Item_Athena_C_ExecuteUbergraph_BGA_RiftPortal_Item_Athena, K2Node_CreateDelegate_OutputDelegate1) == 0x000220, "Member 'BGA_RiftPortal_Item_Athena_C_ExecuteUbergraph_BGA_RiftPortal_Item_Athena::K2Node_CreateDelegate_OutputDelegate1' has a wrong offset!");
static_assert(offsetof(BGA_RiftPortal_Item_Athena_C_ExecuteUbergraph_BGA_RiftPortal_Item_Athena, CallFunc_K2_GetActorLocation_ReturnValue1) == 0x000230, "Member 'BGA_RiftPortal_Item_Athena_C_ExecuteUbergraph_BGA_RiftPortal_Item_Athena::CallFunc_K2_GetActorLocation_ReturnValue1' has a wrong offset!");
static_assert(offsetof(BGA_RiftPortal_Item_Athena_C_ExecuteUbergraph_BGA_RiftPortal_Item_Athena, CallFunc_IsValid_ReturnValue) == 0x00023C, "Member 'BGA_RiftPortal_Item_Athena_C_ExecuteUbergraph_BGA_RiftPortal_Item_Athena::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BGA_RiftPortal_Item_Athena_C_ExecuteUbergraph_BGA_RiftPortal_Item_Athena, K2Node_DynamicCast_AsFort_Athena_Vehicle) == 0x000240, "Member 'BGA_RiftPortal_Item_Athena_C_ExecuteUbergraph_BGA_RiftPortal_Item_Athena::K2Node_DynamicCast_AsFort_Athena_Vehicle' has a wrong offset!");
static_assert(offsetof(BGA_RiftPortal_Item_Athena_C_ExecuteUbergraph_BGA_RiftPortal_Item_Athena, K2Node_DynamicCast_bSuccess2) == 0x000248, "Member 'BGA_RiftPortal_Item_Athena_C_ExecuteUbergraph_BGA_RiftPortal_Item_Athena::K2Node_DynamicCast_bSuccess2' has a wrong offset!");
static_assert(offsetof(BGA_RiftPortal_Item_Athena_C_ExecuteUbergraph_BGA_RiftPortal_Item_Athena, K2Node_DynamicCast_AsFort_Player_Pawn1) == 0x000250, "Member 'BGA_RiftPortal_Item_Athena_C_ExecuteUbergraph_BGA_RiftPortal_Item_Athena::K2Node_DynamicCast_AsFort_Player_Pawn1' has a wrong offset!");
static_assert(offsetof(BGA_RiftPortal_Item_Athena_C_ExecuteUbergraph_BGA_RiftPortal_Item_Athena, K2Node_DynamicCast_bSuccess3) == 0x000258, "Member 'BGA_RiftPortal_Item_Athena_C_ExecuteUbergraph_BGA_RiftPortal_Item_Athena::K2Node_DynamicCast_bSuccess3' has a wrong offset!");
static_assert(offsetof(BGA_RiftPortal_Item_Athena_C_ExecuteUbergraph_BGA_RiftPortal_Item_Athena, K2Node_Event_Actor) == 0x000260, "Member 'BGA_RiftPortal_Item_Athena_C_ExecuteUbergraph_BGA_RiftPortal_Item_Athena::K2Node_Event_Actor' has a wrong offset!");
static_assert(offsetof(BGA_RiftPortal_Item_Athena_C_ExecuteUbergraph_BGA_RiftPortal_Item_Athena, CallFunc_ApplyGlobalEnvironmentGameplayEffectToActor_ReturnValue) == 0x000268, "Member 'BGA_RiftPortal_Item_Athena_C_ExecuteUbergraph_BGA_RiftPortal_Item_Athena::CallFunc_ApplyGlobalEnvironmentGameplayEffectToActor_ReturnValue' has a wrong offset!");
static_assert(offsetof(BGA_RiftPortal_Item_Athena_C_ExecuteUbergraph_BGA_RiftPortal_Item_Athena, CallFunc_GetVehicle_ReturnValue) == 0x000270, "Member 'BGA_RiftPortal_Item_Athena_C_ExecuteUbergraph_BGA_RiftPortal_Item_Athena::CallFunc_GetVehicle_ReturnValue' has a wrong offset!");
static_assert(offsetof(BGA_RiftPortal_Item_Athena_C_ExecuteUbergraph_BGA_RiftPortal_Item_Athena, CallFunc_HasDriver_ReturnValue) == 0x000278, "Member 'BGA_RiftPortal_Item_Athena_C_ExecuteUbergraph_BGA_RiftPortal_Item_Athena::CallFunc_HasDriver_ReturnValue' has a wrong offset!");
static_assert(offsetof(BGA_RiftPortal_Item_Athena_C_ExecuteUbergraph_BGA_RiftPortal_Item_Athena, CallFunc_IsInVehicle_ReturnValue) == 0x000279, "Member 'BGA_RiftPortal_Item_Athena_C_ExecuteUbergraph_BGA_RiftPortal_Item_Athena::CallFunc_IsInVehicle_ReturnValue' has a wrong offset!");
static_assert(offsetof(BGA_RiftPortal_Item_Athena_C_ExecuteUbergraph_BGA_RiftPortal_Item_Athena, CallFunc_K2_GetActorLocation_ReturnValue2) == 0x00027C, "Member 'BGA_RiftPortal_Item_Athena_C_ExecuteUbergraph_BGA_RiftPortal_Item_Athena::CallFunc_K2_GetActorLocation_ReturnValue2' has a wrong offset!");
static_assert(offsetof(BGA_RiftPortal_Item_Athena_C_ExecuteUbergraph_BGA_RiftPortal_Item_Athena, CallFunc_HasAuthority_ReturnValue2) == 0x000288, "Member 'BGA_RiftPortal_Item_Athena_C_ExecuteUbergraph_BGA_RiftPortal_Item_Athena::CallFunc_HasAuthority_ReturnValue2' has a wrong offset!");
static_assert(offsetof(BGA_RiftPortal_Item_Athena_C_ExecuteUbergraph_BGA_RiftPortal_Item_Athena, CallFunc_K2_GetActorLocation_ReturnValue3) == 0x00028C, "Member 'BGA_RiftPortal_Item_Athena_C_ExecuteUbergraph_BGA_RiftPortal_Item_Athena::CallFunc_K2_GetActorLocation_ReturnValue3' has a wrong offset!");
static_assert(offsetof(BGA_RiftPortal_Item_Athena_C_ExecuteUbergraph_BGA_RiftPortal_Item_Athena, CallFunc_BreakVector_X) == 0x000298, "Member 'BGA_RiftPortal_Item_Athena_C_ExecuteUbergraph_BGA_RiftPortal_Item_Athena::CallFunc_BreakVector_X' has a wrong offset!");
static_assert(offsetof(BGA_RiftPortal_Item_Athena_C_ExecuteUbergraph_BGA_RiftPortal_Item_Athena, CallFunc_BreakVector_Y) == 0x00029C, "Member 'BGA_RiftPortal_Item_Athena_C_ExecuteUbergraph_BGA_RiftPortal_Item_Athena::CallFunc_BreakVector_Y' has a wrong offset!");
static_assert(offsetof(BGA_RiftPortal_Item_Athena_C_ExecuteUbergraph_BGA_RiftPortal_Item_Athena, CallFunc_BreakVector_Z) == 0x0002A0, "Member 'BGA_RiftPortal_Item_Athena_C_ExecuteUbergraph_BGA_RiftPortal_Item_Athena::CallFunc_BreakVector_Z' has a wrong offset!");
static_assert(offsetof(BGA_RiftPortal_Item_Athena_C_ExecuteUbergraph_BGA_RiftPortal_Item_Athena, CallFunc_GetValueAtLevel_ReturnValue1) == 0x0002A4, "Member 'BGA_RiftPortal_Item_Athena_C_ExecuteUbergraph_BGA_RiftPortal_Item_Athena::CallFunc_GetValueAtLevel_ReturnValue1' has a wrong offset!");
static_assert(offsetof(BGA_RiftPortal_Item_Athena_C_ExecuteUbergraph_BGA_RiftPortal_Item_Athena, CallFunc_Add_VectorVector_ReturnValue1) == 0x0002A8, "Member 'BGA_RiftPortal_Item_Athena_C_ExecuteUbergraph_BGA_RiftPortal_Item_Athena::CallFunc_Add_VectorVector_ReturnValue1' has a wrong offset!");
static_assert(offsetof(BGA_RiftPortal_Item_Athena_C_ExecuteUbergraph_BGA_RiftPortal_Item_Athena, CallFunc_MakeVector_ReturnValue) == 0x0002B4, "Member 'BGA_RiftPortal_Item_Athena_C_ExecuteUbergraph_BGA_RiftPortal_Item_Athena::CallFunc_MakeVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(BGA_RiftPortal_Item_Athena_C_ExecuteUbergraph_BGA_RiftPortal_Item_Athena, CallFunc_SpawnEmitterAtLocation_ReturnValue1) == 0x0002C0, "Member 'BGA_RiftPortal_Item_Athena_C_ExecuteUbergraph_BGA_RiftPortal_Item_Athena::CallFunc_SpawnEmitterAtLocation_ReturnValue1' has a wrong offset!");
static_assert(offsetof(BGA_RiftPortal_Item_Athena_C_ExecuteUbergraph_BGA_RiftPortal_Item_Athena, CallFunc_GetAllPassengers_ReturnValue) == 0x0002C8, "Member 'BGA_RiftPortal_Item_Athena_C_ExecuteUbergraph_BGA_RiftPortal_Item_Athena::CallFunc_GetAllPassengers_ReturnValue' has a wrong offset!");
static_assert(offsetof(BGA_RiftPortal_Item_Athena_C_ExecuteUbergraph_BGA_RiftPortal_Item_Athena, CallFunc_HasDriver_ReturnValue1) == 0x0002D8, "Member 'BGA_RiftPortal_Item_Athena_C_ExecuteUbergraph_BGA_RiftPortal_Item_Athena::CallFunc_HasDriver_ReturnValue1' has a wrong offset!");
static_assert(offsetof(BGA_RiftPortal_Item_Athena_C_ExecuteUbergraph_BGA_RiftPortal_Item_Athena, CallFunc_Array_Length_ReturnValue1) == 0x0002DC, "Member 'BGA_RiftPortal_Item_Athena_C_ExecuteUbergraph_BGA_RiftPortal_Item_Athena::CallFunc_Array_Length_ReturnValue1' has a wrong offset!");
static_assert(offsetof(BGA_RiftPortal_Item_Athena_C_ExecuteUbergraph_BGA_RiftPortal_Item_Athena, CallFunc_EqualEqual_IntInt_ReturnValue) == 0x0002E0, "Member 'BGA_RiftPortal_Item_Athena_C_ExecuteUbergraph_BGA_RiftPortal_Item_Athena::CallFunc_EqualEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BGA_RiftPortal_Item_Athena_C_ExecuteUbergraph_BGA_RiftPortal_Item_Athena, K2Node_CreateDelegate_OutputDelegate2) == 0x0002E4, "Member 'BGA_RiftPortal_Item_Athena_C_ExecuteUbergraph_BGA_RiftPortal_Item_Athena::K2Node_CreateDelegate_OutputDelegate2' has a wrong offset!");
static_assert(offsetof(BGA_RiftPortal_Item_Athena_C_ExecuteUbergraph_BGA_RiftPortal_Item_Athena, CallFunc_GetValueAtLevel_ReturnValue2) == 0x0002F4, "Member 'BGA_RiftPortal_Item_Athena_C_ExecuteUbergraph_BGA_RiftPortal_Item_Athena::CallFunc_GetValueAtLevel_ReturnValue2' has a wrong offset!");
static_assert(offsetof(BGA_RiftPortal_Item_Athena_C_ExecuteUbergraph_BGA_RiftPortal_Item_Athena, CallFunc_SpawnSoundAtLocation_ReturnValue) == 0x0002F8, "Member 'BGA_RiftPortal_Item_Athena_C_ExecuteUbergraph_BGA_RiftPortal_Item_Athena::CallFunc_SpawnSoundAtLocation_ReturnValue' has a wrong offset!");
static_assert(offsetof(BGA_RiftPortal_Item_Athena_C_ExecuteUbergraph_BGA_RiftPortal_Item_Athena, CallFunc_K2_SetTimerDelegate_ReturnValue) == 0x000300, "Member 'BGA_RiftPortal_Item_Athena_C_ExecuteUbergraph_BGA_RiftPortal_Item_Athena::CallFunc_K2_SetTimerDelegate_ReturnValue' has a wrong offset!");
static_assert(offsetof(BGA_RiftPortal_Item_Athena_C_ExecuteUbergraph_BGA_RiftPortal_Item_Athena, K2Node_DynamicCast_AsFort_Player_Pawn2) == 0x000308, "Member 'BGA_RiftPortal_Item_Athena_C_ExecuteUbergraph_BGA_RiftPortal_Item_Athena::K2Node_DynamicCast_AsFort_Player_Pawn2' has a wrong offset!");
static_assert(offsetof(BGA_RiftPortal_Item_Athena_C_ExecuteUbergraph_BGA_RiftPortal_Item_Athena, K2Node_DynamicCast_bSuccess4) == 0x000310, "Member 'BGA_RiftPortal_Item_Athena_C_ExecuteUbergraph_BGA_RiftPortal_Item_Athena::K2Node_DynamicCast_bSuccess4' has a wrong offset!");
static_assert(offsetof(BGA_RiftPortal_Item_Athena_C_ExecuteUbergraph_BGA_RiftPortal_Item_Athena, CallFunc_IsLocallyControlled_ReturnValue) == 0x000311, "Member 'BGA_RiftPortal_Item_Athena_C_ExecuteUbergraph_BGA_RiftPortal_Item_Athena::CallFunc_IsLocallyControlled_ReturnValue' has a wrong offset!");
static_assert(offsetof(BGA_RiftPortal_Item_Athena_C_ExecuteUbergraph_BGA_RiftPortal_Item_Athena, CallFunc_IsDrivingVehicle_ReturnValue) == 0x000312, "Member 'BGA_RiftPortal_Item_Athena_C_ExecuteUbergraph_BGA_RiftPortal_Item_Athena::CallFunc_IsDrivingVehicle_ReturnValue' has a wrong offset!");
static_assert(offsetof(BGA_RiftPortal_Item_Athena_C_ExecuteUbergraph_BGA_RiftPortal_Item_Athena, CallFunc_BooleanAND_ReturnValue) == 0x000313, "Member 'BGA_RiftPortal_Item_Athena_C_ExecuteUbergraph_BGA_RiftPortal_Item_Athena::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");
static_assert(offsetof(BGA_RiftPortal_Item_Athena_C_ExecuteUbergraph_BGA_RiftPortal_Item_Athena, CallFunc_GetVehicle_ReturnValue1) == 0x000318, "Member 'BGA_RiftPortal_Item_Athena_C_ExecuteUbergraph_BGA_RiftPortal_Item_Athena::CallFunc_GetVehicle_ReturnValue1' has a wrong offset!");
static_assert(offsetof(BGA_RiftPortal_Item_Athena_C_ExecuteUbergraph_BGA_RiftPortal_Item_Athena, K2Node_Event_Vehicle) == 0x000320, "Member 'BGA_RiftPortal_Item_Athena_C_ExecuteUbergraph_BGA_RiftPortal_Item_Athena::K2Node_Event_Vehicle' has a wrong offset!");
static_assert(offsetof(BGA_RiftPortal_Item_Athena_C_ExecuteUbergraph_BGA_RiftPortal_Item_Athena, CallFunc_K2_GetActorLocation_ReturnValue4) == 0x000328, "Member 'BGA_RiftPortal_Item_Athena_C_ExecuteUbergraph_BGA_RiftPortal_Item_Athena::CallFunc_K2_GetActorLocation_ReturnValue4' has a wrong offset!");
static_assert(offsetof(BGA_RiftPortal_Item_Athena_C_ExecuteUbergraph_BGA_RiftPortal_Item_Athena, K2Node_DynamicCast_AsFort_Player_Pawn_Athena1) == 0x000338, "Member 'BGA_RiftPortal_Item_Athena_C_ExecuteUbergraph_BGA_RiftPortal_Item_Athena::K2Node_DynamicCast_AsFort_Player_Pawn_Athena1' has a wrong offset!");
static_assert(offsetof(BGA_RiftPortal_Item_Athena_C_ExecuteUbergraph_BGA_RiftPortal_Item_Athena, K2Node_DynamicCast_bSuccess5) == 0x000340, "Member 'BGA_RiftPortal_Item_Athena_C_ExecuteUbergraph_BGA_RiftPortal_Item_Athena::K2Node_DynamicCast_bSuccess5' has a wrong offset!");
static_assert(offsetof(BGA_RiftPortal_Item_Athena_C_ExecuteUbergraph_BGA_RiftPortal_Item_Athena, CallFunc_LocalIsTryingToEnterVehicle_ReturnValue) == 0x000341, "Member 'BGA_RiftPortal_Item_Athena_C_ExecuteUbergraph_BGA_RiftPortal_Item_Athena::CallFunc_LocalIsTryingToEnterVehicle_ReturnValue' has a wrong offset!");
static_assert(offsetof(BGA_RiftPortal_Item_Athena_C_ExecuteUbergraph_BGA_RiftPortal_Item_Athena, CallFunc_GetGameState_ReturnValue) == 0x000348, "Member 'BGA_RiftPortal_Item_Athena_C_ExecuteUbergraph_BGA_RiftPortal_Item_Athena::CallFunc_GetGameState_ReturnValue' has a wrong offset!");
static_assert(offsetof(BGA_RiftPortal_Item_Athena_C_ExecuteUbergraph_BGA_RiftPortal_Item_Athena, K2Node_CustomEvent_PlaylistName) == 0x000350, "Member 'BGA_RiftPortal_Item_Athena_C_ExecuteUbergraph_BGA_RiftPortal_Item_Athena::K2Node_CustomEvent_PlaylistName' has a wrong offset!");
static_assert(offsetof(BGA_RiftPortal_Item_Athena_C_ExecuteUbergraph_BGA_RiftPortal_Item_Athena, K2Node_CustomEvent_PlaylistContextTags) == 0x000358, "Member 'BGA_RiftPortal_Item_Athena_C_ExecuteUbergraph_BGA_RiftPortal_Item_Athena::K2Node_CustomEvent_PlaylistContextTags' has a wrong offset!");
static_assert(offsetof(BGA_RiftPortal_Item_Athena_C_ExecuteUbergraph_BGA_RiftPortal_Item_Athena, K2Node_DynamicCast_AsFort_Game_State_Athena) == 0x000378, "Member 'BGA_RiftPortal_Item_Athena_C_ExecuteUbergraph_BGA_RiftPortal_Item_Athena::K2Node_DynamicCast_AsFort_Game_State_Athena' has a wrong offset!");
static_assert(offsetof(BGA_RiftPortal_Item_Athena_C_ExecuteUbergraph_BGA_RiftPortal_Item_Athena, K2Node_DynamicCast_bSuccess6) == 0x000380, "Member 'BGA_RiftPortal_Item_Athena_C_ExecuteUbergraph_BGA_RiftPortal_Item_Athena::K2Node_DynamicCast_bSuccess6' has a wrong offset!");
static_assert(offsetof(BGA_RiftPortal_Item_Athena_C_ExecuteUbergraph_BGA_RiftPortal_Item_Athena, CallFunc_Athena_CheckCreativeMode_CanCompleteQuest) == 0x000381, "Member 'BGA_RiftPortal_Item_Athena_C_ExecuteUbergraph_BGA_RiftPortal_Item_Athena::CallFunc_Athena_CheckCreativeMode_CanCompleteQuest' has a wrong offset!");
static_assert(offsetof(BGA_RiftPortal_Item_Athena_C_ExecuteUbergraph_BGA_RiftPortal_Item_Athena, CallFunc_Athena_CheckCreativeMode_CanCompleteQuest1) == 0x000382, "Member 'BGA_RiftPortal_Item_Athena_C_ExecuteUbergraph_BGA_RiftPortal_Item_Athena::CallFunc_Athena_CheckCreativeMode_CanCompleteQuest1' has a wrong offset!");
static_assert(offsetof(BGA_RiftPortal_Item_Athena_C_ExecuteUbergraph_BGA_RiftPortal_Item_Athena, CallFunc_IsValid_ReturnValue1) == 0x000383, "Member 'BGA_RiftPortal_Item_Athena_C_ExecuteUbergraph_BGA_RiftPortal_Item_Athena::CallFunc_IsValid_ReturnValue1' has a wrong offset!");
static_assert(offsetof(BGA_RiftPortal_Item_Athena_C_ExecuteUbergraph_BGA_RiftPortal_Item_Athena, CallFunc_IsValid_ReturnValue2) == 0x000384, "Member 'BGA_RiftPortal_Item_Athena_C_ExecuteUbergraph_BGA_RiftPortal_Item_Athena::CallFunc_IsValid_ReturnValue2' has a wrong offset!");
static_assert(offsetof(BGA_RiftPortal_Item_Athena_C_ExecuteUbergraph_BGA_RiftPortal_Item_Athena, CallFunc_GetAllPassengers_ReturnValue1) == 0x000388, "Member 'BGA_RiftPortal_Item_Athena_C_ExecuteUbergraph_BGA_RiftPortal_Item_Athena::CallFunc_GetAllPassengers_ReturnValue1' has a wrong offset!");
static_assert(offsetof(BGA_RiftPortal_Item_Athena_C_ExecuteUbergraph_BGA_RiftPortal_Item_Athena, CallFunc_GetDriver_ReturnValue) == 0x000398, "Member 'BGA_RiftPortal_Item_Athena_C_ExecuteUbergraph_BGA_RiftPortal_Item_Athena::CallFunc_GetDriver_ReturnValue' has a wrong offset!");
static_assert(offsetof(BGA_RiftPortal_Item_Athena_C_ExecuteUbergraph_BGA_RiftPortal_Item_Athena, CallFunc_Array_Get_Item) == 0x0003A0, "Member 'BGA_RiftPortal_Item_Athena_C_ExecuteUbergraph_BGA_RiftPortal_Item_Athena::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(BGA_RiftPortal_Item_Athena_C_ExecuteUbergraph_BGA_RiftPortal_Item_Athena, CallFunc_IsValid_ReturnValue3) == 0x0003A8, "Member 'BGA_RiftPortal_Item_Athena_C_ExecuteUbergraph_BGA_RiftPortal_Item_Athena::CallFunc_IsValid_ReturnValue3' has a wrong offset!");
static_assert(offsetof(BGA_RiftPortal_Item_Athena_C_ExecuteUbergraph_BGA_RiftPortal_Item_Athena, CallFunc_IsValid_ReturnValue4) == 0x0003A9, "Member 'BGA_RiftPortal_Item_Athena_C_ExecuteUbergraph_BGA_RiftPortal_Item_Athena::CallFunc_IsValid_ReturnValue4' has a wrong offset!");
static_assert(offsetof(BGA_RiftPortal_Item_Athena_C_ExecuteUbergraph_BGA_RiftPortal_Item_Athena, CallFunc_GetController_ReturnValue) == 0x0003B0, "Member 'BGA_RiftPortal_Item_Athena_C_ExecuteUbergraph_BGA_RiftPortal_Item_Athena::CallFunc_GetController_ReturnValue' has a wrong offset!");
static_assert(offsetof(BGA_RiftPortal_Item_Athena_C_ExecuteUbergraph_BGA_RiftPortal_Item_Athena, CallFunc_GetController_ReturnValue1) == 0x0003B8, "Member 'BGA_RiftPortal_Item_Athena_C_ExecuteUbergraph_BGA_RiftPortal_Item_Athena::CallFunc_GetController_ReturnValue1' has a wrong offset!");
static_assert(offsetof(BGA_RiftPortal_Item_Athena_C_ExecuteUbergraph_BGA_RiftPortal_Item_Athena, CallFunc_Array_Length_ReturnValue2) == 0x0003C0, "Member 'BGA_RiftPortal_Item_Athena_C_ExecuteUbergraph_BGA_RiftPortal_Item_Athena::CallFunc_Array_Length_ReturnValue2' has a wrong offset!");
static_assert(offsetof(BGA_RiftPortal_Item_Athena_C_ExecuteUbergraph_BGA_RiftPortal_Item_Athena, CallFunc_GetController_ReturnValue2) == 0x0003C8, "Member 'BGA_RiftPortal_Item_Athena_C_ExecuteUbergraph_BGA_RiftPortal_Item_Athena::CallFunc_GetController_ReturnValue2' has a wrong offset!");
static_assert(offsetof(BGA_RiftPortal_Item_Athena_C_ExecuteUbergraph_BGA_RiftPortal_Item_Athena, CallFunc_Less_IntInt_ReturnValue) == 0x0003D0, "Member 'BGA_RiftPortal_Item_Athena_C_ExecuteUbergraph_BGA_RiftPortal_Item_Athena::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BGA_RiftPortal_Item_Athena_C_ExecuteUbergraph_BGA_RiftPortal_Item_Athena, CallFunc_IsDedicatedServer_ReturnValue) == 0x0003D1, "Member 'BGA_RiftPortal_Item_Athena_C_ExecuteUbergraph_BGA_RiftPortal_Item_Athena::CallFunc_IsDedicatedServer_ReturnValue' has a wrong offset!");
static_assert(offsetof(BGA_RiftPortal_Item_Athena_C_ExecuteUbergraph_BGA_RiftPortal_Item_Athena, CallFunc_K2_GetActorRotation_ReturnValue) == 0x0003D4, "Member 'BGA_RiftPortal_Item_Athena_C_ExecuteUbergraph_BGA_RiftPortal_Item_Athena::CallFunc_K2_GetActorRotation_ReturnValue' has a wrong offset!");
static_assert(offsetof(BGA_RiftPortal_Item_Athena_C_ExecuteUbergraph_BGA_RiftPortal_Item_Athena, CallFunc_BreakRotator_Roll) == 0x0003E0, "Member 'BGA_RiftPortal_Item_Athena_C_ExecuteUbergraph_BGA_RiftPortal_Item_Athena::CallFunc_BreakRotator_Roll' has a wrong offset!");
static_assert(offsetof(BGA_RiftPortal_Item_Athena_C_ExecuteUbergraph_BGA_RiftPortal_Item_Athena, CallFunc_BreakRotator_Pitch) == 0x0003E4, "Member 'BGA_RiftPortal_Item_Athena_C_ExecuteUbergraph_BGA_RiftPortal_Item_Athena::CallFunc_BreakRotator_Pitch' has a wrong offset!");
static_assert(offsetof(BGA_RiftPortal_Item_Athena_C_ExecuteUbergraph_BGA_RiftPortal_Item_Athena, CallFunc_BreakRotator_Yaw) == 0x0003E8, "Member 'BGA_RiftPortal_Item_Athena_C_ExecuteUbergraph_BGA_RiftPortal_Item_Athena::CallFunc_BreakRotator_Yaw' has a wrong offset!");
static_assert(offsetof(BGA_RiftPortal_Item_Athena_C_ExecuteUbergraph_BGA_RiftPortal_Item_Athena, CallFunc_MakeRotator_ReturnValue1) == 0x0003EC, "Member 'BGA_RiftPortal_Item_Athena_C_ExecuteUbergraph_BGA_RiftPortal_Item_Athena::CallFunc_MakeRotator_ReturnValue1' has a wrong offset!");
static_assert(offsetof(BGA_RiftPortal_Item_Athena_C_ExecuteUbergraph_BGA_RiftPortal_Item_Athena, CallFunc_Array_Get_Item1) == 0x0003F8, "Member 'BGA_RiftPortal_Item_Athena_C_ExecuteUbergraph_BGA_RiftPortal_Item_Athena::CallFunc_Array_Get_Item1' has a wrong offset!");
static_assert(offsetof(BGA_RiftPortal_Item_Athena_C_ExecuteUbergraph_BGA_RiftPortal_Item_Athena, CallFunc_Array_Length_ReturnValue3) == 0x000400, "Member 'BGA_RiftPortal_Item_Athena_C_ExecuteUbergraph_BGA_RiftPortal_Item_Athena::CallFunc_Array_Length_ReturnValue3' has a wrong offset!");
static_assert(offsetof(BGA_RiftPortal_Item_Athena_C_ExecuteUbergraph_BGA_RiftPortal_Item_Athena, CallFunc_Less_IntInt_ReturnValue1) == 0x000404, "Member 'BGA_RiftPortal_Item_Athena_C_ExecuteUbergraph_BGA_RiftPortal_Item_Athena::CallFunc_Less_IntInt_ReturnValue1' has a wrong offset!");
static_assert(offsetof(BGA_RiftPortal_Item_Athena_C_ExecuteUbergraph_BGA_RiftPortal_Item_Athena, CallFunc_GetAllPassengers_ReturnValue2) == 0x000408, "Member 'BGA_RiftPortal_Item_Athena_C_ExecuteUbergraph_BGA_RiftPortal_Item_Athena::CallFunc_GetAllPassengers_ReturnValue2' has a wrong offset!");
static_assert(offsetof(BGA_RiftPortal_Item_Athena_C_ExecuteUbergraph_BGA_RiftPortal_Item_Athena, K2Node_CustomEvent_FortPlayerPawnAthena) == 0x000418, "Member 'BGA_RiftPortal_Item_Athena_C_ExecuteUbergraph_BGA_RiftPortal_Item_Athena::K2Node_CustomEvent_FortPlayerPawnAthena' has a wrong offset!");
static_assert(offsetof(BGA_RiftPortal_Item_Athena_C_ExecuteUbergraph_BGA_RiftPortal_Item_Athena, CallFunc_GetOverlappingActors_OverlappingActors1) == 0x000420, "Member 'BGA_RiftPortal_Item_Athena_C_ExecuteUbergraph_BGA_RiftPortal_Item_Athena::CallFunc_GetOverlappingActors_OverlappingActors1' has a wrong offset!");
static_assert(offsetof(BGA_RiftPortal_Item_Athena_C_ExecuteUbergraph_BGA_RiftPortal_Item_Athena, CallFunc_Array_Contains_ReturnValue) == 0x000430, "Member 'BGA_RiftPortal_Item_Athena_C_ExecuteUbergraph_BGA_RiftPortal_Item_Athena::CallFunc_Array_Contains_ReturnValue' has a wrong offset!");
static_assert(offsetof(BGA_RiftPortal_Item_Athena_C_ExecuteUbergraph_BGA_RiftPortal_Item_Athena, CallFunc_Is_Flying_NewParam) == 0x000431, "Member 'BGA_RiftPortal_Item_Athena_C_ExecuteUbergraph_BGA_RiftPortal_Item_Athena::CallFunc_Is_Flying_NewParam' has a wrong offset!");
static_assert(offsetof(BGA_RiftPortal_Item_Athena_C_ExecuteUbergraph_BGA_RiftPortal_Item_Athena, CallFunc_Is_Flying_NewParam1) == 0x000432, "Member 'BGA_RiftPortal_Item_Athena_C_ExecuteUbergraph_BGA_RiftPortal_Item_Athena::CallFunc_Is_Flying_NewParam1' has a wrong offset!");
static_assert(offsetof(BGA_RiftPortal_Item_Athena_C_ExecuteUbergraph_BGA_RiftPortal_Item_Athena, CallFunc_CanTeleport_ReturnValue) == 0x000433, "Member 'BGA_RiftPortal_Item_Athena_C_ExecuteUbergraph_BGA_RiftPortal_Item_Athena::CallFunc_CanTeleport_ReturnValue' has a wrong offset!");
static_assert(offsetof(BGA_RiftPortal_Item_Athena_C_ExecuteUbergraph_BGA_RiftPortal_Item_Athena, CallFunc_SelectFloat_ReturnValue) == 0x000434, "Member 'BGA_RiftPortal_Item_Athena_C_ExecuteUbergraph_BGA_RiftPortal_Item_Athena::CallFunc_SelectFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BGA_RiftPortal_Item_Athena_C_ExecuteUbergraph_BGA_RiftPortal_Item_Athena, CallFunc_Multiply_FloatFloat_ReturnValue) == 0x000438, "Member 'BGA_RiftPortal_Item_Athena_C_ExecuteUbergraph_BGA_RiftPortal_Item_Athena::CallFunc_Multiply_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BGA_RiftPortal_Item_Athena_C_ExecuteUbergraph_BGA_RiftPortal_Item_Athena, CallFunc_MakeRotator_ReturnValue2) == 0x00043C, "Member 'BGA_RiftPortal_Item_Athena_C_ExecuteUbergraph_BGA_RiftPortal_Item_Athena::CallFunc_MakeRotator_ReturnValue2' has a wrong offset!");
static_assert(offsetof(BGA_RiftPortal_Item_Athena_C_ExecuteUbergraph_BGA_RiftPortal_Item_Athena, CallFunc_K2_GetActorLocation_ReturnValue5) == 0x000448, "Member 'BGA_RiftPortal_Item_Athena_C_ExecuteUbergraph_BGA_RiftPortal_Item_Athena::CallFunc_K2_GetActorLocation_ReturnValue5' has a wrong offset!");
static_assert(offsetof(BGA_RiftPortal_Item_Athena_C_ExecuteUbergraph_BGA_RiftPortal_Item_Athena, CallFunc_K2_SetRelativeRotation_SweepHitResult) == 0x000454, "Member 'BGA_RiftPortal_Item_Athena_C_ExecuteUbergraph_BGA_RiftPortal_Item_Athena::CallFunc_K2_SetRelativeRotation_SweepHitResult' has a wrong offset!");

// Function BGA_RiftPortal_Item_Athena.BGA_RiftPortal_Item_Athena_C.VehicleInteractionFailed
// 0x0008 (0x0008 - 0x0000)
struct BGA_RiftPortal_Item_Athena_C_VehicleInteractionFailed final
{
public:
	class AFortPlayerPawnAthena*                  FortPlayerPawnAthena;                              // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BGA_RiftPortal_Item_Athena_C_VehicleInteractionFailed) == 0x000008, "Wrong alignment on BGA_RiftPortal_Item_Athena_C_VehicleInteractionFailed");
static_assert(sizeof(BGA_RiftPortal_Item_Athena_C_VehicleInteractionFailed) == 0x000008, "Wrong size on BGA_RiftPortal_Item_Athena_C_VehicleInteractionFailed");
static_assert(offsetof(BGA_RiftPortal_Item_Athena_C_VehicleInteractionFailed, FortPlayerPawnAthena) == 0x000000, "Member 'BGA_RiftPortal_Item_Athena_C_VehicleInteractionFailed::FortPlayerPawnAthena' has a wrong offset!");

// Function BGA_RiftPortal_Item_Athena.BGA_RiftPortal_Item_Athena_C.PlaylistLoaded
// 0x0028 (0x0028 - 0x0000)
struct BGA_RiftPortal_Item_Athena_C_PlaylistLoaded final
{
public:
	class FName                                   PlaylistName;                                      // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FGameplayTagContainer                  PlaylistContextTags;                               // 0x0008(0x0020)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
};
static_assert(alignof(BGA_RiftPortal_Item_Athena_C_PlaylistLoaded) == 0x000008, "Wrong alignment on BGA_RiftPortal_Item_Athena_C_PlaylistLoaded");
static_assert(sizeof(BGA_RiftPortal_Item_Athena_C_PlaylistLoaded) == 0x000028, "Wrong size on BGA_RiftPortal_Item_Athena_C_PlaylistLoaded");
static_assert(offsetof(BGA_RiftPortal_Item_Athena_C_PlaylistLoaded, PlaylistName) == 0x000000, "Member 'BGA_RiftPortal_Item_Athena_C_PlaylistLoaded::PlaylistName' has a wrong offset!");
static_assert(offsetof(BGA_RiftPortal_Item_Athena_C_PlaylistLoaded, PlaylistContextTags) == 0x000008, "Member 'BGA_RiftPortal_Item_Athena_C_PlaylistLoaded::PlaylistContextTags' has a wrong offset!");

// Function BGA_RiftPortal_Item_Athena.BGA_RiftPortal_Item_Athena_C.NotifyTeleportedVehicle
// 0x0008 (0x0008 - 0x0000)
struct BGA_RiftPortal_Item_Athena_C_NotifyTeleportedVehicle final
{
public:
	class AFortAthenaVehicle*                     Vehicle_0;                                         // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BGA_RiftPortal_Item_Athena_C_NotifyTeleportedVehicle) == 0x000008, "Wrong alignment on BGA_RiftPortal_Item_Athena_C_NotifyTeleportedVehicle");
static_assert(sizeof(BGA_RiftPortal_Item_Athena_C_NotifyTeleportedVehicle) == 0x000008, "Wrong size on BGA_RiftPortal_Item_Athena_C_NotifyTeleportedVehicle");
static_assert(offsetof(BGA_RiftPortal_Item_Athena_C_NotifyTeleportedVehicle, Vehicle_0) == 0x000000, "Member 'BGA_RiftPortal_Item_Athena_C_NotifyTeleportedVehicle::Vehicle_0' has a wrong offset!");

// Function BGA_RiftPortal_Item_Athena.BGA_RiftPortal_Item_Athena_C.OverlappingOnBeginPlay
// 0x0008 (0x0008 - 0x0000)
struct BGA_RiftPortal_Item_Athena_C_OverlappingOnBeginPlay final
{
public:
	class AActor*                                 Actor;                                             // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BGA_RiftPortal_Item_Athena_C_OverlappingOnBeginPlay) == 0x000008, "Wrong alignment on BGA_RiftPortal_Item_Athena_C_OverlappingOnBeginPlay");
static_assert(sizeof(BGA_RiftPortal_Item_Athena_C_OverlappingOnBeginPlay) == 0x000008, "Wrong size on BGA_RiftPortal_Item_Athena_C_OverlappingOnBeginPlay");
static_assert(offsetof(BGA_RiftPortal_Item_Athena_C_OverlappingOnBeginPlay, Actor) == 0x000000, "Member 'BGA_RiftPortal_Item_Athena_C_OverlappingOnBeginPlay::Actor' has a wrong offset!");

// Function BGA_RiftPortal_Item_Athena.BGA_RiftPortal_Item_Athena_C.PlayTeleportFX
// 0x000C (0x000C - 0x0000)
struct BGA_RiftPortal_Item_Athena_C_PlayTeleportFX final
{
public:
	struct FVector                                PlayerLocation;                                    // 0x0000(0x000C)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BGA_RiftPortal_Item_Athena_C_PlayTeleportFX) == 0x000004, "Wrong alignment on BGA_RiftPortal_Item_Athena_C_PlayTeleportFX");
static_assert(sizeof(BGA_RiftPortal_Item_Athena_C_PlayTeleportFX) == 0x00000C, "Wrong size on BGA_RiftPortal_Item_Athena_C_PlayTeleportFX");
static_assert(offsetof(BGA_RiftPortal_Item_Athena_C_PlayTeleportFX, PlayerLocation) == 0x000000, "Member 'BGA_RiftPortal_Item_Athena_C_PlayTeleportFX::PlayerLocation' has a wrong offset!");

// Function BGA_RiftPortal_Item_Athena.BGA_RiftPortal_Item_Athena_C.BndEvt__Capsule_K2Node_ComponentBoundEvent_3_ComponentEndOverlapSignature__DelegateSignature
// 0x0020 (0x0020 - 0x0000)
struct BGA_RiftPortal_Item_Athena_C_BndEvt__Capsule_K2Node_ComponentBoundEvent_3_ComponentEndOverlapSignature__DelegateSignature final
{
public:
	class UPrimitiveComponent*                    OverlappedComponent;                               // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 OtherActor;                                        // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UPrimitiveComponent*                    OtherComp;                                         // 0x0010(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         OtherBodyIndex;                                    // 0x0018(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BGA_RiftPortal_Item_Athena_C_BndEvt__Capsule_K2Node_ComponentBoundEvent_3_ComponentEndOverlapSignature__DelegateSignature) == 0x000008, "Wrong alignment on BGA_RiftPortal_Item_Athena_C_BndEvt__Capsule_K2Node_ComponentBoundEvent_3_ComponentEndOverlapSignature__DelegateSignature");
static_assert(sizeof(BGA_RiftPortal_Item_Athena_C_BndEvt__Capsule_K2Node_ComponentBoundEvent_3_ComponentEndOverlapSignature__DelegateSignature) == 0x000020, "Wrong size on BGA_RiftPortal_Item_Athena_C_BndEvt__Capsule_K2Node_ComponentBoundEvent_3_ComponentEndOverlapSignature__DelegateSignature");
static_assert(offsetof(BGA_RiftPortal_Item_Athena_C_BndEvt__Capsule_K2Node_ComponentBoundEvent_3_ComponentEndOverlapSignature__DelegateSignature, OverlappedComponent) == 0x000000, "Member 'BGA_RiftPortal_Item_Athena_C_BndEvt__Capsule_K2Node_ComponentBoundEvent_3_ComponentEndOverlapSignature__DelegateSignature::OverlappedComponent' has a wrong offset!");
static_assert(offsetof(BGA_RiftPortal_Item_Athena_C_BndEvt__Capsule_K2Node_ComponentBoundEvent_3_ComponentEndOverlapSignature__DelegateSignature, OtherActor) == 0x000008, "Member 'BGA_RiftPortal_Item_Athena_C_BndEvt__Capsule_K2Node_ComponentBoundEvent_3_ComponentEndOverlapSignature__DelegateSignature::OtherActor' has a wrong offset!");
static_assert(offsetof(BGA_RiftPortal_Item_Athena_C_BndEvt__Capsule_K2Node_ComponentBoundEvent_3_ComponentEndOverlapSignature__DelegateSignature, OtherComp) == 0x000010, "Member 'BGA_RiftPortal_Item_Athena_C_BndEvt__Capsule_K2Node_ComponentBoundEvent_3_ComponentEndOverlapSignature__DelegateSignature::OtherComp' has a wrong offset!");
static_assert(offsetof(BGA_RiftPortal_Item_Athena_C_BndEvt__Capsule_K2Node_ComponentBoundEvent_3_ComponentEndOverlapSignature__DelegateSignature, OtherBodyIndex) == 0x000018, "Member 'BGA_RiftPortal_Item_Athena_C_BndEvt__Capsule_K2Node_ComponentBoundEvent_3_ComponentEndOverlapSignature__DelegateSignature::OtherBodyIndex' has a wrong offset!");

// Function BGA_RiftPortal_Item_Athena.BGA_RiftPortal_Item_Athena_C.BndEvt__Capsule_K2Node_ComponentBoundEvent_2_ComponentBeginOverlapSignature__DelegateSignature
// 0x00A8 (0x00A8 - 0x0000)
struct BGA_RiftPortal_Item_Athena_C_BndEvt__Capsule_K2Node_ComponentBoundEvent_2_ComponentBeginOverlapSignature__DelegateSignature final
{
public:
	class UPrimitiveComponent*                    OverlappedComponent;                               // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 OtherActor;                                        // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UPrimitiveComponent*                    OtherComp;                                         // 0x0010(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         OtherBodyIndex;                                    // 0x0018(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          bFromSweep;                                        // 0x001C(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1D[0x3];                                       // 0x001D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FHitResult                             SweepResult;                                       // 0x0020(0x0088)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm, IsPlainOldData, NoDestructor, ContainsInstancedReference)
};
static_assert(alignof(BGA_RiftPortal_Item_Athena_C_BndEvt__Capsule_K2Node_ComponentBoundEvent_2_ComponentBeginOverlapSignature__DelegateSignature) == 0x000008, "Wrong alignment on BGA_RiftPortal_Item_Athena_C_BndEvt__Capsule_K2Node_ComponentBoundEvent_2_ComponentBeginOverlapSignature__DelegateSignature");
static_assert(sizeof(BGA_RiftPortal_Item_Athena_C_BndEvt__Capsule_K2Node_ComponentBoundEvent_2_ComponentBeginOverlapSignature__DelegateSignature) == 0x0000A8, "Wrong size on BGA_RiftPortal_Item_Athena_C_BndEvt__Capsule_K2Node_ComponentBoundEvent_2_ComponentBeginOverlapSignature__DelegateSignature");
static_assert(offsetof(BGA_RiftPortal_Item_Athena_C_BndEvt__Capsule_K2Node_ComponentBoundEvent_2_ComponentBeginOverlapSignature__DelegateSignature, OverlappedComponent) == 0x000000, "Member 'BGA_RiftPortal_Item_Athena_C_BndEvt__Capsule_K2Node_ComponentBoundEvent_2_ComponentBeginOverlapSignature__DelegateSignature::OverlappedComponent' has a wrong offset!");
static_assert(offsetof(BGA_RiftPortal_Item_Athena_C_BndEvt__Capsule_K2Node_ComponentBoundEvent_2_ComponentBeginOverlapSignature__DelegateSignature, OtherActor) == 0x000008, "Member 'BGA_RiftPortal_Item_Athena_C_BndEvt__Capsule_K2Node_ComponentBoundEvent_2_ComponentBeginOverlapSignature__DelegateSignature::OtherActor' has a wrong offset!");
static_assert(offsetof(BGA_RiftPortal_Item_Athena_C_BndEvt__Capsule_K2Node_ComponentBoundEvent_2_ComponentBeginOverlapSignature__DelegateSignature, OtherComp) == 0x000010, "Member 'BGA_RiftPortal_Item_Athena_C_BndEvt__Capsule_K2Node_ComponentBoundEvent_2_ComponentBeginOverlapSignature__DelegateSignature::OtherComp' has a wrong offset!");
static_assert(offsetof(BGA_RiftPortal_Item_Athena_C_BndEvt__Capsule_K2Node_ComponentBoundEvent_2_ComponentBeginOverlapSignature__DelegateSignature, OtherBodyIndex) == 0x000018, "Member 'BGA_RiftPortal_Item_Athena_C_BndEvt__Capsule_K2Node_ComponentBoundEvent_2_ComponentBeginOverlapSignature__DelegateSignature::OtherBodyIndex' has a wrong offset!");
static_assert(offsetof(BGA_RiftPortal_Item_Athena_C_BndEvt__Capsule_K2Node_ComponentBoundEvent_2_ComponentBeginOverlapSignature__DelegateSignature, bFromSweep) == 0x00001C, "Member 'BGA_RiftPortal_Item_Athena_C_BndEvt__Capsule_K2Node_ComponentBoundEvent_2_ComponentBeginOverlapSignature__DelegateSignature::bFromSweep' has a wrong offset!");
static_assert(offsetof(BGA_RiftPortal_Item_Athena_C_BndEvt__Capsule_K2Node_ComponentBoundEvent_2_ComponentBeginOverlapSignature__DelegateSignature, SweepResult) == 0x000020, "Member 'BGA_RiftPortal_Item_Athena_C_BndEvt__Capsule_K2Node_ComponentBoundEvent_2_ComponentBeginOverlapSignature__DelegateSignature::SweepResult' has a wrong offset!");

// Function BGA_RiftPortal_Item_Athena.BGA_RiftPortal_Item_Athena_C.BndEvt__OverlapCapsule_K2Node_ComponentBoundEvent_1_ComponentBeginOverlapSignature__DelegateSignature
// 0x00A8 (0x00A8 - 0x0000)
struct BGA_RiftPortal_Item_Athena_C_BndEvt__OverlapCapsule_K2Node_ComponentBoundEvent_1_ComponentBeginOverlapSignature__DelegateSignature final
{
public:
	class UPrimitiveComponent*                    OverlappedComponent;                               // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 OtherActor;                                        // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UPrimitiveComponent*                    OtherComp;                                         // 0x0010(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         OtherBodyIndex;                                    // 0x0018(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          bFromSweep;                                        // 0x001C(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1D[0x3];                                       // 0x001D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FHitResult                             SweepResult;                                       // 0x0020(0x0088)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm, IsPlainOldData, NoDestructor, ContainsInstancedReference)
};
static_assert(alignof(BGA_RiftPortal_Item_Athena_C_BndEvt__OverlapCapsule_K2Node_ComponentBoundEvent_1_ComponentBeginOverlapSignature__DelegateSignature) == 0x000008, "Wrong alignment on BGA_RiftPortal_Item_Athena_C_BndEvt__OverlapCapsule_K2Node_ComponentBoundEvent_1_ComponentBeginOverlapSignature__DelegateSignature");
static_assert(sizeof(BGA_RiftPortal_Item_Athena_C_BndEvt__OverlapCapsule_K2Node_ComponentBoundEvent_1_ComponentBeginOverlapSignature__DelegateSignature) == 0x0000A8, "Wrong size on BGA_RiftPortal_Item_Athena_C_BndEvt__OverlapCapsule_K2Node_ComponentBoundEvent_1_ComponentBeginOverlapSignature__DelegateSignature");
static_assert(offsetof(BGA_RiftPortal_Item_Athena_C_BndEvt__OverlapCapsule_K2Node_ComponentBoundEvent_1_ComponentBeginOverlapSignature__DelegateSignature, OverlappedComponent) == 0x000000, "Member 'BGA_RiftPortal_Item_Athena_C_BndEvt__OverlapCapsule_K2Node_ComponentBoundEvent_1_ComponentBeginOverlapSignature__DelegateSignature::OverlappedComponent' has a wrong offset!");
static_assert(offsetof(BGA_RiftPortal_Item_Athena_C_BndEvt__OverlapCapsule_K2Node_ComponentBoundEvent_1_ComponentBeginOverlapSignature__DelegateSignature, OtherActor) == 0x000008, "Member 'BGA_RiftPortal_Item_Athena_C_BndEvt__OverlapCapsule_K2Node_ComponentBoundEvent_1_ComponentBeginOverlapSignature__DelegateSignature::OtherActor' has a wrong offset!");
static_assert(offsetof(BGA_RiftPortal_Item_Athena_C_BndEvt__OverlapCapsule_K2Node_ComponentBoundEvent_1_ComponentBeginOverlapSignature__DelegateSignature, OtherComp) == 0x000010, "Member 'BGA_RiftPortal_Item_Athena_C_BndEvt__OverlapCapsule_K2Node_ComponentBoundEvent_1_ComponentBeginOverlapSignature__DelegateSignature::OtherComp' has a wrong offset!");
static_assert(offsetof(BGA_RiftPortal_Item_Athena_C_BndEvt__OverlapCapsule_K2Node_ComponentBoundEvent_1_ComponentBeginOverlapSignature__DelegateSignature, OtherBodyIndex) == 0x000018, "Member 'BGA_RiftPortal_Item_Athena_C_BndEvt__OverlapCapsule_K2Node_ComponentBoundEvent_1_ComponentBeginOverlapSignature__DelegateSignature::OtherBodyIndex' has a wrong offset!");
static_assert(offsetof(BGA_RiftPortal_Item_Athena_C_BndEvt__OverlapCapsule_K2Node_ComponentBoundEvent_1_ComponentBeginOverlapSignature__DelegateSignature, bFromSweep) == 0x00001C, "Member 'BGA_RiftPortal_Item_Athena_C_BndEvt__OverlapCapsule_K2Node_ComponentBoundEvent_1_ComponentBeginOverlapSignature__DelegateSignature::bFromSweep' has a wrong offset!");
static_assert(offsetof(BGA_RiftPortal_Item_Athena_C_BndEvt__OverlapCapsule_K2Node_ComponentBoundEvent_1_ComponentBeginOverlapSignature__DelegateSignature, SweepResult) == 0x000020, "Member 'BGA_RiftPortal_Item_Athena_C_BndEvt__OverlapCapsule_K2Node_ComponentBoundEvent_1_ComponentBeginOverlapSignature__DelegateSignature::SweepResult' has a wrong offset!");

// Function BGA_RiftPortal_Item_Athena.BGA_RiftPortal_Item_Athena_C.PlayExpandOrCollapseAudio
// 0x0030 (0x0030 - 0x0000)
struct BGA_RiftPortal_Item_Athena_C_PlayExpandOrCollapseAudio final
{
public:
	bool                                          Expand;                                            // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          Temp_bool_Variable;                                // 0x0001(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_2[0x6];                                        // 0x0002(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class USoundBase*                             Temp_object_Variable;                              // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class USoundBase*                             Temp_object_Variable1;                             // 0x0010(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class USoundBase*                             K2Node_Select_Default;                             // 0x0018(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_K2_GetComponentLocation_ReturnValue;      // 0x0020(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BGA_RiftPortal_Item_Athena_C_PlayExpandOrCollapseAudio) == 0x000008, "Wrong alignment on BGA_RiftPortal_Item_Athena_C_PlayExpandOrCollapseAudio");
static_assert(sizeof(BGA_RiftPortal_Item_Athena_C_PlayExpandOrCollapseAudio) == 0x000030, "Wrong size on BGA_RiftPortal_Item_Athena_C_PlayExpandOrCollapseAudio");
static_assert(offsetof(BGA_RiftPortal_Item_Athena_C_PlayExpandOrCollapseAudio, Expand) == 0x000000, "Member 'BGA_RiftPortal_Item_Athena_C_PlayExpandOrCollapseAudio::Expand' has a wrong offset!");
static_assert(offsetof(BGA_RiftPortal_Item_Athena_C_PlayExpandOrCollapseAudio, Temp_bool_Variable) == 0x000001, "Member 'BGA_RiftPortal_Item_Athena_C_PlayExpandOrCollapseAudio::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(BGA_RiftPortal_Item_Athena_C_PlayExpandOrCollapseAudio, Temp_object_Variable) == 0x000008, "Member 'BGA_RiftPortal_Item_Athena_C_PlayExpandOrCollapseAudio::Temp_object_Variable' has a wrong offset!");
static_assert(offsetof(BGA_RiftPortal_Item_Athena_C_PlayExpandOrCollapseAudio, Temp_object_Variable1) == 0x000010, "Member 'BGA_RiftPortal_Item_Athena_C_PlayExpandOrCollapseAudio::Temp_object_Variable1' has a wrong offset!");
static_assert(offsetof(BGA_RiftPortal_Item_Athena_C_PlayExpandOrCollapseAudio, K2Node_Select_Default) == 0x000018, "Member 'BGA_RiftPortal_Item_Athena_C_PlayExpandOrCollapseAudio::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(BGA_RiftPortal_Item_Athena_C_PlayExpandOrCollapseAudio, CallFunc_K2_GetComponentLocation_ReturnValue) == 0x000020, "Member 'BGA_RiftPortal_Item_Athena_C_PlayExpandOrCollapseAudio::CallFunc_K2_GetComponentLocation_ReturnValue' has a wrong offset!");

// Function BGA_RiftPortal_Item_Athena.BGA_RiftPortal_Item_Athena_C.CheckForRiftLocUpdate
// 0x03A0 (0x03A0 - 0x0000)
struct BGA_RiftPortal_Item_Athena_C_CheckForRiftLocUpdate final
{
public:
	class AController*                            InController;                                      // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable;                                // 0x0008(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_9[0x7];                                        // 0x0009(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class APawn*                                  CallFunc_K2_GetPawn_ReturnValue;                   // 0x0010(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TScriptInterface<class IGameplayTagAssetInterface> K2Node_DynamicCast_AsGameplay_Tag_Asset_Interface; // 0x0018(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0028(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_29[0x7];                                       // 0x0029(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TScriptInterface<class IGameplayTagAssetInterface> K2Node_DynamicCast_AsGameplay_Tag_Asset_Interface1; // 0x0030(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_DynamicCast_bSuccess1;                      // 0x0040(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_HasMatchingGameplayTag_ReturnValue;       // 0x0041(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_HasMatchingGameplayTag_ReturnValue1;      // 0x0042(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_43[0x5];                                       // 0x0043(0x0005)(Fixing Size After Last Property [ Dumper-7 ])
	TScriptInterface<class IGameplayTagAssetInterface> K2Node_DynamicCast_AsGameplay_Tag_Asset_Interface2; // 0x0048(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_DynamicCast_bSuccess2;                      // 0x0058(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_59[0x7];                                       // 0x0059(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TScriptInterface<class IGameplayTagAssetInterface> K2Node_DynamicCast_AsGameplay_Tag_Asset_Interface3; // 0x0060(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_DynamicCast_bSuccess3;                      // 0x0070(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_HasMatchingGameplayTag_ReturnValue2;      // 0x0071(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_HasMatchingGameplayTag_ReturnValue3;      // 0x0072(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_73[0x5];                                       // 0x0073(0x0005)(Fixing Size After Last Property [ Dumper-7 ])
	TScriptInterface<class IGameplayTagAssetInterface> K2Node_DynamicCast_AsGameplay_Tag_Asset_Interface4; // 0x0078(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_DynamicCast_bSuccess4;                      // 0x0088(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_89[0x7];                                       // 0x0089(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TScriptInterface<class IGameplayTagAssetInterface> K2Node_DynamicCast_AsGameplay_Tag_Asset_Interface5; // 0x0090(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_DynamicCast_bSuccess5;                      // 0x00A0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_HasMatchingGameplayTag_ReturnValue4;      // 0x00A1(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_HasMatchingGameplayTag_ReturnValue5;      // 0x00A2(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_A3[0x5];                                       // 0x00A3(0x0005)(Fixing Size After Last Property [ Dumper-7 ])
	TScriptInterface<class IGameplayTagAssetInterface> K2Node_DynamicCast_AsGameplay_Tag_Asset_Interface6; // 0x00A8(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_DynamicCast_bSuccess6;                      // 0x00B8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_B9[0x7];                                       // 0x00B9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TScriptInterface<class IGameplayTagAssetInterface> K2Node_DynamicCast_AsGameplay_Tag_Asset_Interface7; // 0x00C0(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_DynamicCast_bSuccess7;                      // 0x00D0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_HasMatchingGameplayTag_ReturnValue6;      // 0x00D1(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_HasMatchingGameplayTag_ReturnValue7;      // 0x00D2(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_D3[0x5];                                       // 0x00D3(0x0005)(Fixing Size After Last Property [ Dumper-7 ])
	TScriptInterface<class IGameplayTagAssetInterface> K2Node_DynamicCast_AsGameplay_Tag_Asset_Interface8; // 0x00D8(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_DynamicCast_bSuccess8;                      // 0x00E8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_HasMatchingGameplayTag_ReturnValue8;      // 0x00E9(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_EA[0x6];                                       // 0x00EA(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	TScriptInterface<class IGameplayTagAssetInterface> K2Node_DynamicCast_AsGameplay_Tag_Asset_Interface9; // 0x00F0(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_DynamicCast_bSuccess9;                      // 0x0100(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_101[0x7];                                      // 0x0101(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TScriptInterface<class IGameplayTagAssetInterface> K2Node_DynamicCast_AsGameplay_Tag_Asset_Interface10; // 0x0108(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_DynamicCast_bSuccess10;                     // 0x0118(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_HasMatchingGameplayTag_ReturnValue9;      // 0x0119(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_HasMatchingGameplayTag_ReturnValue10;     // 0x011A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_11B[0x5];                                      // 0x011B(0x0005)(Fixing Size After Last Property [ Dumper-7 ])
	TScriptInterface<class IGameplayTagAssetInterface> K2Node_DynamicCast_AsGameplay_Tag_Asset_Interface11; // 0x0120(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_DynamicCast_bSuccess11;                     // 0x0130(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_131[0x7];                                      // 0x0131(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TScriptInterface<class IGameplayTagAssetInterface> K2Node_DynamicCast_AsGameplay_Tag_Asset_Interface12; // 0x0138(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_DynamicCast_bSuccess12;                     // 0x0148(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_HasMatchingGameplayTag_ReturnValue11;     // 0x0149(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_HasMatchingGameplayTag_ReturnValue12;     // 0x014A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_14B[0x5];                                      // 0x014B(0x0005)(Fixing Size After Last Property [ Dumper-7 ])
	TScriptInterface<class IGameplayTagAssetInterface> K2Node_DynamicCast_AsGameplay_Tag_Asset_Interface13; // 0x0150(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_DynamicCast_bSuccess13;                     // 0x0160(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_161[0x7];                                      // 0x0161(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TScriptInterface<class IGameplayTagAssetInterface> K2Node_DynamicCast_AsGameplay_Tag_Asset_Interface14; // 0x0168(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_DynamicCast_bSuccess14;                     // 0x0178(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_HasMatchingGameplayTag_ReturnValue13;     // 0x0179(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_HasMatchingGameplayTag_ReturnValue14;     // 0x017A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_17B[0x5];                                      // 0x017B(0x0005)(Fixing Size After Last Property [ Dumper-7 ])
	TScriptInterface<class IGameplayTagAssetInterface> K2Node_DynamicCast_AsGameplay_Tag_Asset_Interface15; // 0x0180(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_DynamicCast_bSuccess15;                     // 0x0190(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_191[0x7];                                      // 0x0191(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TScriptInterface<class IGameplayTagAssetInterface> K2Node_DynamicCast_AsGameplay_Tag_Asset_Interface16; // 0x0198(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_DynamicCast_bSuccess16;                     // 0x01A8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_HasMatchingGameplayTag_ReturnValue15;     // 0x01A9(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_HasMatchingGameplayTag_ReturnValue16;     // 0x01AA(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1AB[0x5];                                      // 0x01AB(0x0005)(Fixing Size After Last Property [ Dumper-7 ])
	TScriptInterface<class IGameplayTagAssetInterface> K2Node_DynamicCast_AsGameplay_Tag_Asset_Interface17; // 0x01B0(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_DynamicCast_bSuccess17;                     // 0x01C0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1C1[0x7];                                      // 0x01C1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TScriptInterface<class IGameplayTagAssetInterface> K2Node_DynamicCast_AsGameplay_Tag_Asset_Interface18; // 0x01C8(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_DynamicCast_bSuccess18;                     // 0x01D8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_HasMatchingGameplayTag_ReturnValue17;     // 0x01D9(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_HasMatchingGameplayTag_ReturnValue18;     // 0x01DA(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1DB[0x5];                                      // 0x01DB(0x0005)(Fixing Size After Last Property [ Dumper-7 ])
	TScriptInterface<class IGameplayTagAssetInterface> K2Node_DynamicCast_AsGameplay_Tag_Asset_Interface19; // 0x01E0(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_DynamicCast_bSuccess19;                     // 0x01F0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1F1[0x7];                                      // 0x01F1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TScriptInterface<class IGameplayTagAssetInterface> K2Node_DynamicCast_AsGameplay_Tag_Asset_Interface20; // 0x01F8(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_DynamicCast_bSuccess20;                     // 0x0208(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_HasMatchingGameplayTag_ReturnValue19;     // 0x0209(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_HasMatchingGameplayTag_ReturnValue20;     // 0x020A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_20B[0x5];                                      // 0x020B(0x0005)(Fixing Size After Last Property [ Dumper-7 ])
	TScriptInterface<class IGameplayTagAssetInterface> K2Node_DynamicCast_AsGameplay_Tag_Asset_Interface21; // 0x0210(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_DynamicCast_bSuccess21;                     // 0x0220(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_221[0x7];                                      // 0x0221(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TScriptInterface<class IGameplayTagAssetInterface> K2Node_DynamicCast_AsGameplay_Tag_Asset_Interface22; // 0x0228(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_DynamicCast_bSuccess22;                     // 0x0238(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_HasMatchingGameplayTag_ReturnValue21;     // 0x0239(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_HasMatchingGameplayTag_ReturnValue22;     // 0x023A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_23B[0x5];                                      // 0x023B(0x0005)(Fixing Size After Last Property [ Dumper-7 ])
	TScriptInterface<class IGameplayTagAssetInterface> K2Node_DynamicCast_AsGameplay_Tag_Asset_Interface23; // 0x0240(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_DynamicCast_bSuccess23;                     // 0x0250(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_HasMatchingGameplayTag_ReturnValue23;     // 0x0251(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_252[0x6];                                      // 0x0252(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class AFortPlayerController*                  K2Node_DynamicCast_AsFort_Player_Controller;       // 0x0258(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess24;                     // 0x0260(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0261(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_262[0x6];                                      // 0x0262(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class AFortPlayerController*>          K2Node_MakeArray_Array;                            // 0x0268(0x0010)(ZeroConstructor, ReferenceParm)
	bool                                          Temp_bool_Variable1;                               // 0x0278(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          Temp_bool_Variable2;                               // 0x0279(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          Temp_bool_Variable3;                               // 0x027A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          Temp_bool_Variable4;                               // 0x027B(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          Temp_bool_Variable5;                               // 0x027C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          Temp_bool_Variable6;                               // 0x027D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          Temp_bool_Variable7;                               // 0x027E(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          Temp_bool_Variable8;                               // 0x027F(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          Temp_bool_Variable9;                               // 0x0280(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          Temp_bool_Variable10;                              // 0x0281(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          Temp_bool_Variable11;                              // 0x0282(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          Temp_bool_Variable12;                              // 0x0283(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          Temp_bool_Variable13;                              // 0x0284(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          Temp_bool_Variable14;                              // 0x0285(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          Temp_bool_Variable15;                              // 0x0286(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_287[0x1];                                      // 0x0287(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Variable;                                 // 0x0288(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_28C[0x4];                                      // 0x028C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FDataTableRowHandle                    Temp_struct_Variable;                              // 0x0290(0x0010)(NoDestructor)
	int32                                         Temp_int_Variable1;                                // 0x02A0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   Temp_name_Variable;                                // 0x02A4(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   Temp_name_Variable1;                               // 0x02AC(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   Temp_name_Variable2;                               // 0x02B4(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   Temp_name_Variable3;                               // 0x02BC(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   Temp_name_Variable4;                               // 0x02C4(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   Temp_name_Variable5;                               // 0x02CC(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   Temp_name_Variable6;                               // 0x02D4(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   Temp_name_Variable7;                               // 0x02DC(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   Temp_name_Variable8;                               // 0x02E4(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   Temp_name_Variable9;                               // 0x02EC(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   Temp_name_Variable10;                              // 0x02F4(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   Temp_name_Variable11;                              // 0x02FC(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   Temp_name_Variable12;                              // 0x0304(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   Temp_name_Variable13;                              // 0x030C(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   Temp_name_Variable14;                              // 0x0314(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   Temp_name_Variable15;                              // 0x031C(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   Temp_name_Variable16;                              // 0x0324(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   Temp_name_Variable17;                              // 0x032C(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   Temp_name_Variable18;                              // 0x0334(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   Temp_name_Variable19;                              // 0x033C(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   Temp_name_Variable20;                              // 0x0344(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   Temp_name_Variable21;                              // 0x034C(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   Temp_name_Variable22;                              // 0x0354(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   Temp_name_Variable23;                              // 0x035C(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable16;                              // 0x0364(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          Temp_bool_Variable17;                              // 0x0365(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          Temp_bool_Variable18;                              // 0x0366(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          Temp_bool_Variable19;                              // 0x0367(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          Temp_bool_Variable20;                              // 0x0368(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          Temp_bool_Variable21;                              // 0x0369(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          Temp_bool_Variable22;                              // 0x036A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_36B[0x5];                                      // 0x036B(0x0005)(Fixing Size After Last Property [ Dumper-7 ])
	struct FDataTableRowHandle                    K2Node_Select_Default;                             // 0x0370(0x0010)(NoDestructor)
	class FName                                   K2Node_Select1_Default;                            // 0x0380(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Conv_IntToString_ReturnValue;             // 0x0388(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	bool                                          CallFunc_Athena_CheckQuestAndObjectiveCompletion_QuestIsValid; // 0x0398(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Athena_CheckQuestAndObjectiveCompletion_QuestCompleted; // 0x0399(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Athena_CheckQuestAndObjectiveCompletion_ObjectiveCompleted; // 0x039A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x039B(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x039C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          Temp_bool_Variable23;                              // 0x039D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BGA_RiftPortal_Item_Athena_C_CheckForRiftLocUpdate) == 0x000008, "Wrong alignment on BGA_RiftPortal_Item_Athena_C_CheckForRiftLocUpdate");
static_assert(sizeof(BGA_RiftPortal_Item_Athena_C_CheckForRiftLocUpdate) == 0x0003A0, "Wrong size on BGA_RiftPortal_Item_Athena_C_CheckForRiftLocUpdate");
static_assert(offsetof(BGA_RiftPortal_Item_Athena_C_CheckForRiftLocUpdate, InController) == 0x000000, "Member 'BGA_RiftPortal_Item_Athena_C_CheckForRiftLocUpdate::InController' has a wrong offset!");
static_assert(offsetof(BGA_RiftPortal_Item_Athena_C_CheckForRiftLocUpdate, Temp_bool_Variable) == 0x000008, "Member 'BGA_RiftPortal_Item_Athena_C_CheckForRiftLocUpdate::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(BGA_RiftPortal_Item_Athena_C_CheckForRiftLocUpdate, CallFunc_K2_GetPawn_ReturnValue) == 0x000010, "Member 'BGA_RiftPortal_Item_Athena_C_CheckForRiftLocUpdate::CallFunc_K2_GetPawn_ReturnValue' has a wrong offset!");
static_assert(offsetof(BGA_RiftPortal_Item_Athena_C_CheckForRiftLocUpdate, K2Node_DynamicCast_AsGameplay_Tag_Asset_Interface) == 0x000018, "Member 'BGA_RiftPortal_Item_Athena_C_CheckForRiftLocUpdate::K2Node_DynamicCast_AsGameplay_Tag_Asset_Interface' has a wrong offset!");
static_assert(offsetof(BGA_RiftPortal_Item_Athena_C_CheckForRiftLocUpdate, K2Node_DynamicCast_bSuccess) == 0x000028, "Member 'BGA_RiftPortal_Item_Athena_C_CheckForRiftLocUpdate::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(BGA_RiftPortal_Item_Athena_C_CheckForRiftLocUpdate, K2Node_DynamicCast_AsGameplay_Tag_Asset_Interface1) == 0x000030, "Member 'BGA_RiftPortal_Item_Athena_C_CheckForRiftLocUpdate::K2Node_DynamicCast_AsGameplay_Tag_Asset_Interface1' has a wrong offset!");
static_assert(offsetof(BGA_RiftPortal_Item_Athena_C_CheckForRiftLocUpdate, K2Node_DynamicCast_bSuccess1) == 0x000040, "Member 'BGA_RiftPortal_Item_Athena_C_CheckForRiftLocUpdate::K2Node_DynamicCast_bSuccess1' has a wrong offset!");
static_assert(offsetof(BGA_RiftPortal_Item_Athena_C_CheckForRiftLocUpdate, CallFunc_HasMatchingGameplayTag_ReturnValue) == 0x000041, "Member 'BGA_RiftPortal_Item_Athena_C_CheckForRiftLocUpdate::CallFunc_HasMatchingGameplayTag_ReturnValue' has a wrong offset!");
static_assert(offsetof(BGA_RiftPortal_Item_Athena_C_CheckForRiftLocUpdate, CallFunc_HasMatchingGameplayTag_ReturnValue1) == 0x000042, "Member 'BGA_RiftPortal_Item_Athena_C_CheckForRiftLocUpdate::CallFunc_HasMatchingGameplayTag_ReturnValue1' has a wrong offset!");
static_assert(offsetof(BGA_RiftPortal_Item_Athena_C_CheckForRiftLocUpdate, K2Node_DynamicCast_AsGameplay_Tag_Asset_Interface2) == 0x000048, "Member 'BGA_RiftPortal_Item_Athena_C_CheckForRiftLocUpdate::K2Node_DynamicCast_AsGameplay_Tag_Asset_Interface2' has a wrong offset!");
static_assert(offsetof(BGA_RiftPortal_Item_Athena_C_CheckForRiftLocUpdate, K2Node_DynamicCast_bSuccess2) == 0x000058, "Member 'BGA_RiftPortal_Item_Athena_C_CheckForRiftLocUpdate::K2Node_DynamicCast_bSuccess2' has a wrong offset!");
static_assert(offsetof(BGA_RiftPortal_Item_Athena_C_CheckForRiftLocUpdate, K2Node_DynamicCast_AsGameplay_Tag_Asset_Interface3) == 0x000060, "Member 'BGA_RiftPortal_Item_Athena_C_CheckForRiftLocUpdate::K2Node_DynamicCast_AsGameplay_Tag_Asset_Interface3' has a wrong offset!");
static_assert(offsetof(BGA_RiftPortal_Item_Athena_C_CheckForRiftLocUpdate, K2Node_DynamicCast_bSuccess3) == 0x000070, "Member 'BGA_RiftPortal_Item_Athena_C_CheckForRiftLocUpdate::K2Node_DynamicCast_bSuccess3' has a wrong offset!");
static_assert(offsetof(BGA_RiftPortal_Item_Athena_C_CheckForRiftLocUpdate, CallFunc_HasMatchingGameplayTag_ReturnValue2) == 0x000071, "Member 'BGA_RiftPortal_Item_Athena_C_CheckForRiftLocUpdate::CallFunc_HasMatchingGameplayTag_ReturnValue2' has a wrong offset!");
static_assert(offsetof(BGA_RiftPortal_Item_Athena_C_CheckForRiftLocUpdate, CallFunc_HasMatchingGameplayTag_ReturnValue3) == 0x000072, "Member 'BGA_RiftPortal_Item_Athena_C_CheckForRiftLocUpdate::CallFunc_HasMatchingGameplayTag_ReturnValue3' has a wrong offset!");
static_assert(offsetof(BGA_RiftPortal_Item_Athena_C_CheckForRiftLocUpdate, K2Node_DynamicCast_AsGameplay_Tag_Asset_Interface4) == 0x000078, "Member 'BGA_RiftPortal_Item_Athena_C_CheckForRiftLocUpdate::K2Node_DynamicCast_AsGameplay_Tag_Asset_Interface4' has a wrong offset!");
static_assert(offsetof(BGA_RiftPortal_Item_Athena_C_CheckForRiftLocUpdate, K2Node_DynamicCast_bSuccess4) == 0x000088, "Member 'BGA_RiftPortal_Item_Athena_C_CheckForRiftLocUpdate::K2Node_DynamicCast_bSuccess4' has a wrong offset!");
static_assert(offsetof(BGA_RiftPortal_Item_Athena_C_CheckForRiftLocUpdate, K2Node_DynamicCast_AsGameplay_Tag_Asset_Interface5) == 0x000090, "Member 'BGA_RiftPortal_Item_Athena_C_CheckForRiftLocUpdate::K2Node_DynamicCast_AsGameplay_Tag_Asset_Interface5' has a wrong offset!");
static_assert(offsetof(BGA_RiftPortal_Item_Athena_C_CheckForRiftLocUpdate, K2Node_DynamicCast_bSuccess5) == 0x0000A0, "Member 'BGA_RiftPortal_Item_Athena_C_CheckForRiftLocUpdate::K2Node_DynamicCast_bSuccess5' has a wrong offset!");
static_assert(offsetof(BGA_RiftPortal_Item_Athena_C_CheckForRiftLocUpdate, CallFunc_HasMatchingGameplayTag_ReturnValue4) == 0x0000A1, "Member 'BGA_RiftPortal_Item_Athena_C_CheckForRiftLocUpdate::CallFunc_HasMatchingGameplayTag_ReturnValue4' has a wrong offset!");
static_assert(offsetof(BGA_RiftPortal_Item_Athena_C_CheckForRiftLocUpdate, CallFunc_HasMatchingGameplayTag_ReturnValue5) == 0x0000A2, "Member 'BGA_RiftPortal_Item_Athena_C_CheckForRiftLocUpdate::CallFunc_HasMatchingGameplayTag_ReturnValue5' has a wrong offset!");
static_assert(offsetof(BGA_RiftPortal_Item_Athena_C_CheckForRiftLocUpdate, K2Node_DynamicCast_AsGameplay_Tag_Asset_Interface6) == 0x0000A8, "Member 'BGA_RiftPortal_Item_Athena_C_CheckForRiftLocUpdate::K2Node_DynamicCast_AsGameplay_Tag_Asset_Interface6' has a wrong offset!");
static_assert(offsetof(BGA_RiftPortal_Item_Athena_C_CheckForRiftLocUpdate, K2Node_DynamicCast_bSuccess6) == 0x0000B8, "Member 'BGA_RiftPortal_Item_Athena_C_CheckForRiftLocUpdate::K2Node_DynamicCast_bSuccess6' has a wrong offset!");
static_assert(offsetof(BGA_RiftPortal_Item_Athena_C_CheckForRiftLocUpdate, K2Node_DynamicCast_AsGameplay_Tag_Asset_Interface7) == 0x0000C0, "Member 'BGA_RiftPortal_Item_Athena_C_CheckForRiftLocUpdate::K2Node_DynamicCast_AsGameplay_Tag_Asset_Interface7' has a wrong offset!");
static_assert(offsetof(BGA_RiftPortal_Item_Athena_C_CheckForRiftLocUpdate, K2Node_DynamicCast_bSuccess7) == 0x0000D0, "Member 'BGA_RiftPortal_Item_Athena_C_CheckForRiftLocUpdate::K2Node_DynamicCast_bSuccess7' has a wrong offset!");
static_assert(offsetof(BGA_RiftPortal_Item_Athena_C_CheckForRiftLocUpdate, CallFunc_HasMatchingGameplayTag_ReturnValue6) == 0x0000D1, "Member 'BGA_RiftPortal_Item_Athena_C_CheckForRiftLocUpdate::CallFunc_HasMatchingGameplayTag_ReturnValue6' has a wrong offset!");
static_assert(offsetof(BGA_RiftPortal_Item_Athena_C_CheckForRiftLocUpdate, CallFunc_HasMatchingGameplayTag_ReturnValue7) == 0x0000D2, "Member 'BGA_RiftPortal_Item_Athena_C_CheckForRiftLocUpdate::CallFunc_HasMatchingGameplayTag_ReturnValue7' has a wrong offset!");
static_assert(offsetof(BGA_RiftPortal_Item_Athena_C_CheckForRiftLocUpdate, K2Node_DynamicCast_AsGameplay_Tag_Asset_Interface8) == 0x0000D8, "Member 'BGA_RiftPortal_Item_Athena_C_CheckForRiftLocUpdate::K2Node_DynamicCast_AsGameplay_Tag_Asset_Interface8' has a wrong offset!");
static_assert(offsetof(BGA_RiftPortal_Item_Athena_C_CheckForRiftLocUpdate, K2Node_DynamicCast_bSuccess8) == 0x0000E8, "Member 'BGA_RiftPortal_Item_Athena_C_CheckForRiftLocUpdate::K2Node_DynamicCast_bSuccess8' has a wrong offset!");
static_assert(offsetof(BGA_RiftPortal_Item_Athena_C_CheckForRiftLocUpdate, CallFunc_HasMatchingGameplayTag_ReturnValue8) == 0x0000E9, "Member 'BGA_RiftPortal_Item_Athena_C_CheckForRiftLocUpdate::CallFunc_HasMatchingGameplayTag_ReturnValue8' has a wrong offset!");
static_assert(offsetof(BGA_RiftPortal_Item_Athena_C_CheckForRiftLocUpdate, K2Node_DynamicCast_AsGameplay_Tag_Asset_Interface9) == 0x0000F0, "Member 'BGA_RiftPortal_Item_Athena_C_CheckForRiftLocUpdate::K2Node_DynamicCast_AsGameplay_Tag_Asset_Interface9' has a wrong offset!");
static_assert(offsetof(BGA_RiftPortal_Item_Athena_C_CheckForRiftLocUpdate, K2Node_DynamicCast_bSuccess9) == 0x000100, "Member 'BGA_RiftPortal_Item_Athena_C_CheckForRiftLocUpdate::K2Node_DynamicCast_bSuccess9' has a wrong offset!");
static_assert(offsetof(BGA_RiftPortal_Item_Athena_C_CheckForRiftLocUpdate, K2Node_DynamicCast_AsGameplay_Tag_Asset_Interface10) == 0x000108, "Member 'BGA_RiftPortal_Item_Athena_C_CheckForRiftLocUpdate::K2Node_DynamicCast_AsGameplay_Tag_Asset_Interface10' has a wrong offset!");
static_assert(offsetof(BGA_RiftPortal_Item_Athena_C_CheckForRiftLocUpdate, K2Node_DynamicCast_bSuccess10) == 0x000118, "Member 'BGA_RiftPortal_Item_Athena_C_CheckForRiftLocUpdate::K2Node_DynamicCast_bSuccess10' has a wrong offset!");
static_assert(offsetof(BGA_RiftPortal_Item_Athena_C_CheckForRiftLocUpdate, CallFunc_HasMatchingGameplayTag_ReturnValue9) == 0x000119, "Member 'BGA_RiftPortal_Item_Athena_C_CheckForRiftLocUpdate::CallFunc_HasMatchingGameplayTag_ReturnValue9' has a wrong offset!");
static_assert(offsetof(BGA_RiftPortal_Item_Athena_C_CheckForRiftLocUpdate, CallFunc_HasMatchingGameplayTag_ReturnValue10) == 0x00011A, "Member 'BGA_RiftPortal_Item_Athena_C_CheckForRiftLocUpdate::CallFunc_HasMatchingGameplayTag_ReturnValue10' has a wrong offset!");
static_assert(offsetof(BGA_RiftPortal_Item_Athena_C_CheckForRiftLocUpdate, K2Node_DynamicCast_AsGameplay_Tag_Asset_Interface11) == 0x000120, "Member 'BGA_RiftPortal_Item_Athena_C_CheckForRiftLocUpdate::K2Node_DynamicCast_AsGameplay_Tag_Asset_Interface11' has a wrong offset!");
static_assert(offsetof(BGA_RiftPortal_Item_Athena_C_CheckForRiftLocUpdate, K2Node_DynamicCast_bSuccess11) == 0x000130, "Member 'BGA_RiftPortal_Item_Athena_C_CheckForRiftLocUpdate::K2Node_DynamicCast_bSuccess11' has a wrong offset!");
static_assert(offsetof(BGA_RiftPortal_Item_Athena_C_CheckForRiftLocUpdate, K2Node_DynamicCast_AsGameplay_Tag_Asset_Interface12) == 0x000138, "Member 'BGA_RiftPortal_Item_Athena_C_CheckForRiftLocUpdate::K2Node_DynamicCast_AsGameplay_Tag_Asset_Interface12' has a wrong offset!");
static_assert(offsetof(BGA_RiftPortal_Item_Athena_C_CheckForRiftLocUpdate, K2Node_DynamicCast_bSuccess12) == 0x000148, "Member 'BGA_RiftPortal_Item_Athena_C_CheckForRiftLocUpdate::K2Node_DynamicCast_bSuccess12' has a wrong offset!");
static_assert(offsetof(BGA_RiftPortal_Item_Athena_C_CheckForRiftLocUpdate, CallFunc_HasMatchingGameplayTag_ReturnValue11) == 0x000149, "Member 'BGA_RiftPortal_Item_Athena_C_CheckForRiftLocUpdate::CallFunc_HasMatchingGameplayTag_ReturnValue11' has a wrong offset!");
static_assert(offsetof(BGA_RiftPortal_Item_Athena_C_CheckForRiftLocUpdate, CallFunc_HasMatchingGameplayTag_ReturnValue12) == 0x00014A, "Member 'BGA_RiftPortal_Item_Athena_C_CheckForRiftLocUpdate::CallFunc_HasMatchingGameplayTag_ReturnValue12' has a wrong offset!");
static_assert(offsetof(BGA_RiftPortal_Item_Athena_C_CheckForRiftLocUpdate, K2Node_DynamicCast_AsGameplay_Tag_Asset_Interface13) == 0x000150, "Member 'BGA_RiftPortal_Item_Athena_C_CheckForRiftLocUpdate::K2Node_DynamicCast_AsGameplay_Tag_Asset_Interface13' has a wrong offset!");
static_assert(offsetof(BGA_RiftPortal_Item_Athena_C_CheckForRiftLocUpdate, K2Node_DynamicCast_bSuccess13) == 0x000160, "Member 'BGA_RiftPortal_Item_Athena_C_CheckForRiftLocUpdate::K2Node_DynamicCast_bSuccess13' has a wrong offset!");
static_assert(offsetof(BGA_RiftPortal_Item_Athena_C_CheckForRiftLocUpdate, K2Node_DynamicCast_AsGameplay_Tag_Asset_Interface14) == 0x000168, "Member 'BGA_RiftPortal_Item_Athena_C_CheckForRiftLocUpdate::K2Node_DynamicCast_AsGameplay_Tag_Asset_Interface14' has a wrong offset!");
static_assert(offsetof(BGA_RiftPortal_Item_Athena_C_CheckForRiftLocUpdate, K2Node_DynamicCast_bSuccess14) == 0x000178, "Member 'BGA_RiftPortal_Item_Athena_C_CheckForRiftLocUpdate::K2Node_DynamicCast_bSuccess14' has a wrong offset!");
static_assert(offsetof(BGA_RiftPortal_Item_Athena_C_CheckForRiftLocUpdate, CallFunc_HasMatchingGameplayTag_ReturnValue13) == 0x000179, "Member 'BGA_RiftPortal_Item_Athena_C_CheckForRiftLocUpdate::CallFunc_HasMatchingGameplayTag_ReturnValue13' has a wrong offset!");
static_assert(offsetof(BGA_RiftPortal_Item_Athena_C_CheckForRiftLocUpdate, CallFunc_HasMatchingGameplayTag_ReturnValue14) == 0x00017A, "Member 'BGA_RiftPortal_Item_Athena_C_CheckForRiftLocUpdate::CallFunc_HasMatchingGameplayTag_ReturnValue14' has a wrong offset!");
static_assert(offsetof(BGA_RiftPortal_Item_Athena_C_CheckForRiftLocUpdate, K2Node_DynamicCast_AsGameplay_Tag_Asset_Interface15) == 0x000180, "Member 'BGA_RiftPortal_Item_Athena_C_CheckForRiftLocUpdate::K2Node_DynamicCast_AsGameplay_Tag_Asset_Interface15' has a wrong offset!");
static_assert(offsetof(BGA_RiftPortal_Item_Athena_C_CheckForRiftLocUpdate, K2Node_DynamicCast_bSuccess15) == 0x000190, "Member 'BGA_RiftPortal_Item_Athena_C_CheckForRiftLocUpdate::K2Node_DynamicCast_bSuccess15' has a wrong offset!");
static_assert(offsetof(BGA_RiftPortal_Item_Athena_C_CheckForRiftLocUpdate, K2Node_DynamicCast_AsGameplay_Tag_Asset_Interface16) == 0x000198, "Member 'BGA_RiftPortal_Item_Athena_C_CheckForRiftLocUpdate::K2Node_DynamicCast_AsGameplay_Tag_Asset_Interface16' has a wrong offset!");
static_assert(offsetof(BGA_RiftPortal_Item_Athena_C_CheckForRiftLocUpdate, K2Node_DynamicCast_bSuccess16) == 0x0001A8, "Member 'BGA_RiftPortal_Item_Athena_C_CheckForRiftLocUpdate::K2Node_DynamicCast_bSuccess16' has a wrong offset!");
static_assert(offsetof(BGA_RiftPortal_Item_Athena_C_CheckForRiftLocUpdate, CallFunc_HasMatchingGameplayTag_ReturnValue15) == 0x0001A9, "Member 'BGA_RiftPortal_Item_Athena_C_CheckForRiftLocUpdate::CallFunc_HasMatchingGameplayTag_ReturnValue15' has a wrong offset!");
static_assert(offsetof(BGA_RiftPortal_Item_Athena_C_CheckForRiftLocUpdate, CallFunc_HasMatchingGameplayTag_ReturnValue16) == 0x0001AA, "Member 'BGA_RiftPortal_Item_Athena_C_CheckForRiftLocUpdate::CallFunc_HasMatchingGameplayTag_ReturnValue16' has a wrong offset!");
static_assert(offsetof(BGA_RiftPortal_Item_Athena_C_CheckForRiftLocUpdate, K2Node_DynamicCast_AsGameplay_Tag_Asset_Interface17) == 0x0001B0, "Member 'BGA_RiftPortal_Item_Athena_C_CheckForRiftLocUpdate::K2Node_DynamicCast_AsGameplay_Tag_Asset_Interface17' has a wrong offset!");
static_assert(offsetof(BGA_RiftPortal_Item_Athena_C_CheckForRiftLocUpdate, K2Node_DynamicCast_bSuccess17) == 0x0001C0, "Member 'BGA_RiftPortal_Item_Athena_C_CheckForRiftLocUpdate::K2Node_DynamicCast_bSuccess17' has a wrong offset!");
static_assert(offsetof(BGA_RiftPortal_Item_Athena_C_CheckForRiftLocUpdate, K2Node_DynamicCast_AsGameplay_Tag_Asset_Interface18) == 0x0001C8, "Member 'BGA_RiftPortal_Item_Athena_C_CheckForRiftLocUpdate::K2Node_DynamicCast_AsGameplay_Tag_Asset_Interface18' has a wrong offset!");
static_assert(offsetof(BGA_RiftPortal_Item_Athena_C_CheckForRiftLocUpdate, K2Node_DynamicCast_bSuccess18) == 0x0001D8, "Member 'BGA_RiftPortal_Item_Athena_C_CheckForRiftLocUpdate::K2Node_DynamicCast_bSuccess18' has a wrong offset!");
static_assert(offsetof(BGA_RiftPortal_Item_Athena_C_CheckForRiftLocUpdate, CallFunc_HasMatchingGameplayTag_ReturnValue17) == 0x0001D9, "Member 'BGA_RiftPortal_Item_Athena_C_CheckForRiftLocUpdate::CallFunc_HasMatchingGameplayTag_ReturnValue17' has a wrong offset!");
static_assert(offsetof(BGA_RiftPortal_Item_Athena_C_CheckForRiftLocUpdate, CallFunc_HasMatchingGameplayTag_ReturnValue18) == 0x0001DA, "Member 'BGA_RiftPortal_Item_Athena_C_CheckForRiftLocUpdate::CallFunc_HasMatchingGameplayTag_ReturnValue18' has a wrong offset!");
static_assert(offsetof(BGA_RiftPortal_Item_Athena_C_CheckForRiftLocUpdate, K2Node_DynamicCast_AsGameplay_Tag_Asset_Interface19) == 0x0001E0, "Member 'BGA_RiftPortal_Item_Athena_C_CheckForRiftLocUpdate::K2Node_DynamicCast_AsGameplay_Tag_Asset_Interface19' has a wrong offset!");
static_assert(offsetof(BGA_RiftPortal_Item_Athena_C_CheckForRiftLocUpdate, K2Node_DynamicCast_bSuccess19) == 0x0001F0, "Member 'BGA_RiftPortal_Item_Athena_C_CheckForRiftLocUpdate::K2Node_DynamicCast_bSuccess19' has a wrong offset!");
static_assert(offsetof(BGA_RiftPortal_Item_Athena_C_CheckForRiftLocUpdate, K2Node_DynamicCast_AsGameplay_Tag_Asset_Interface20) == 0x0001F8, "Member 'BGA_RiftPortal_Item_Athena_C_CheckForRiftLocUpdate::K2Node_DynamicCast_AsGameplay_Tag_Asset_Interface20' has a wrong offset!");
static_assert(offsetof(BGA_RiftPortal_Item_Athena_C_CheckForRiftLocUpdate, K2Node_DynamicCast_bSuccess20) == 0x000208, "Member 'BGA_RiftPortal_Item_Athena_C_CheckForRiftLocUpdate::K2Node_DynamicCast_bSuccess20' has a wrong offset!");
static_assert(offsetof(BGA_RiftPortal_Item_Athena_C_CheckForRiftLocUpdate, CallFunc_HasMatchingGameplayTag_ReturnValue19) == 0x000209, "Member 'BGA_RiftPortal_Item_Athena_C_CheckForRiftLocUpdate::CallFunc_HasMatchingGameplayTag_ReturnValue19' has a wrong offset!");
static_assert(offsetof(BGA_RiftPortal_Item_Athena_C_CheckForRiftLocUpdate, CallFunc_HasMatchingGameplayTag_ReturnValue20) == 0x00020A, "Member 'BGA_RiftPortal_Item_Athena_C_CheckForRiftLocUpdate::CallFunc_HasMatchingGameplayTag_ReturnValue20' has a wrong offset!");
static_assert(offsetof(BGA_RiftPortal_Item_Athena_C_CheckForRiftLocUpdate, K2Node_DynamicCast_AsGameplay_Tag_Asset_Interface21) == 0x000210, "Member 'BGA_RiftPortal_Item_Athena_C_CheckForRiftLocUpdate::K2Node_DynamicCast_AsGameplay_Tag_Asset_Interface21' has a wrong offset!");
static_assert(offsetof(BGA_RiftPortal_Item_Athena_C_CheckForRiftLocUpdate, K2Node_DynamicCast_bSuccess21) == 0x000220, "Member 'BGA_RiftPortal_Item_Athena_C_CheckForRiftLocUpdate::K2Node_DynamicCast_bSuccess21' has a wrong offset!");
static_assert(offsetof(BGA_RiftPortal_Item_Athena_C_CheckForRiftLocUpdate, K2Node_DynamicCast_AsGameplay_Tag_Asset_Interface22) == 0x000228, "Member 'BGA_RiftPortal_Item_Athena_C_CheckForRiftLocUpdate::K2Node_DynamicCast_AsGameplay_Tag_Asset_Interface22' has a wrong offset!");
static_assert(offsetof(BGA_RiftPortal_Item_Athena_C_CheckForRiftLocUpdate, K2Node_DynamicCast_bSuccess22) == 0x000238, "Member 'BGA_RiftPortal_Item_Athena_C_CheckForRiftLocUpdate::K2Node_DynamicCast_bSuccess22' has a wrong offset!");
static_assert(offsetof(BGA_RiftPortal_Item_Athena_C_CheckForRiftLocUpdate, CallFunc_HasMatchingGameplayTag_ReturnValue21) == 0x000239, "Member 'BGA_RiftPortal_Item_Athena_C_CheckForRiftLocUpdate::CallFunc_HasMatchingGameplayTag_ReturnValue21' has a wrong offset!");
static_assert(offsetof(BGA_RiftPortal_Item_Athena_C_CheckForRiftLocUpdate, CallFunc_HasMatchingGameplayTag_ReturnValue22) == 0x00023A, "Member 'BGA_RiftPortal_Item_Athena_C_CheckForRiftLocUpdate::CallFunc_HasMatchingGameplayTag_ReturnValue22' has a wrong offset!");
static_assert(offsetof(BGA_RiftPortal_Item_Athena_C_CheckForRiftLocUpdate, K2Node_DynamicCast_AsGameplay_Tag_Asset_Interface23) == 0x000240, "Member 'BGA_RiftPortal_Item_Athena_C_CheckForRiftLocUpdate::K2Node_DynamicCast_AsGameplay_Tag_Asset_Interface23' has a wrong offset!");
static_assert(offsetof(BGA_RiftPortal_Item_Athena_C_CheckForRiftLocUpdate, K2Node_DynamicCast_bSuccess23) == 0x000250, "Member 'BGA_RiftPortal_Item_Athena_C_CheckForRiftLocUpdate::K2Node_DynamicCast_bSuccess23' has a wrong offset!");
static_assert(offsetof(BGA_RiftPortal_Item_Athena_C_CheckForRiftLocUpdate, CallFunc_HasMatchingGameplayTag_ReturnValue23) == 0x000251, "Member 'BGA_RiftPortal_Item_Athena_C_CheckForRiftLocUpdate::CallFunc_HasMatchingGameplayTag_ReturnValue23' has a wrong offset!");
static_assert(offsetof(BGA_RiftPortal_Item_Athena_C_CheckForRiftLocUpdate, K2Node_DynamicCast_AsFort_Player_Controller) == 0x000258, "Member 'BGA_RiftPortal_Item_Athena_C_CheckForRiftLocUpdate::K2Node_DynamicCast_AsFort_Player_Controller' has a wrong offset!");
static_assert(offsetof(BGA_RiftPortal_Item_Athena_C_CheckForRiftLocUpdate, K2Node_DynamicCast_bSuccess24) == 0x000260, "Member 'BGA_RiftPortal_Item_Athena_C_CheckForRiftLocUpdate::K2Node_DynamicCast_bSuccess24' has a wrong offset!");
static_assert(offsetof(BGA_RiftPortal_Item_Athena_C_CheckForRiftLocUpdate, CallFunc_IsValid_ReturnValue) == 0x000261, "Member 'BGA_RiftPortal_Item_Athena_C_CheckForRiftLocUpdate::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BGA_RiftPortal_Item_Athena_C_CheckForRiftLocUpdate, K2Node_MakeArray_Array) == 0x000268, "Member 'BGA_RiftPortal_Item_Athena_C_CheckForRiftLocUpdate::K2Node_MakeArray_Array' has a wrong offset!");
static_assert(offsetof(BGA_RiftPortal_Item_Athena_C_CheckForRiftLocUpdate, Temp_bool_Variable1) == 0x000278, "Member 'BGA_RiftPortal_Item_Athena_C_CheckForRiftLocUpdate::Temp_bool_Variable1' has a wrong offset!");
static_assert(offsetof(BGA_RiftPortal_Item_Athena_C_CheckForRiftLocUpdate, Temp_bool_Variable2) == 0x000279, "Member 'BGA_RiftPortal_Item_Athena_C_CheckForRiftLocUpdate::Temp_bool_Variable2' has a wrong offset!");
static_assert(offsetof(BGA_RiftPortal_Item_Athena_C_CheckForRiftLocUpdate, Temp_bool_Variable3) == 0x00027A, "Member 'BGA_RiftPortal_Item_Athena_C_CheckForRiftLocUpdate::Temp_bool_Variable3' has a wrong offset!");
static_assert(offsetof(BGA_RiftPortal_Item_Athena_C_CheckForRiftLocUpdate, Temp_bool_Variable4) == 0x00027B, "Member 'BGA_RiftPortal_Item_Athena_C_CheckForRiftLocUpdate::Temp_bool_Variable4' has a wrong offset!");
static_assert(offsetof(BGA_RiftPortal_Item_Athena_C_CheckForRiftLocUpdate, Temp_bool_Variable5) == 0x00027C, "Member 'BGA_RiftPortal_Item_Athena_C_CheckForRiftLocUpdate::Temp_bool_Variable5' has a wrong offset!");
static_assert(offsetof(BGA_RiftPortal_Item_Athena_C_CheckForRiftLocUpdate, Temp_bool_Variable6) == 0x00027D, "Member 'BGA_RiftPortal_Item_Athena_C_CheckForRiftLocUpdate::Temp_bool_Variable6' has a wrong offset!");
static_assert(offsetof(BGA_RiftPortal_Item_Athena_C_CheckForRiftLocUpdate, Temp_bool_Variable7) == 0x00027E, "Member 'BGA_RiftPortal_Item_Athena_C_CheckForRiftLocUpdate::Temp_bool_Variable7' has a wrong offset!");
static_assert(offsetof(BGA_RiftPortal_Item_Athena_C_CheckForRiftLocUpdate, Temp_bool_Variable8) == 0x00027F, "Member 'BGA_RiftPortal_Item_Athena_C_CheckForRiftLocUpdate::Temp_bool_Variable8' has a wrong offset!");
static_assert(offsetof(BGA_RiftPortal_Item_Athena_C_CheckForRiftLocUpdate, Temp_bool_Variable9) == 0x000280, "Member 'BGA_RiftPortal_Item_Athena_C_CheckForRiftLocUpdate::Temp_bool_Variable9' has a wrong offset!");
static_assert(offsetof(BGA_RiftPortal_Item_Athena_C_CheckForRiftLocUpdate, Temp_bool_Variable10) == 0x000281, "Member 'BGA_RiftPortal_Item_Athena_C_CheckForRiftLocUpdate::Temp_bool_Variable10' has a wrong offset!");
static_assert(offsetof(BGA_RiftPortal_Item_Athena_C_CheckForRiftLocUpdate, Temp_bool_Variable11) == 0x000282, "Member 'BGA_RiftPortal_Item_Athena_C_CheckForRiftLocUpdate::Temp_bool_Variable11' has a wrong offset!");
static_assert(offsetof(BGA_RiftPortal_Item_Athena_C_CheckForRiftLocUpdate, Temp_bool_Variable12) == 0x000283, "Member 'BGA_RiftPortal_Item_Athena_C_CheckForRiftLocUpdate::Temp_bool_Variable12' has a wrong offset!");
static_assert(offsetof(BGA_RiftPortal_Item_Athena_C_CheckForRiftLocUpdate, Temp_bool_Variable13) == 0x000284, "Member 'BGA_RiftPortal_Item_Athena_C_CheckForRiftLocUpdate::Temp_bool_Variable13' has a wrong offset!");
static_assert(offsetof(BGA_RiftPortal_Item_Athena_C_CheckForRiftLocUpdate, Temp_bool_Variable14) == 0x000285, "Member 'BGA_RiftPortal_Item_Athena_C_CheckForRiftLocUpdate::Temp_bool_Variable14' has a wrong offset!");
static_assert(offsetof(BGA_RiftPortal_Item_Athena_C_CheckForRiftLocUpdate, Temp_bool_Variable15) == 0x000286, "Member 'BGA_RiftPortal_Item_Athena_C_CheckForRiftLocUpdate::Temp_bool_Variable15' has a wrong offset!");
static_assert(offsetof(BGA_RiftPortal_Item_Athena_C_CheckForRiftLocUpdate, Temp_int_Variable) == 0x000288, "Member 'BGA_RiftPortal_Item_Athena_C_CheckForRiftLocUpdate::Temp_int_Variable' has a wrong offset!");
static_assert(offsetof(BGA_RiftPortal_Item_Athena_C_CheckForRiftLocUpdate, Temp_struct_Variable) == 0x000290, "Member 'BGA_RiftPortal_Item_Athena_C_CheckForRiftLocUpdate::Temp_struct_Variable' has a wrong offset!");
static_assert(offsetof(BGA_RiftPortal_Item_Athena_C_CheckForRiftLocUpdate, Temp_int_Variable1) == 0x0002A0, "Member 'BGA_RiftPortal_Item_Athena_C_CheckForRiftLocUpdate::Temp_int_Variable1' has a wrong offset!");
static_assert(offsetof(BGA_RiftPortal_Item_Athena_C_CheckForRiftLocUpdate, Temp_name_Variable) == 0x0002A4, "Member 'BGA_RiftPortal_Item_Athena_C_CheckForRiftLocUpdate::Temp_name_Variable' has a wrong offset!");
static_assert(offsetof(BGA_RiftPortal_Item_Athena_C_CheckForRiftLocUpdate, Temp_name_Variable1) == 0x0002AC, "Member 'BGA_RiftPortal_Item_Athena_C_CheckForRiftLocUpdate::Temp_name_Variable1' has a wrong offset!");
static_assert(offsetof(BGA_RiftPortal_Item_Athena_C_CheckForRiftLocUpdate, Temp_name_Variable2) == 0x0002B4, "Member 'BGA_RiftPortal_Item_Athena_C_CheckForRiftLocUpdate::Temp_name_Variable2' has a wrong offset!");
static_assert(offsetof(BGA_RiftPortal_Item_Athena_C_CheckForRiftLocUpdate, Temp_name_Variable3) == 0x0002BC, "Member 'BGA_RiftPortal_Item_Athena_C_CheckForRiftLocUpdate::Temp_name_Variable3' has a wrong offset!");
static_assert(offsetof(BGA_RiftPortal_Item_Athena_C_CheckForRiftLocUpdate, Temp_name_Variable4) == 0x0002C4, "Member 'BGA_RiftPortal_Item_Athena_C_CheckForRiftLocUpdate::Temp_name_Variable4' has a wrong offset!");
static_assert(offsetof(BGA_RiftPortal_Item_Athena_C_CheckForRiftLocUpdate, Temp_name_Variable5) == 0x0002CC, "Member 'BGA_RiftPortal_Item_Athena_C_CheckForRiftLocUpdate::Temp_name_Variable5' has a wrong offset!");
static_assert(offsetof(BGA_RiftPortal_Item_Athena_C_CheckForRiftLocUpdate, Temp_name_Variable6) == 0x0002D4, "Member 'BGA_RiftPortal_Item_Athena_C_CheckForRiftLocUpdate::Temp_name_Variable6' has a wrong offset!");
static_assert(offsetof(BGA_RiftPortal_Item_Athena_C_CheckForRiftLocUpdate, Temp_name_Variable7) == 0x0002DC, "Member 'BGA_RiftPortal_Item_Athena_C_CheckForRiftLocUpdate::Temp_name_Variable7' has a wrong offset!");
static_assert(offsetof(BGA_RiftPortal_Item_Athena_C_CheckForRiftLocUpdate, Temp_name_Variable8) == 0x0002E4, "Member 'BGA_RiftPortal_Item_Athena_C_CheckForRiftLocUpdate::Temp_name_Variable8' has a wrong offset!");
static_assert(offsetof(BGA_RiftPortal_Item_Athena_C_CheckForRiftLocUpdate, Temp_name_Variable9) == 0x0002EC, "Member 'BGA_RiftPortal_Item_Athena_C_CheckForRiftLocUpdate::Temp_name_Variable9' has a wrong offset!");
static_assert(offsetof(BGA_RiftPortal_Item_Athena_C_CheckForRiftLocUpdate, Temp_name_Variable10) == 0x0002F4, "Member 'BGA_RiftPortal_Item_Athena_C_CheckForRiftLocUpdate::Temp_name_Variable10' has a wrong offset!");
static_assert(offsetof(BGA_RiftPortal_Item_Athena_C_CheckForRiftLocUpdate, Temp_name_Variable11) == 0x0002FC, "Member 'BGA_RiftPortal_Item_Athena_C_CheckForRiftLocUpdate::Temp_name_Variable11' has a wrong offset!");
static_assert(offsetof(BGA_RiftPortal_Item_Athena_C_CheckForRiftLocUpdate, Temp_name_Variable12) == 0x000304, "Member 'BGA_RiftPortal_Item_Athena_C_CheckForRiftLocUpdate::Temp_name_Variable12' has a wrong offset!");
static_assert(offsetof(BGA_RiftPortal_Item_Athena_C_CheckForRiftLocUpdate, Temp_name_Variable13) == 0x00030C, "Member 'BGA_RiftPortal_Item_Athena_C_CheckForRiftLocUpdate::Temp_name_Variable13' has a wrong offset!");
static_assert(offsetof(BGA_RiftPortal_Item_Athena_C_CheckForRiftLocUpdate, Temp_name_Variable14) == 0x000314, "Member 'BGA_RiftPortal_Item_Athena_C_CheckForRiftLocUpdate::Temp_name_Variable14' has a wrong offset!");
static_assert(offsetof(BGA_RiftPortal_Item_Athena_C_CheckForRiftLocUpdate, Temp_name_Variable15) == 0x00031C, "Member 'BGA_RiftPortal_Item_Athena_C_CheckForRiftLocUpdate::Temp_name_Variable15' has a wrong offset!");
static_assert(offsetof(BGA_RiftPortal_Item_Athena_C_CheckForRiftLocUpdate, Temp_name_Variable16) == 0x000324, "Member 'BGA_RiftPortal_Item_Athena_C_CheckForRiftLocUpdate::Temp_name_Variable16' has a wrong offset!");
static_assert(offsetof(BGA_RiftPortal_Item_Athena_C_CheckForRiftLocUpdate, Temp_name_Variable17) == 0x00032C, "Member 'BGA_RiftPortal_Item_Athena_C_CheckForRiftLocUpdate::Temp_name_Variable17' has a wrong offset!");
static_assert(offsetof(BGA_RiftPortal_Item_Athena_C_CheckForRiftLocUpdate, Temp_name_Variable18) == 0x000334, "Member 'BGA_RiftPortal_Item_Athena_C_CheckForRiftLocUpdate::Temp_name_Variable18' has a wrong offset!");
static_assert(offsetof(BGA_RiftPortal_Item_Athena_C_CheckForRiftLocUpdate, Temp_name_Variable19) == 0x00033C, "Member 'BGA_RiftPortal_Item_Athena_C_CheckForRiftLocUpdate::Temp_name_Variable19' has a wrong offset!");
static_assert(offsetof(BGA_RiftPortal_Item_Athena_C_CheckForRiftLocUpdate, Temp_name_Variable20) == 0x000344, "Member 'BGA_RiftPortal_Item_Athena_C_CheckForRiftLocUpdate::Temp_name_Variable20' has a wrong offset!");
static_assert(offsetof(BGA_RiftPortal_Item_Athena_C_CheckForRiftLocUpdate, Temp_name_Variable21) == 0x00034C, "Member 'BGA_RiftPortal_Item_Athena_C_CheckForRiftLocUpdate::Temp_name_Variable21' has a wrong offset!");
static_assert(offsetof(BGA_RiftPortal_Item_Athena_C_CheckForRiftLocUpdate, Temp_name_Variable22) == 0x000354, "Member 'BGA_RiftPortal_Item_Athena_C_CheckForRiftLocUpdate::Temp_name_Variable22' has a wrong offset!");
static_assert(offsetof(BGA_RiftPortal_Item_Athena_C_CheckForRiftLocUpdate, Temp_name_Variable23) == 0x00035C, "Member 'BGA_RiftPortal_Item_Athena_C_CheckForRiftLocUpdate::Temp_name_Variable23' has a wrong offset!");
static_assert(offsetof(BGA_RiftPortal_Item_Athena_C_CheckForRiftLocUpdate, Temp_bool_Variable16) == 0x000364, "Member 'BGA_RiftPortal_Item_Athena_C_CheckForRiftLocUpdate::Temp_bool_Variable16' has a wrong offset!");
static_assert(offsetof(BGA_RiftPortal_Item_Athena_C_CheckForRiftLocUpdate, Temp_bool_Variable17) == 0x000365, "Member 'BGA_RiftPortal_Item_Athena_C_CheckForRiftLocUpdate::Temp_bool_Variable17' has a wrong offset!");
static_assert(offsetof(BGA_RiftPortal_Item_Athena_C_CheckForRiftLocUpdate, Temp_bool_Variable18) == 0x000366, "Member 'BGA_RiftPortal_Item_Athena_C_CheckForRiftLocUpdate::Temp_bool_Variable18' has a wrong offset!");
static_assert(offsetof(BGA_RiftPortal_Item_Athena_C_CheckForRiftLocUpdate, Temp_bool_Variable19) == 0x000367, "Member 'BGA_RiftPortal_Item_Athena_C_CheckForRiftLocUpdate::Temp_bool_Variable19' has a wrong offset!");
static_assert(offsetof(BGA_RiftPortal_Item_Athena_C_CheckForRiftLocUpdate, Temp_bool_Variable20) == 0x000368, "Member 'BGA_RiftPortal_Item_Athena_C_CheckForRiftLocUpdate::Temp_bool_Variable20' has a wrong offset!");
static_assert(offsetof(BGA_RiftPortal_Item_Athena_C_CheckForRiftLocUpdate, Temp_bool_Variable21) == 0x000369, "Member 'BGA_RiftPortal_Item_Athena_C_CheckForRiftLocUpdate::Temp_bool_Variable21' has a wrong offset!");
static_assert(offsetof(BGA_RiftPortal_Item_Athena_C_CheckForRiftLocUpdate, Temp_bool_Variable22) == 0x00036A, "Member 'BGA_RiftPortal_Item_Athena_C_CheckForRiftLocUpdate::Temp_bool_Variable22' has a wrong offset!");
static_assert(offsetof(BGA_RiftPortal_Item_Athena_C_CheckForRiftLocUpdate, K2Node_Select_Default) == 0x000370, "Member 'BGA_RiftPortal_Item_Athena_C_CheckForRiftLocUpdate::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(BGA_RiftPortal_Item_Athena_C_CheckForRiftLocUpdate, K2Node_Select1_Default) == 0x000380, "Member 'BGA_RiftPortal_Item_Athena_C_CheckForRiftLocUpdate::K2Node_Select1_Default' has a wrong offset!");
static_assert(offsetof(BGA_RiftPortal_Item_Athena_C_CheckForRiftLocUpdate, CallFunc_Conv_IntToString_ReturnValue) == 0x000388, "Member 'BGA_RiftPortal_Item_Athena_C_CheckForRiftLocUpdate::CallFunc_Conv_IntToString_ReturnValue' has a wrong offset!");
static_assert(offsetof(BGA_RiftPortal_Item_Athena_C_CheckForRiftLocUpdate, CallFunc_Athena_CheckQuestAndObjectiveCompletion_QuestIsValid) == 0x000398, "Member 'BGA_RiftPortal_Item_Athena_C_CheckForRiftLocUpdate::CallFunc_Athena_CheckQuestAndObjectiveCompletion_QuestIsValid' has a wrong offset!");
static_assert(offsetof(BGA_RiftPortal_Item_Athena_C_CheckForRiftLocUpdate, CallFunc_Athena_CheckQuestAndObjectiveCompletion_QuestCompleted) == 0x000399, "Member 'BGA_RiftPortal_Item_Athena_C_CheckForRiftLocUpdate::CallFunc_Athena_CheckQuestAndObjectiveCompletion_QuestCompleted' has a wrong offset!");
static_assert(offsetof(BGA_RiftPortal_Item_Athena_C_CheckForRiftLocUpdate, CallFunc_Athena_CheckQuestAndObjectiveCompletion_ObjectiveCompleted) == 0x00039A, "Member 'BGA_RiftPortal_Item_Athena_C_CheckForRiftLocUpdate::CallFunc_Athena_CheckQuestAndObjectiveCompletion_ObjectiveCompleted' has a wrong offset!");
static_assert(offsetof(BGA_RiftPortal_Item_Athena_C_CheckForRiftLocUpdate, CallFunc_Not_PreBool_ReturnValue) == 0x00039B, "Member 'BGA_RiftPortal_Item_Athena_C_CheckForRiftLocUpdate::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(BGA_RiftPortal_Item_Athena_C_CheckForRiftLocUpdate, CallFunc_BooleanAND_ReturnValue) == 0x00039C, "Member 'BGA_RiftPortal_Item_Athena_C_CheckForRiftLocUpdate::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");
static_assert(offsetof(BGA_RiftPortal_Item_Athena_C_CheckForRiftLocUpdate, Temp_bool_Variable23) == 0x00039D, "Member 'BGA_RiftPortal_Item_Athena_C_CheckForRiftLocUpdate::Temp_bool_Variable23' has a wrong offset!");

// Function BGA_RiftPortal_Item_Athena.BGA_RiftPortal_Item_Athena_C.UseRiftQuestUpdate
// 0x0030 (0x0030 - 0x0000)
struct BGA_RiftPortal_Item_Athena_C_UseRiftQuestUpdate final
{
public:
	class AController*                            InController;                                      // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AFortPlayerController*                  K2Node_DynamicCast_AsFort_Player_Controller;       // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0011(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_12[0x6];                                       // 0x0012(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class AFortPlayerController*>          K2Node_MakeArray_Array;                            // 0x0018(0x0010)(ZeroConstructor, ReferenceParm)
	bool                                          CallFunc_Athena_CheckQuestAndObjectiveCompletion_QuestIsValid; // 0x0028(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Athena_CheckQuestAndObjectiveCompletion_QuestCompleted; // 0x0029(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Athena_CheckQuestAndObjectiveCompletion_ObjectiveCompleted; // 0x002A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x002B(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x002C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BGA_RiftPortal_Item_Athena_C_UseRiftQuestUpdate) == 0x000008, "Wrong alignment on BGA_RiftPortal_Item_Athena_C_UseRiftQuestUpdate");
static_assert(sizeof(BGA_RiftPortal_Item_Athena_C_UseRiftQuestUpdate) == 0x000030, "Wrong size on BGA_RiftPortal_Item_Athena_C_UseRiftQuestUpdate");
static_assert(offsetof(BGA_RiftPortal_Item_Athena_C_UseRiftQuestUpdate, InController) == 0x000000, "Member 'BGA_RiftPortal_Item_Athena_C_UseRiftQuestUpdate::InController' has a wrong offset!");
static_assert(offsetof(BGA_RiftPortal_Item_Athena_C_UseRiftQuestUpdate, K2Node_DynamicCast_AsFort_Player_Controller) == 0x000008, "Member 'BGA_RiftPortal_Item_Athena_C_UseRiftQuestUpdate::K2Node_DynamicCast_AsFort_Player_Controller' has a wrong offset!");
static_assert(offsetof(BGA_RiftPortal_Item_Athena_C_UseRiftQuestUpdate, K2Node_DynamicCast_bSuccess) == 0x000010, "Member 'BGA_RiftPortal_Item_Athena_C_UseRiftQuestUpdate::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(BGA_RiftPortal_Item_Athena_C_UseRiftQuestUpdate, CallFunc_IsValid_ReturnValue) == 0x000011, "Member 'BGA_RiftPortal_Item_Athena_C_UseRiftQuestUpdate::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BGA_RiftPortal_Item_Athena_C_UseRiftQuestUpdate, K2Node_MakeArray_Array) == 0x000018, "Member 'BGA_RiftPortal_Item_Athena_C_UseRiftQuestUpdate::K2Node_MakeArray_Array' has a wrong offset!");
static_assert(offsetof(BGA_RiftPortal_Item_Athena_C_UseRiftQuestUpdate, CallFunc_Athena_CheckQuestAndObjectiveCompletion_QuestIsValid) == 0x000028, "Member 'BGA_RiftPortal_Item_Athena_C_UseRiftQuestUpdate::CallFunc_Athena_CheckQuestAndObjectiveCompletion_QuestIsValid' has a wrong offset!");
static_assert(offsetof(BGA_RiftPortal_Item_Athena_C_UseRiftQuestUpdate, CallFunc_Athena_CheckQuestAndObjectiveCompletion_QuestCompleted) == 0x000029, "Member 'BGA_RiftPortal_Item_Athena_C_UseRiftQuestUpdate::CallFunc_Athena_CheckQuestAndObjectiveCompletion_QuestCompleted' has a wrong offset!");
static_assert(offsetof(BGA_RiftPortal_Item_Athena_C_UseRiftQuestUpdate, CallFunc_Athena_CheckQuestAndObjectiveCompletion_ObjectiveCompleted) == 0x00002A, "Member 'BGA_RiftPortal_Item_Athena_C_UseRiftQuestUpdate::CallFunc_Athena_CheckQuestAndObjectiveCompletion_ObjectiveCompleted' has a wrong offset!");
static_assert(offsetof(BGA_RiftPortal_Item_Athena_C_UseRiftQuestUpdate, CallFunc_Not_PreBool_ReturnValue) == 0x00002B, "Member 'BGA_RiftPortal_Item_Athena_C_UseRiftQuestUpdate::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(BGA_RiftPortal_Item_Athena_C_UseRiftQuestUpdate, CallFunc_BooleanAND_ReturnValue) == 0x00002C, "Member 'BGA_RiftPortal_Item_Athena_C_UseRiftQuestUpdate::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");

// Function BGA_RiftPortal_Item_Athena.BGA_RiftPortal_Item_Athena_C.Is Flying
// 0x0020 (0x0020 - 0x0000)
struct BGA_RiftPortal_Item_Athena_C_Is_Flying final
{
public:
	bool                                          NewParam;                                          // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1[0x7];                                        // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UPawnMovementComponent*                 CallFunc_GetMovementComponent_ReturnValue;         // 0x0008(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UFortMovementComp_Character*            K2Node_DynamicCast_AsFort_Movement_Comp_Character; // 0x0010(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue;          // 0x0019(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BGA_RiftPortal_Item_Athena_C_Is_Flying) == 0x000008, "Wrong alignment on BGA_RiftPortal_Item_Athena_C_Is_Flying");
static_assert(sizeof(BGA_RiftPortal_Item_Athena_C_Is_Flying) == 0x000020, "Wrong size on BGA_RiftPortal_Item_Athena_C_Is_Flying");
static_assert(offsetof(BGA_RiftPortal_Item_Athena_C_Is_Flying, NewParam) == 0x000000, "Member 'BGA_RiftPortal_Item_Athena_C_Is_Flying::NewParam' has a wrong offset!");
static_assert(offsetof(BGA_RiftPortal_Item_Athena_C_Is_Flying, CallFunc_GetMovementComponent_ReturnValue) == 0x000008, "Member 'BGA_RiftPortal_Item_Athena_C_Is_Flying::CallFunc_GetMovementComponent_ReturnValue' has a wrong offset!");
static_assert(offsetof(BGA_RiftPortal_Item_Athena_C_Is_Flying, K2Node_DynamicCast_AsFort_Movement_Comp_Character) == 0x000010, "Member 'BGA_RiftPortal_Item_Athena_C_Is_Flying::K2Node_DynamicCast_AsFort_Movement_Comp_Character' has a wrong offset!");
static_assert(offsetof(BGA_RiftPortal_Item_Athena_C_Is_Flying, K2Node_DynamicCast_bSuccess) == 0x000018, "Member 'BGA_RiftPortal_Item_Athena_C_Is_Flying::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(BGA_RiftPortal_Item_Athena_C_Is_Flying, CallFunc_EqualEqual_ByteByte_ReturnValue) == 0x000019, "Member 'BGA_RiftPortal_Item_Athena_C_Is_Flying::CallFunc_EqualEqual_ByteByte_ReturnValue' has a wrong offset!");

// Function BGA_RiftPortal_Item_Athena.BGA_RiftPortal_Item_Athena_C.EjectFromTurret
// 0x0028 (0x0028 - 0x0000)
struct BGA_RiftPortal_Item_Athena_C_EjectFromTurret final
{
public:
	class AFortPlayerPawn*                        PlayerPawn_0;                                      // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AFortAthenaVehicle*                     CallFunc_GetVehicle_ReturnValue;                   // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UAbilitySystemComponent*                CallFunc_GetAbilitySystemComponent_ReturnValue;    // 0x0010(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_CanTeleport_ReturnValue;                  // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_19[0x3];                                       // 0x0019(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_RemoveActiveEffectsWithGrantedTags_ReturnValue; // 0x001C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsInVehicle_ReturnValue;                  // 0x0020(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BGA_RiftPortal_Item_Athena_C_EjectFromTurret) == 0x000008, "Wrong alignment on BGA_RiftPortal_Item_Athena_C_EjectFromTurret");
static_assert(sizeof(BGA_RiftPortal_Item_Athena_C_EjectFromTurret) == 0x000028, "Wrong size on BGA_RiftPortal_Item_Athena_C_EjectFromTurret");
static_assert(offsetof(BGA_RiftPortal_Item_Athena_C_EjectFromTurret, PlayerPawn_0) == 0x000000, "Member 'BGA_RiftPortal_Item_Athena_C_EjectFromTurret::PlayerPawn_0' has a wrong offset!");
static_assert(offsetof(BGA_RiftPortal_Item_Athena_C_EjectFromTurret, CallFunc_GetVehicle_ReturnValue) == 0x000008, "Member 'BGA_RiftPortal_Item_Athena_C_EjectFromTurret::CallFunc_GetVehicle_ReturnValue' has a wrong offset!");
static_assert(offsetof(BGA_RiftPortal_Item_Athena_C_EjectFromTurret, CallFunc_GetAbilitySystemComponent_ReturnValue) == 0x000010, "Member 'BGA_RiftPortal_Item_Athena_C_EjectFromTurret::CallFunc_GetAbilitySystemComponent_ReturnValue' has a wrong offset!");
static_assert(offsetof(BGA_RiftPortal_Item_Athena_C_EjectFromTurret, CallFunc_CanTeleport_ReturnValue) == 0x000018, "Member 'BGA_RiftPortal_Item_Athena_C_EjectFromTurret::CallFunc_CanTeleport_ReturnValue' has a wrong offset!");
static_assert(offsetof(BGA_RiftPortal_Item_Athena_C_EjectFromTurret, CallFunc_RemoveActiveEffectsWithGrantedTags_ReturnValue) == 0x00001C, "Member 'BGA_RiftPortal_Item_Athena_C_EjectFromTurret::CallFunc_RemoveActiveEffectsWithGrantedTags_ReturnValue' has a wrong offset!");
static_assert(offsetof(BGA_RiftPortal_Item_Athena_C_EjectFromTurret, CallFunc_IsInVehicle_ReturnValue) == 0x000020, "Member 'BGA_RiftPortal_Item_Athena_C_EjectFromTurret::CallFunc_IsInVehicle_ReturnValue' has a wrong offset!");

}


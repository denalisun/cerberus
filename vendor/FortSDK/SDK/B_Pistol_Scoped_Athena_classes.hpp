#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: B_Pistol_Scoped_Athena

#include "Basic.hpp"

#include "B_Pistol_Generic_classes.hpp"


namespace SDK
{

// BlueprintGeneratedClass B_Pistol_Scoped_Athena.B_Pistol_Scoped_Athena_C
// 0x0018 (0x0E00 - 0x0DE8)
class AB_Pistol_Scoped_Athena_C final : public AB_Pistol_Generic_C
{
public:
	class UStaticMeshComponent*                   Reload_QuickReload;                                // 0x0DE8(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UStaticMeshComponent*                   Reload_Ammo;                                       // 0x0DF0(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	float                                         BlendInTime;                                       // 0x0DF8(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

public:
	void UserConstructionScript();

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"B_Pistol_Scoped_Athena_C">();
	}
	static class AB_Pistol_Scoped_Athena_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<AB_Pistol_Scoped_Athena_C>();
	}
};
static_assert(alignof(AB_Pistol_Scoped_Athena_C) == 0x000008, "Wrong alignment on AB_Pistol_Scoped_Athena_C");
static_assert(sizeof(AB_Pistol_Scoped_Athena_C) == 0x000E00, "Wrong size on AB_Pistol_Scoped_Athena_C");
static_assert(offsetof(AB_Pistol_Scoped_Athena_C, Reload_QuickReload) == 0x000DE8, "Member 'AB_Pistol_Scoped_Athena_C::Reload_QuickReload' has a wrong offset!");
static_assert(offsetof(AB_Pistol_Scoped_Athena_C, Reload_Ammo) == 0x000DF0, "Member 'AB_Pistol_Scoped_Athena_C::Reload_Ammo' has a wrong offset!");
static_assert(offsetof(AB_Pistol_Scoped_Athena_C, BlendInTime) == 0x000DF8, "Member 'AB_Pistol_Scoped_Athena_C::BlendInTime' has a wrong offset!");

}


#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: B_RocketLauncher_Military_Athena

#include "Basic.hpp"

#include "FortniteGame_structs.hpp"
#include "CoreUObject_structs.hpp"
#include "Engine_structs.hpp"


namespace SDK::Params
{

// Function B_RocketLauncher_Military_Athena.B_RocketLauncher_Military_Athena_C.ExecuteUbergraph_B_RocketLauncher_Military_Athena
// 0x0230 (0x0230 - 0x0000)
struct B_RocketLauncher_Military_Athena_C_ExecuteUbergraph_B_RocketLauncher_Military_Athena final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                Temp_struct_Variable;                              // 0x0004(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                Temp_struct_Variable1;                             // 0x0010(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                Temp_struct_Variable2;                             // 0x001C(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Variable;                                 // 0x0028(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                Temp_struct_Variable3;                             // 0x002C(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                Temp_struct_Variable4;                             // 0x0038(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                Temp_struct_Variable5;                             // 0x0044(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                Temp_struct_Variable6;                             // 0x0050(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                Temp_struct_Variable7;                             // 0x005C(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TDelegate<void(class FName EventName, float EmitterTime, int32 ParticleTime, const struct FVector& Location, const struct FVector& Velocity, const struct FVector& Direction, const struct FVector& Normal, class FName BoneName, class UPhysicalMaterial* PhysMat)> K2Node_CreateDelegate_OutputDelegate;              // 0x0068(0x0010)(ZeroConstructor, NoDestructor)
	bool                                          Temp_bool_Has_Been_Initd_Variable;                 // 0x0078(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_79[0x3];                                       // 0x0079(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Variable1;                                // 0x007C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GreaterEqual_IntInt_ReturnValue;          // 0x0080(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_81[0x3];                                       // 0x0081(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                K2Node_Select_Default;                             // 0x0084(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0090(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0094(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_95[0x3];                                       // 0x0095(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Variable2;                                // 0x0098(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_IsClosed_Variable;                       // 0x009C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          Temp_bool_Has_Been_Initd_Variable1;                // 0x009D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_Event_Persistent_Fire;                      // 0x009E(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          Temp_bool_IsClosed_Variable1;                      // 0x009F(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FVector                                Temp_struct_Variable8;                             // 0x00A0(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FHitResult                             CallFunc_K2_SetRelativeLocation_SweepHitResult;    // 0x00AC(0x0088)(IsPlainOldData, NoDestructor, ContainsInstancedReference)
	EFortReloadFXState                            K2Node_Event_ReloadStage;                          // 0x0134(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsReloading_ReturnValue;                  // 0x0135(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_136[0x2];                                      // 0x0136(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                Temp_struct_Variable9;                             // 0x0138(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue;          // 0x0144(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x0145(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_146[0x2];                                      // 0x0146(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                K2Node_Select1_Default;                            // 0x0148(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FHitResult                             CallFunc_K2_SetRelativeLocation_SweepHitResult1;   // 0x0154(0x0088)(IsPlainOldData, NoDestructor, ContainsInstancedReference)
	class FName                                   K2Node_CustomEvent_EventName;                      // 0x01DC(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         K2Node_CustomEvent_EmitterTime;                    // 0x01E4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         K2Node_CustomEvent_ParticleTime;                   // 0x01E8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                K2Node_CustomEvent_Location;                       // 0x01EC(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                K2Node_CustomEvent_Velocity;                       // 0x01F8(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                K2Node_CustomEvent_Direction;                      // 0x0204(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                K2Node_CustomEvent_Normal;                         // 0x0210(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   K2Node_CustomEvent_BoneName;                       // 0x021C(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_224[0x4];                                      // 0x0224(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UPhysicalMaterial*                      K2Node_CustomEvent_PhysMat;                        // 0x0228(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(B_RocketLauncher_Military_Athena_C_ExecuteUbergraph_B_RocketLauncher_Military_Athena) == 0x000008, "Wrong alignment on B_RocketLauncher_Military_Athena_C_ExecuteUbergraph_B_RocketLauncher_Military_Athena");
static_assert(sizeof(B_RocketLauncher_Military_Athena_C_ExecuteUbergraph_B_RocketLauncher_Military_Athena) == 0x000230, "Wrong size on B_RocketLauncher_Military_Athena_C_ExecuteUbergraph_B_RocketLauncher_Military_Athena");
static_assert(offsetof(B_RocketLauncher_Military_Athena_C_ExecuteUbergraph_B_RocketLauncher_Military_Athena, EntryPoint) == 0x000000, "Member 'B_RocketLauncher_Military_Athena_C_ExecuteUbergraph_B_RocketLauncher_Military_Athena::EntryPoint' has a wrong offset!");
static_assert(offsetof(B_RocketLauncher_Military_Athena_C_ExecuteUbergraph_B_RocketLauncher_Military_Athena, Temp_struct_Variable) == 0x000004, "Member 'B_RocketLauncher_Military_Athena_C_ExecuteUbergraph_B_RocketLauncher_Military_Athena::Temp_struct_Variable' has a wrong offset!");
static_assert(offsetof(B_RocketLauncher_Military_Athena_C_ExecuteUbergraph_B_RocketLauncher_Military_Athena, Temp_struct_Variable1) == 0x000010, "Member 'B_RocketLauncher_Military_Athena_C_ExecuteUbergraph_B_RocketLauncher_Military_Athena::Temp_struct_Variable1' has a wrong offset!");
static_assert(offsetof(B_RocketLauncher_Military_Athena_C_ExecuteUbergraph_B_RocketLauncher_Military_Athena, Temp_struct_Variable2) == 0x00001C, "Member 'B_RocketLauncher_Military_Athena_C_ExecuteUbergraph_B_RocketLauncher_Military_Athena::Temp_struct_Variable2' has a wrong offset!");
static_assert(offsetof(B_RocketLauncher_Military_Athena_C_ExecuteUbergraph_B_RocketLauncher_Military_Athena, Temp_int_Variable) == 0x000028, "Member 'B_RocketLauncher_Military_Athena_C_ExecuteUbergraph_B_RocketLauncher_Military_Athena::Temp_int_Variable' has a wrong offset!");
static_assert(offsetof(B_RocketLauncher_Military_Athena_C_ExecuteUbergraph_B_RocketLauncher_Military_Athena, Temp_struct_Variable3) == 0x00002C, "Member 'B_RocketLauncher_Military_Athena_C_ExecuteUbergraph_B_RocketLauncher_Military_Athena::Temp_struct_Variable3' has a wrong offset!");
static_assert(offsetof(B_RocketLauncher_Military_Athena_C_ExecuteUbergraph_B_RocketLauncher_Military_Athena, Temp_struct_Variable4) == 0x000038, "Member 'B_RocketLauncher_Military_Athena_C_ExecuteUbergraph_B_RocketLauncher_Military_Athena::Temp_struct_Variable4' has a wrong offset!");
static_assert(offsetof(B_RocketLauncher_Military_Athena_C_ExecuteUbergraph_B_RocketLauncher_Military_Athena, Temp_struct_Variable5) == 0x000044, "Member 'B_RocketLauncher_Military_Athena_C_ExecuteUbergraph_B_RocketLauncher_Military_Athena::Temp_struct_Variable5' has a wrong offset!");
static_assert(offsetof(B_RocketLauncher_Military_Athena_C_ExecuteUbergraph_B_RocketLauncher_Military_Athena, Temp_struct_Variable6) == 0x000050, "Member 'B_RocketLauncher_Military_Athena_C_ExecuteUbergraph_B_RocketLauncher_Military_Athena::Temp_struct_Variable6' has a wrong offset!");
static_assert(offsetof(B_RocketLauncher_Military_Athena_C_ExecuteUbergraph_B_RocketLauncher_Military_Athena, Temp_struct_Variable7) == 0x00005C, "Member 'B_RocketLauncher_Military_Athena_C_ExecuteUbergraph_B_RocketLauncher_Military_Athena::Temp_struct_Variable7' has a wrong offset!");
static_assert(offsetof(B_RocketLauncher_Military_Athena_C_ExecuteUbergraph_B_RocketLauncher_Military_Athena, K2Node_CreateDelegate_OutputDelegate) == 0x000068, "Member 'B_RocketLauncher_Military_Athena_C_ExecuteUbergraph_B_RocketLauncher_Military_Athena::K2Node_CreateDelegate_OutputDelegate' has a wrong offset!");
static_assert(offsetof(B_RocketLauncher_Military_Athena_C_ExecuteUbergraph_B_RocketLauncher_Military_Athena, Temp_bool_Has_Been_Initd_Variable) == 0x000078, "Member 'B_RocketLauncher_Military_Athena_C_ExecuteUbergraph_B_RocketLauncher_Military_Athena::Temp_bool_Has_Been_Initd_Variable' has a wrong offset!");
static_assert(offsetof(B_RocketLauncher_Military_Athena_C_ExecuteUbergraph_B_RocketLauncher_Military_Athena, Temp_int_Variable1) == 0x00007C, "Member 'B_RocketLauncher_Military_Athena_C_ExecuteUbergraph_B_RocketLauncher_Military_Athena::Temp_int_Variable1' has a wrong offset!");
static_assert(offsetof(B_RocketLauncher_Military_Athena_C_ExecuteUbergraph_B_RocketLauncher_Military_Athena, CallFunc_GreaterEqual_IntInt_ReturnValue) == 0x000080, "Member 'B_RocketLauncher_Military_Athena_C_ExecuteUbergraph_B_RocketLauncher_Military_Athena::CallFunc_GreaterEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(B_RocketLauncher_Military_Athena_C_ExecuteUbergraph_B_RocketLauncher_Military_Athena, K2Node_Select_Default) == 0x000084, "Member 'B_RocketLauncher_Military_Athena_C_ExecuteUbergraph_B_RocketLauncher_Military_Athena::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(B_RocketLauncher_Military_Athena_C_ExecuteUbergraph_B_RocketLauncher_Military_Athena, CallFunc_Add_IntInt_ReturnValue) == 0x000090, "Member 'B_RocketLauncher_Military_Athena_C_ExecuteUbergraph_B_RocketLauncher_Military_Athena::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(B_RocketLauncher_Military_Athena_C_ExecuteUbergraph_B_RocketLauncher_Military_Athena, CallFunc_Less_IntInt_ReturnValue) == 0x000094, "Member 'B_RocketLauncher_Military_Athena_C_ExecuteUbergraph_B_RocketLauncher_Military_Athena::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(B_RocketLauncher_Military_Athena_C_ExecuteUbergraph_B_RocketLauncher_Military_Athena, Temp_int_Variable2) == 0x000098, "Member 'B_RocketLauncher_Military_Athena_C_ExecuteUbergraph_B_RocketLauncher_Military_Athena::Temp_int_Variable2' has a wrong offset!");
static_assert(offsetof(B_RocketLauncher_Military_Athena_C_ExecuteUbergraph_B_RocketLauncher_Military_Athena, Temp_bool_IsClosed_Variable) == 0x00009C, "Member 'B_RocketLauncher_Military_Athena_C_ExecuteUbergraph_B_RocketLauncher_Military_Athena::Temp_bool_IsClosed_Variable' has a wrong offset!");
static_assert(offsetof(B_RocketLauncher_Military_Athena_C_ExecuteUbergraph_B_RocketLauncher_Military_Athena, Temp_bool_Has_Been_Initd_Variable1) == 0x00009D, "Member 'B_RocketLauncher_Military_Athena_C_ExecuteUbergraph_B_RocketLauncher_Military_Athena::Temp_bool_Has_Been_Initd_Variable1' has a wrong offset!");
static_assert(offsetof(B_RocketLauncher_Military_Athena_C_ExecuteUbergraph_B_RocketLauncher_Military_Athena, K2Node_Event_Persistent_Fire) == 0x00009E, "Member 'B_RocketLauncher_Military_Athena_C_ExecuteUbergraph_B_RocketLauncher_Military_Athena::K2Node_Event_Persistent_Fire' has a wrong offset!");
static_assert(offsetof(B_RocketLauncher_Military_Athena_C_ExecuteUbergraph_B_RocketLauncher_Military_Athena, Temp_bool_IsClosed_Variable1) == 0x00009F, "Member 'B_RocketLauncher_Military_Athena_C_ExecuteUbergraph_B_RocketLauncher_Military_Athena::Temp_bool_IsClosed_Variable1' has a wrong offset!");
static_assert(offsetof(B_RocketLauncher_Military_Athena_C_ExecuteUbergraph_B_RocketLauncher_Military_Athena, Temp_struct_Variable8) == 0x0000A0, "Member 'B_RocketLauncher_Military_Athena_C_ExecuteUbergraph_B_RocketLauncher_Military_Athena::Temp_struct_Variable8' has a wrong offset!");
static_assert(offsetof(B_RocketLauncher_Military_Athena_C_ExecuteUbergraph_B_RocketLauncher_Military_Athena, CallFunc_K2_SetRelativeLocation_SweepHitResult) == 0x0000AC, "Member 'B_RocketLauncher_Military_Athena_C_ExecuteUbergraph_B_RocketLauncher_Military_Athena::CallFunc_K2_SetRelativeLocation_SweepHitResult' has a wrong offset!");
static_assert(offsetof(B_RocketLauncher_Military_Athena_C_ExecuteUbergraph_B_RocketLauncher_Military_Athena, K2Node_Event_ReloadStage) == 0x000134, "Member 'B_RocketLauncher_Military_Athena_C_ExecuteUbergraph_B_RocketLauncher_Military_Athena::K2Node_Event_ReloadStage' has a wrong offset!");
static_assert(offsetof(B_RocketLauncher_Military_Athena_C_ExecuteUbergraph_B_RocketLauncher_Military_Athena, CallFunc_IsReloading_ReturnValue) == 0x000135, "Member 'B_RocketLauncher_Military_Athena_C_ExecuteUbergraph_B_RocketLauncher_Military_Athena::CallFunc_IsReloading_ReturnValue' has a wrong offset!");
static_assert(offsetof(B_RocketLauncher_Military_Athena_C_ExecuteUbergraph_B_RocketLauncher_Military_Athena, Temp_struct_Variable9) == 0x000138, "Member 'B_RocketLauncher_Military_Athena_C_ExecuteUbergraph_B_RocketLauncher_Military_Athena::Temp_struct_Variable9' has a wrong offset!");
static_assert(offsetof(B_RocketLauncher_Military_Athena_C_ExecuteUbergraph_B_RocketLauncher_Military_Athena, CallFunc_EqualEqual_ByteByte_ReturnValue) == 0x000144, "Member 'B_RocketLauncher_Military_Athena_C_ExecuteUbergraph_B_RocketLauncher_Military_Athena::CallFunc_EqualEqual_ByteByte_ReturnValue' has a wrong offset!");
static_assert(offsetof(B_RocketLauncher_Military_Athena_C_ExecuteUbergraph_B_RocketLauncher_Military_Athena, CallFunc_BooleanAND_ReturnValue) == 0x000145, "Member 'B_RocketLauncher_Military_Athena_C_ExecuteUbergraph_B_RocketLauncher_Military_Athena::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");
static_assert(offsetof(B_RocketLauncher_Military_Athena_C_ExecuteUbergraph_B_RocketLauncher_Military_Athena, K2Node_Select1_Default) == 0x000148, "Member 'B_RocketLauncher_Military_Athena_C_ExecuteUbergraph_B_RocketLauncher_Military_Athena::K2Node_Select1_Default' has a wrong offset!");
static_assert(offsetof(B_RocketLauncher_Military_Athena_C_ExecuteUbergraph_B_RocketLauncher_Military_Athena, CallFunc_K2_SetRelativeLocation_SweepHitResult1) == 0x000154, "Member 'B_RocketLauncher_Military_Athena_C_ExecuteUbergraph_B_RocketLauncher_Military_Athena::CallFunc_K2_SetRelativeLocation_SweepHitResult1' has a wrong offset!");
static_assert(offsetof(B_RocketLauncher_Military_Athena_C_ExecuteUbergraph_B_RocketLauncher_Military_Athena, K2Node_CustomEvent_EventName) == 0x0001DC, "Member 'B_RocketLauncher_Military_Athena_C_ExecuteUbergraph_B_RocketLauncher_Military_Athena::K2Node_CustomEvent_EventName' has a wrong offset!");
static_assert(offsetof(B_RocketLauncher_Military_Athena_C_ExecuteUbergraph_B_RocketLauncher_Military_Athena, K2Node_CustomEvent_EmitterTime) == 0x0001E4, "Member 'B_RocketLauncher_Military_Athena_C_ExecuteUbergraph_B_RocketLauncher_Military_Athena::K2Node_CustomEvent_EmitterTime' has a wrong offset!");
static_assert(offsetof(B_RocketLauncher_Military_Athena_C_ExecuteUbergraph_B_RocketLauncher_Military_Athena, K2Node_CustomEvent_ParticleTime) == 0x0001E8, "Member 'B_RocketLauncher_Military_Athena_C_ExecuteUbergraph_B_RocketLauncher_Military_Athena::K2Node_CustomEvent_ParticleTime' has a wrong offset!");
static_assert(offsetof(B_RocketLauncher_Military_Athena_C_ExecuteUbergraph_B_RocketLauncher_Military_Athena, K2Node_CustomEvent_Location) == 0x0001EC, "Member 'B_RocketLauncher_Military_Athena_C_ExecuteUbergraph_B_RocketLauncher_Military_Athena::K2Node_CustomEvent_Location' has a wrong offset!");
static_assert(offsetof(B_RocketLauncher_Military_Athena_C_ExecuteUbergraph_B_RocketLauncher_Military_Athena, K2Node_CustomEvent_Velocity) == 0x0001F8, "Member 'B_RocketLauncher_Military_Athena_C_ExecuteUbergraph_B_RocketLauncher_Military_Athena::K2Node_CustomEvent_Velocity' has a wrong offset!");
static_assert(offsetof(B_RocketLauncher_Military_Athena_C_ExecuteUbergraph_B_RocketLauncher_Military_Athena, K2Node_CustomEvent_Direction) == 0x000204, "Member 'B_RocketLauncher_Military_Athena_C_ExecuteUbergraph_B_RocketLauncher_Military_Athena::K2Node_CustomEvent_Direction' has a wrong offset!");
static_assert(offsetof(B_RocketLauncher_Military_Athena_C_ExecuteUbergraph_B_RocketLauncher_Military_Athena, K2Node_CustomEvent_Normal) == 0x000210, "Member 'B_RocketLauncher_Military_Athena_C_ExecuteUbergraph_B_RocketLauncher_Military_Athena::K2Node_CustomEvent_Normal' has a wrong offset!");
static_assert(offsetof(B_RocketLauncher_Military_Athena_C_ExecuteUbergraph_B_RocketLauncher_Military_Athena, K2Node_CustomEvent_BoneName) == 0x00021C, "Member 'B_RocketLauncher_Military_Athena_C_ExecuteUbergraph_B_RocketLauncher_Military_Athena::K2Node_CustomEvent_BoneName' has a wrong offset!");
static_assert(offsetof(B_RocketLauncher_Military_Athena_C_ExecuteUbergraph_B_RocketLauncher_Military_Athena, K2Node_CustomEvent_PhysMat) == 0x000228, "Member 'B_RocketLauncher_Military_Athena_C_ExecuteUbergraph_B_RocketLauncher_Military_Athena::K2Node_CustomEvent_PhysMat' has a wrong offset!");

// Function B_RocketLauncher_Military_Athena.B_RocketLauncher_Military_Athena_C.SoundFX
// 0x0050 (0x0050 - 0x0000)
struct B_RocketLauncher_Military_Athena_C_SoundFX final
{
public:
	class FName                                   EventName;                                         // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         EmitterTime;                                       // 0x0008(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         ParticleTime;                                      // 0x000C(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                Location;                                          // 0x0010(0x000C)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                Velocity;                                          // 0x001C(0x000C)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                Direction;                                         // 0x0028(0x000C)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                Normal;                                            // 0x0034(0x000C)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   BoneName;                                          // 0x0040(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UPhysicalMaterial*                      PhysMat;                                           // 0x0048(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(B_RocketLauncher_Military_Athena_C_SoundFX) == 0x000008, "Wrong alignment on B_RocketLauncher_Military_Athena_C_SoundFX");
static_assert(sizeof(B_RocketLauncher_Military_Athena_C_SoundFX) == 0x000050, "Wrong size on B_RocketLauncher_Military_Athena_C_SoundFX");
static_assert(offsetof(B_RocketLauncher_Military_Athena_C_SoundFX, EventName) == 0x000000, "Member 'B_RocketLauncher_Military_Athena_C_SoundFX::EventName' has a wrong offset!");
static_assert(offsetof(B_RocketLauncher_Military_Athena_C_SoundFX, EmitterTime) == 0x000008, "Member 'B_RocketLauncher_Military_Athena_C_SoundFX::EmitterTime' has a wrong offset!");
static_assert(offsetof(B_RocketLauncher_Military_Athena_C_SoundFX, ParticleTime) == 0x00000C, "Member 'B_RocketLauncher_Military_Athena_C_SoundFX::ParticleTime' has a wrong offset!");
static_assert(offsetof(B_RocketLauncher_Military_Athena_C_SoundFX, Location) == 0x000010, "Member 'B_RocketLauncher_Military_Athena_C_SoundFX::Location' has a wrong offset!");
static_assert(offsetof(B_RocketLauncher_Military_Athena_C_SoundFX, Velocity) == 0x00001C, "Member 'B_RocketLauncher_Military_Athena_C_SoundFX::Velocity' has a wrong offset!");
static_assert(offsetof(B_RocketLauncher_Military_Athena_C_SoundFX, Direction) == 0x000028, "Member 'B_RocketLauncher_Military_Athena_C_SoundFX::Direction' has a wrong offset!");
static_assert(offsetof(B_RocketLauncher_Military_Athena_C_SoundFX, Normal) == 0x000034, "Member 'B_RocketLauncher_Military_Athena_C_SoundFX::Normal' has a wrong offset!");
static_assert(offsetof(B_RocketLauncher_Military_Athena_C_SoundFX, BoneName) == 0x000040, "Member 'B_RocketLauncher_Military_Athena_C_SoundFX::BoneName' has a wrong offset!");
static_assert(offsetof(B_RocketLauncher_Military_Athena_C_SoundFX, PhysMat) == 0x000048, "Member 'B_RocketLauncher_Military_Athena_C_SoundFX::PhysMat' has a wrong offset!");

// Function B_RocketLauncher_Military_Athena.B_RocketLauncher_Military_Athena_C.OnPlayReloadFX
// 0x0001 (0x0001 - 0x0000)
struct B_RocketLauncher_Military_Athena_C_OnPlayReloadFX final
{
public:
	EFortReloadFXState                            ReloadStage;                                       // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(B_RocketLauncher_Military_Athena_C_OnPlayReloadFX) == 0x000001, "Wrong alignment on B_RocketLauncher_Military_Athena_C_OnPlayReloadFX");
static_assert(sizeof(B_RocketLauncher_Military_Athena_C_OnPlayReloadFX) == 0x000001, "Wrong size on B_RocketLauncher_Military_Athena_C_OnPlayReloadFX");
static_assert(offsetof(B_RocketLauncher_Military_Athena_C_OnPlayReloadFX, ReloadStage) == 0x000000, "Member 'B_RocketLauncher_Military_Athena_C_OnPlayReloadFX::ReloadStage' has a wrong offset!");

// Function B_RocketLauncher_Military_Athena.B_RocketLauncher_Military_Athena_C.Muzzle Flash FX
// 0x0001 (0x0001 - 0x0000)
struct B_RocketLauncher_Military_Athena_C_Muzzle_Flash_FX final
{
public:
	bool                                          Persistent_Fire;                                   // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(B_RocketLauncher_Military_Athena_C_Muzzle_Flash_FX) == 0x000001, "Wrong alignment on B_RocketLauncher_Military_Athena_C_Muzzle_Flash_FX");
static_assert(sizeof(B_RocketLauncher_Military_Athena_C_Muzzle_Flash_FX) == 0x000001, "Wrong size on B_RocketLauncher_Military_Athena_C_Muzzle_Flash_FX");
static_assert(offsetof(B_RocketLauncher_Military_Athena_C_Muzzle_Flash_FX, Persistent_Fire) == 0x000000, "Member 'B_RocketLauncher_Military_Athena_C_Muzzle_Flash_FX::Persistent_Fire' has a wrong offset!");

}


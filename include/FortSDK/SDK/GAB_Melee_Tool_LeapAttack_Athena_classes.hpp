#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: GAB_Melee_Tool_LeapAttack_Athena

#include "Basic.hpp"

#include "GameplayTags_structs.hpp"
#include "GameplayAbilities_structs.hpp"
#include "CoreUObject_structs.hpp"
#include "GAB_Melee_GenericHeavyAttack_classes.hpp"
#include "Engine_structs.hpp"


namespace SDK
{

// BlueprintGeneratedClass GAB_Melee_Tool_LeapAttack_Athena.GAB_Melee_Tool_LeapAttack_Athena_C
// 0x0420 (0x0DA0 - 0x0980)
class UGAB_Melee_Tool_LeapAttack_Athena_C final : public UGAB_Melee_GenericHeavyAttack_C
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame_GAB_Melee_Tool_LeapAttack_Athena_C; // 0x0980(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	class AActor*                                 AvatarActor;                                       // 0x0988(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, DisableEditOnInstance, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash)
	class AFortPlayerPawn*                        FortPawn;                                          // 0x0990(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, DisableEditOnInstance, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash)
	uint8                                         Pad_998[0x8];                                      // 0x0998(0x0008)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTransform                             ImpactTargetingOffset;                             // 0x09A0(0x0030)(Edit, BlueprintVisible, DisableEditOnInstance, IsPlainOldData, NoDestructor, AdvancedDisplay)
	float                                         ImpactTargetingOffsetDistance;                     // 0x09D0(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_9D4[0x4];                                      // 0x09D4(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UAnimMontage*                           MontageIntroAndLoop;                               // 0x09D8(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UAnimMontage*                           MontageLandAndHit;                                 // 0x09E0(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Finished_Ability;                                  // 0x09E8(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, AdvancedDisplay)
	bool                                          FinishedTargeting;                                 // 0x09E9(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, AdvancedDisplay)
	bool                                          FinishedRecoveryAnimation;                         // 0x09EA(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, AdvancedDisplay)
	bool                                          ReachedFinishAbilityMontageStop;                   // 0x09EB(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, AdvancedDisplay)
	float                                         Failsafe_Recovery_Time;                            // 0x09EC(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FTimerHandle                           Outro_Failsafe_Timer_Handle;                       // 0x09F0(0x0008)(Edit, BlueprintVisible, DisableEditOnInstance, NoDestructor, AdvancedDisplay, HasGetValueTypeHash)
	class UForceFeedbackEffect*                   LaunchFeedback;                                    // 0x09F8(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                LaunchVelocity;                                    // 0x0A00(0x000C)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         Ground_Arc;                                        // 0x0A0C(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         Grav;                                              // 0x0A10(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          NotLookingDown;                                    // 0x0A14(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	uint8                                         Pad_A15[0x3];                                      // 0x0A15(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<EObjectTypeQuery>                      DestroyObjectTypes;                                // 0x0A18(0x0010)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance)
	struct FTimerHandle                           BuildingDestroyTImer;                              // 0x0A28(0x0008)(Edit, BlueprintVisible, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)
	struct FVector                                Initial_Overlap_Box_Extents;                       // 0x0A30(0x000C)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         UnitsInfrontOfPawnOverlapStarts;                   // 0x0A3C(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         OverlapAdditionalZ;                                // 0x0A40(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         InitialOverlapTraceDistance;                       // 0x0A44(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 HitActor;                                          // 0x0A48(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FActiveGameplayEffectHandle            GEJumpingFX;                                       // 0x0A50(0x0008)(Edit, BlueprintVisible, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)
	class UClass*                                 BuildingDestroyGE;                                 // 0x0A58(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FGameplayTagContainer                  BoogieBombTags;                                    // 0x0A60(0x0020)(Edit, BlueprintVisible, DisableEditOnInstance)
	float                                         AnimPlayRate;                                      // 0x0A80(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         AdditionalZDownLook;                               // 0x0A84(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         LandinSphereRadius;                                // 0x0A88(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_A8C[0x4];                                      // 0x0A8C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class AActor*>                         ActorsToIgnore;                                    // 0x0A90(0x0010)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, DisableEditOnInstance)
	float                                         VehicleImpulseVelocityMultiplier;                  // 0x0AA0(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_AA4[0x4];                                      // 0x0AA4(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FScalableFloat                         RecoveryAnimBasePlayrate;                          // 0x0AA8(0x0020)(Edit, BlueprintVisible, DisableEditOnInstance)
	struct FScalableFloat                         Leap_Distance_Base;                                // 0x0AC8(0x0020)(Edit, BlueprintVisible, DisableEditOnInstance)
	struct FScalableFloat                         LeapMinimumDistance;                               // 0x0AE8(0x0020)(Edit, BlueprintVisible, DisableEditOnInstance)
	struct FScalableFloat                         Leap_Distance_Air;                                 // 0x0B08(0x0020)(Edit, BlueprintVisible, DisableEditOnInstance)
	struct FScalableFloat                         DownSlashGravityMultiplier;                        // 0x0B28(0x0020)(Edit, BlueprintVisible, DisableEditOnInstance)
	struct FScalableFloat                         VelocityYClampMin;                                 // 0x0B48(0x0020)(Edit, BlueprintVisible, DisableEditOnInstance)
	struct FScalableFloat                         VelocityYClampMax;                                 // 0x0B68(0x0020)(Edit, BlueprintVisible, DisableEditOnInstance)
	struct FScalableFloat                         VelocityZClampMin;                                 // 0x0B88(0x0020)(Edit, BlueprintVisible, DisableEditOnInstance)
	struct FScalableFloat                         VelocityZClampMax;                                 // 0x0BA8(0x0020)(Edit, BlueprintVisible, DisableEditOnInstance)
	struct FScalableFloat                         TraceFrames;                                       // 0x0BC8(0x0020)(Edit, BlueprintVisible, DisableEditOnInstance)
	struct FScalableFloat                         PawnImpactZImpulse;                                // 0x0BE8(0x0020)(Edit, BlueprintVisible, DisableEditOnInstance)
	struct FScalableFloat                         VehicleZImpulse;                                   // 0x0C08(0x0020)(Edit, BlueprintVisible, DisableEditOnInstance)
	struct FScalableFloat                         VehicleImpulseMultiplier;                          // 0x0C28(0x0020)(Edit, BlueprintVisible, DisableEditOnInstance)
	struct FScalableFloat                         OnHitAnimPlayrate;                                 // 0x0C48(0x0020)(Edit, BlueprintVisible, DisableEditOnInstance)
	class UAnimMontage*                           MontageLandAndHitNoRM;                             // 0x0C68(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          bLandingOnIce;                                     // 0x0C70(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	uint8                                         Pad_C71[0x7];                                      // 0x0C71(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FScalableFloat                         CapsuleHalfHeight;                                 // 0x0C78(0x0020)(Edit, BlueprintVisible, DisableEditOnInstance)
	struct FScalableFloat                         CapsuleRadius;                                     // 0x0C98(0x0020)(Edit, BlueprintVisible, DisableEditOnInstance)
	TArray<class AActor*>                         JumpHitActors;                                     // 0x0CB8(0x0010)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, DisableEditOnInstance)
	struct FScalableFloat                         IcyFeetVelocityClamp;                              // 0x0CC8(0x0020)(Edit, BlueprintVisible, DisableEditOnInstance)
	bool                                          bInAirPawnCollision;                               // 0x0CE8(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	uint8                                         Pad_CE9[0x7];                                      // 0x0CE9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FScalableFloat                         PawnCollision;                                     // 0x0CF0(0x0020)(Edit, BlueprintVisible, DisableEditOnInstance)
	struct FGameplayTag                           GE_DamageActivationGameplayTag;                    // 0x0D10(0x0008)(Edit, BlueprintVisible, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)
	struct FHitResult                             HitResult;                                         // 0x0D18(0x0088)(Edit, BlueprintVisible, DisableEditOnInstance, IsPlainOldData, NoDestructor, ContainsInstancedReference)

public:
	void ExecuteUbergraph_GAB_Melee_Tool_LeapAttack_Athena(int32 EntryPoint);
	void ForceEndAbility();
	void PawnLandedAll();
	void FOR_TESTING();
	void Trace_ON();
	void K2_ActivateAbility();
	void TryEndAbility();
	void K2_OnEndAbility(bool bWasCancelled);
	void Outro_Failsafe();
	void PawnLanded(const struct FHitResult& Hit);
	void Added_654A6DE7422183CAA3D5D48DC39BE0A0();
	void Added_7D7B60B24D2223A5D44A0889BC877870();
	void OnChange_AD790DE0455B18BDD70FE1A9CBD0DE5B(EMovementMode NewMovementMode);
	void OnCompleted_AB9C83D743604335AF0531B0DACAEF61();
	void OnBlendOut_AB9C83D743604335AF0531B0DACAEF61();
	void OnInterrupted_AB9C83D743604335AF0531B0DACAEF61();
	void OnCancelled_AB9C83D743604335AF0531B0DACAEF61();
	void OnSync_22429617414EC4188078988F1235BC84();
	void OnCompleted_352A42F64EBE813D74D56DB415B7CD62();
	void OnBlendOut_352A42F64EBE813D74D56DB415B7CD62();
	void OnInterrupted_352A42F64EBE813D74D56DB415B7CD62();
	void OnCancelled_352A42F64EBE813D74D56DB415B7CD62();
	void Ability_Setup();
	void DestroyBuilding(TArray<struct FHitResult>& BuildingActor);
	void OnRep_Outro_Failsafe_Timer_Handle();
	void CameraShakeAndForceFeedback();
	void ApplyDamageAndImpulseGEs();
	void TraceCheck();

	struct FTransform GetCustomAbilitySourceTransform() const;
	void CalculateLandingDistanceFromTarget(class AActor* PlayerActor, class AActor* TargetActor, float DesiredLandingDistance, float GapClosingPercentageWhenNearTarget, struct FVector* TargetLocationOffset) const;
	void IsTargetFartherThanAdjustedDesiredLeapDistance(class AActor* PlayerActor, class AActor* TargetActor, float DesiredLandingDistance, float GapClosingPercentageWhenNearTarget, bool* TargetIsFartherThanAdjustedDesiredLeapDistance) const;
	void CalculateTargetingOffsetTransform(struct FTransform* TargetingOffsetTransform) const;

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"GAB_Melee_Tool_LeapAttack_Athena_C">();
	}
	static class UGAB_Melee_Tool_LeapAttack_Athena_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<UGAB_Melee_Tool_LeapAttack_Athena_C>();
	}
};
static_assert(alignof(UGAB_Melee_Tool_LeapAttack_Athena_C) == 0x000010, "Wrong alignment on UGAB_Melee_Tool_LeapAttack_Athena_C");
static_assert(sizeof(UGAB_Melee_Tool_LeapAttack_Athena_C) == 0x000DA0, "Wrong size on UGAB_Melee_Tool_LeapAttack_Athena_C");
static_assert(offsetof(UGAB_Melee_Tool_LeapAttack_Athena_C, UberGraphFrame_GAB_Melee_Tool_LeapAttack_Athena_C) == 0x000980, "Member 'UGAB_Melee_Tool_LeapAttack_Athena_C::UberGraphFrame_GAB_Melee_Tool_LeapAttack_Athena_C' has a wrong offset!");
static_assert(offsetof(UGAB_Melee_Tool_LeapAttack_Athena_C, AvatarActor) == 0x000988, "Member 'UGAB_Melee_Tool_LeapAttack_Athena_C::AvatarActor' has a wrong offset!");
static_assert(offsetof(UGAB_Melee_Tool_LeapAttack_Athena_C, FortPawn) == 0x000990, "Member 'UGAB_Melee_Tool_LeapAttack_Athena_C::FortPawn' has a wrong offset!");
static_assert(offsetof(UGAB_Melee_Tool_LeapAttack_Athena_C, ImpactTargetingOffset) == 0x0009A0, "Member 'UGAB_Melee_Tool_LeapAttack_Athena_C::ImpactTargetingOffset' has a wrong offset!");
static_assert(offsetof(UGAB_Melee_Tool_LeapAttack_Athena_C, ImpactTargetingOffsetDistance) == 0x0009D0, "Member 'UGAB_Melee_Tool_LeapAttack_Athena_C::ImpactTargetingOffsetDistance' has a wrong offset!");
static_assert(offsetof(UGAB_Melee_Tool_LeapAttack_Athena_C, MontageIntroAndLoop) == 0x0009D8, "Member 'UGAB_Melee_Tool_LeapAttack_Athena_C::MontageIntroAndLoop' has a wrong offset!");
static_assert(offsetof(UGAB_Melee_Tool_LeapAttack_Athena_C, MontageLandAndHit) == 0x0009E0, "Member 'UGAB_Melee_Tool_LeapAttack_Athena_C::MontageLandAndHit' has a wrong offset!");
static_assert(offsetof(UGAB_Melee_Tool_LeapAttack_Athena_C, Finished_Ability) == 0x0009E8, "Member 'UGAB_Melee_Tool_LeapAttack_Athena_C::Finished_Ability' has a wrong offset!");
static_assert(offsetof(UGAB_Melee_Tool_LeapAttack_Athena_C, FinishedTargeting) == 0x0009E9, "Member 'UGAB_Melee_Tool_LeapAttack_Athena_C::FinishedTargeting' has a wrong offset!");
static_assert(offsetof(UGAB_Melee_Tool_LeapAttack_Athena_C, FinishedRecoveryAnimation) == 0x0009EA, "Member 'UGAB_Melee_Tool_LeapAttack_Athena_C::FinishedRecoveryAnimation' has a wrong offset!");
static_assert(offsetof(UGAB_Melee_Tool_LeapAttack_Athena_C, ReachedFinishAbilityMontageStop) == 0x0009EB, "Member 'UGAB_Melee_Tool_LeapAttack_Athena_C::ReachedFinishAbilityMontageStop' has a wrong offset!");
static_assert(offsetof(UGAB_Melee_Tool_LeapAttack_Athena_C, Failsafe_Recovery_Time) == 0x0009EC, "Member 'UGAB_Melee_Tool_LeapAttack_Athena_C::Failsafe_Recovery_Time' has a wrong offset!");
static_assert(offsetof(UGAB_Melee_Tool_LeapAttack_Athena_C, Outro_Failsafe_Timer_Handle) == 0x0009F0, "Member 'UGAB_Melee_Tool_LeapAttack_Athena_C::Outro_Failsafe_Timer_Handle' has a wrong offset!");
static_assert(offsetof(UGAB_Melee_Tool_LeapAttack_Athena_C, LaunchFeedback) == 0x0009F8, "Member 'UGAB_Melee_Tool_LeapAttack_Athena_C::LaunchFeedback' has a wrong offset!");
static_assert(offsetof(UGAB_Melee_Tool_LeapAttack_Athena_C, LaunchVelocity) == 0x000A00, "Member 'UGAB_Melee_Tool_LeapAttack_Athena_C::LaunchVelocity' has a wrong offset!");
static_assert(offsetof(UGAB_Melee_Tool_LeapAttack_Athena_C, Ground_Arc) == 0x000A0C, "Member 'UGAB_Melee_Tool_LeapAttack_Athena_C::Ground_Arc' has a wrong offset!");
static_assert(offsetof(UGAB_Melee_Tool_LeapAttack_Athena_C, Grav) == 0x000A10, "Member 'UGAB_Melee_Tool_LeapAttack_Athena_C::Grav' has a wrong offset!");
static_assert(offsetof(UGAB_Melee_Tool_LeapAttack_Athena_C, NotLookingDown) == 0x000A14, "Member 'UGAB_Melee_Tool_LeapAttack_Athena_C::NotLookingDown' has a wrong offset!");
static_assert(offsetof(UGAB_Melee_Tool_LeapAttack_Athena_C, DestroyObjectTypes) == 0x000A18, "Member 'UGAB_Melee_Tool_LeapAttack_Athena_C::DestroyObjectTypes' has a wrong offset!");
static_assert(offsetof(UGAB_Melee_Tool_LeapAttack_Athena_C, BuildingDestroyTImer) == 0x000A28, "Member 'UGAB_Melee_Tool_LeapAttack_Athena_C::BuildingDestroyTImer' has a wrong offset!");
static_assert(offsetof(UGAB_Melee_Tool_LeapAttack_Athena_C, Initial_Overlap_Box_Extents) == 0x000A30, "Member 'UGAB_Melee_Tool_LeapAttack_Athena_C::Initial_Overlap_Box_Extents' has a wrong offset!");
static_assert(offsetof(UGAB_Melee_Tool_LeapAttack_Athena_C, UnitsInfrontOfPawnOverlapStarts) == 0x000A3C, "Member 'UGAB_Melee_Tool_LeapAttack_Athena_C::UnitsInfrontOfPawnOverlapStarts' has a wrong offset!");
static_assert(offsetof(UGAB_Melee_Tool_LeapAttack_Athena_C, OverlapAdditionalZ) == 0x000A40, "Member 'UGAB_Melee_Tool_LeapAttack_Athena_C::OverlapAdditionalZ' has a wrong offset!");
static_assert(offsetof(UGAB_Melee_Tool_LeapAttack_Athena_C, InitialOverlapTraceDistance) == 0x000A44, "Member 'UGAB_Melee_Tool_LeapAttack_Athena_C::InitialOverlapTraceDistance' has a wrong offset!");
static_assert(offsetof(UGAB_Melee_Tool_LeapAttack_Athena_C, HitActor) == 0x000A48, "Member 'UGAB_Melee_Tool_LeapAttack_Athena_C::HitActor' has a wrong offset!");
static_assert(offsetof(UGAB_Melee_Tool_LeapAttack_Athena_C, GEJumpingFX) == 0x000A50, "Member 'UGAB_Melee_Tool_LeapAttack_Athena_C::GEJumpingFX' has a wrong offset!");
static_assert(offsetof(UGAB_Melee_Tool_LeapAttack_Athena_C, BuildingDestroyGE) == 0x000A58, "Member 'UGAB_Melee_Tool_LeapAttack_Athena_C::BuildingDestroyGE' has a wrong offset!");
static_assert(offsetof(UGAB_Melee_Tool_LeapAttack_Athena_C, BoogieBombTags) == 0x000A60, "Member 'UGAB_Melee_Tool_LeapAttack_Athena_C::BoogieBombTags' has a wrong offset!");
static_assert(offsetof(UGAB_Melee_Tool_LeapAttack_Athena_C, AnimPlayRate) == 0x000A80, "Member 'UGAB_Melee_Tool_LeapAttack_Athena_C::AnimPlayRate' has a wrong offset!");
static_assert(offsetof(UGAB_Melee_Tool_LeapAttack_Athena_C, AdditionalZDownLook) == 0x000A84, "Member 'UGAB_Melee_Tool_LeapAttack_Athena_C::AdditionalZDownLook' has a wrong offset!");
static_assert(offsetof(UGAB_Melee_Tool_LeapAttack_Athena_C, LandinSphereRadius) == 0x000A88, "Member 'UGAB_Melee_Tool_LeapAttack_Athena_C::LandinSphereRadius' has a wrong offset!");
static_assert(offsetof(UGAB_Melee_Tool_LeapAttack_Athena_C, ActorsToIgnore) == 0x000A90, "Member 'UGAB_Melee_Tool_LeapAttack_Athena_C::ActorsToIgnore' has a wrong offset!");
static_assert(offsetof(UGAB_Melee_Tool_LeapAttack_Athena_C, VehicleImpulseVelocityMultiplier) == 0x000AA0, "Member 'UGAB_Melee_Tool_LeapAttack_Athena_C::VehicleImpulseVelocityMultiplier' has a wrong offset!");
static_assert(offsetof(UGAB_Melee_Tool_LeapAttack_Athena_C, RecoveryAnimBasePlayrate) == 0x000AA8, "Member 'UGAB_Melee_Tool_LeapAttack_Athena_C::RecoveryAnimBasePlayrate' has a wrong offset!");
static_assert(offsetof(UGAB_Melee_Tool_LeapAttack_Athena_C, Leap_Distance_Base) == 0x000AC8, "Member 'UGAB_Melee_Tool_LeapAttack_Athena_C::Leap_Distance_Base' has a wrong offset!");
static_assert(offsetof(UGAB_Melee_Tool_LeapAttack_Athena_C, LeapMinimumDistance) == 0x000AE8, "Member 'UGAB_Melee_Tool_LeapAttack_Athena_C::LeapMinimumDistance' has a wrong offset!");
static_assert(offsetof(UGAB_Melee_Tool_LeapAttack_Athena_C, Leap_Distance_Air) == 0x000B08, "Member 'UGAB_Melee_Tool_LeapAttack_Athena_C::Leap_Distance_Air' has a wrong offset!");
static_assert(offsetof(UGAB_Melee_Tool_LeapAttack_Athena_C, DownSlashGravityMultiplier) == 0x000B28, "Member 'UGAB_Melee_Tool_LeapAttack_Athena_C::DownSlashGravityMultiplier' has a wrong offset!");
static_assert(offsetof(UGAB_Melee_Tool_LeapAttack_Athena_C, VelocityYClampMin) == 0x000B48, "Member 'UGAB_Melee_Tool_LeapAttack_Athena_C::VelocityYClampMin' has a wrong offset!");
static_assert(offsetof(UGAB_Melee_Tool_LeapAttack_Athena_C, VelocityYClampMax) == 0x000B68, "Member 'UGAB_Melee_Tool_LeapAttack_Athena_C::VelocityYClampMax' has a wrong offset!");
static_assert(offsetof(UGAB_Melee_Tool_LeapAttack_Athena_C, VelocityZClampMin) == 0x000B88, "Member 'UGAB_Melee_Tool_LeapAttack_Athena_C::VelocityZClampMin' has a wrong offset!");
static_assert(offsetof(UGAB_Melee_Tool_LeapAttack_Athena_C, VelocityZClampMax) == 0x000BA8, "Member 'UGAB_Melee_Tool_LeapAttack_Athena_C::VelocityZClampMax' has a wrong offset!");
static_assert(offsetof(UGAB_Melee_Tool_LeapAttack_Athena_C, TraceFrames) == 0x000BC8, "Member 'UGAB_Melee_Tool_LeapAttack_Athena_C::TraceFrames' has a wrong offset!");
static_assert(offsetof(UGAB_Melee_Tool_LeapAttack_Athena_C, PawnImpactZImpulse) == 0x000BE8, "Member 'UGAB_Melee_Tool_LeapAttack_Athena_C::PawnImpactZImpulse' has a wrong offset!");
static_assert(offsetof(UGAB_Melee_Tool_LeapAttack_Athena_C, VehicleZImpulse) == 0x000C08, "Member 'UGAB_Melee_Tool_LeapAttack_Athena_C::VehicleZImpulse' has a wrong offset!");
static_assert(offsetof(UGAB_Melee_Tool_LeapAttack_Athena_C, VehicleImpulseMultiplier) == 0x000C28, "Member 'UGAB_Melee_Tool_LeapAttack_Athena_C::VehicleImpulseMultiplier' has a wrong offset!");
static_assert(offsetof(UGAB_Melee_Tool_LeapAttack_Athena_C, OnHitAnimPlayrate) == 0x000C48, "Member 'UGAB_Melee_Tool_LeapAttack_Athena_C::OnHitAnimPlayrate' has a wrong offset!");
static_assert(offsetof(UGAB_Melee_Tool_LeapAttack_Athena_C, MontageLandAndHitNoRM) == 0x000C68, "Member 'UGAB_Melee_Tool_LeapAttack_Athena_C::MontageLandAndHitNoRM' has a wrong offset!");
static_assert(offsetof(UGAB_Melee_Tool_LeapAttack_Athena_C, bLandingOnIce) == 0x000C70, "Member 'UGAB_Melee_Tool_LeapAttack_Athena_C::bLandingOnIce' has a wrong offset!");
static_assert(offsetof(UGAB_Melee_Tool_LeapAttack_Athena_C, CapsuleHalfHeight) == 0x000C78, "Member 'UGAB_Melee_Tool_LeapAttack_Athena_C::CapsuleHalfHeight' has a wrong offset!");
static_assert(offsetof(UGAB_Melee_Tool_LeapAttack_Athena_C, CapsuleRadius) == 0x000C98, "Member 'UGAB_Melee_Tool_LeapAttack_Athena_C::CapsuleRadius' has a wrong offset!");
static_assert(offsetof(UGAB_Melee_Tool_LeapAttack_Athena_C, JumpHitActors) == 0x000CB8, "Member 'UGAB_Melee_Tool_LeapAttack_Athena_C::JumpHitActors' has a wrong offset!");
static_assert(offsetof(UGAB_Melee_Tool_LeapAttack_Athena_C, IcyFeetVelocityClamp) == 0x000CC8, "Member 'UGAB_Melee_Tool_LeapAttack_Athena_C::IcyFeetVelocityClamp' has a wrong offset!");
static_assert(offsetof(UGAB_Melee_Tool_LeapAttack_Athena_C, bInAirPawnCollision) == 0x000CE8, "Member 'UGAB_Melee_Tool_LeapAttack_Athena_C::bInAirPawnCollision' has a wrong offset!");
static_assert(offsetof(UGAB_Melee_Tool_LeapAttack_Athena_C, PawnCollision) == 0x000CF0, "Member 'UGAB_Melee_Tool_LeapAttack_Athena_C::PawnCollision' has a wrong offset!");
static_assert(offsetof(UGAB_Melee_Tool_LeapAttack_Athena_C, GE_DamageActivationGameplayTag) == 0x000D10, "Member 'UGAB_Melee_Tool_LeapAttack_Athena_C::GE_DamageActivationGameplayTag' has a wrong offset!");
static_assert(offsetof(UGAB_Melee_Tool_LeapAttack_Athena_C, HitResult) == 0x000D18, "Member 'UGAB_Melee_Tool_LeapAttack_Athena_C::HitResult' has a wrong offset!");

}


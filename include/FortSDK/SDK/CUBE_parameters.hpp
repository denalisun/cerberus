#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: CUBE

#include "Basic.hpp"

#include "GameplayAbilities_structs.hpp"
#include "CoreUObject_structs.hpp"
#include "Engine_structs.hpp"
#include "CubeStruct_structs.hpp"
#include "GameplayTags_structs.hpp"


namespace SDK::Params
{

// Function CUBE.CUBE_C.CubeSetupComplete__DelegateSignature
// 0x0004 (0x0004 - 0x0000)
struct CUBE_C_CubeSetupComplete__DelegateSignature final
{
public:
	int32                                         CurrentIndex;                                      // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(CUBE_C_CubeSetupComplete__DelegateSignature) == 0x000004, "Wrong alignment on CUBE_C_CubeSetupComplete__DelegateSignature");
static_assert(sizeof(CUBE_C_CubeSetupComplete__DelegateSignature) == 0x000004, "Wrong size on CUBE_C_CubeSetupComplete__DelegateSignature");
static_assert(offsetof(CUBE_C_CubeSetupComplete__DelegateSignature, CurrentIndex) == 0x000000, "Member 'CUBE_C_CubeSetupComplete__DelegateSignature::CurrentIndex' has a wrong offset!");

// Function CUBE.CUBE_C.LandedAtRune__DelegateSignature
// 0x0004 (0x0004 - 0x0000)
struct CUBE_C_LandedAtRune__DelegateSignature final
{
public:
	int32                                         Index_0;                                           // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(CUBE_C_LandedAtRune__DelegateSignature) == 0x000004, "Wrong alignment on CUBE_C_LandedAtRune__DelegateSignature");
static_assert(sizeof(CUBE_C_LandedAtRune__DelegateSignature) == 0x000004, "Wrong size on CUBE_C_LandedAtRune__DelegateSignature");
static_assert(offsetof(CUBE_C_LandedAtRune__DelegateSignature, Index_0) == 0x000000, "Member 'CUBE_C_LandedAtRune__DelegateSignature::Index_0' has a wrong offset!");

// Function CUBE.CUBE_C.ExecuteUbergraph_CUBE
// 0x1C10 (0x1C10 - 0x0000)
struct CUBE_C_ExecuteUbergraph_CUBE final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4[0x4];                                        // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 K2Node_CustomEvent_EventName7;                     // 0x0008(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	struct FTimespan                              K2Node_CustomEvent_TimeUntilEnd5;                  // 0x0018(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	struct FTimespan                              K2Node_CustomEvent_TimeSinceBegin5;                // 0x0020(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	float                                         K2Node_CustomEvent_TimeSpanRatio5;                 // 0x0028(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TDelegate<void(const class FString& EventName, const struct FTimespan& TimeUntilEnd, const struct FTimespan& TimeSinceBegin, float TimespanRatio)> K2Node_CreateDelegate_OutputDelegate;              // 0x002C(0x0010)(ZeroConstructor, NoDestructor)
	uint8                                         Pad_3C[0x4];                                       // 0x003C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 K2Node_CustomEvent_EventName6;                     // 0x0040(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	struct FTimespan                              K2Node_CustomEvent_TimeUntilEnd4;                  // 0x0050(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	struct FTimespan                              K2Node_CustomEvent_TimeSinceBegin4;                // 0x0058(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	float                                         K2Node_CustomEvent_TimeSpanRatio4;                 // 0x0060(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TDelegate<void(const class FString& EventName, const struct FTimespan& TimeUntilEnd, const struct FTimespan& TimeSinceBegin, float TimespanRatio)> K2Node_CreateDelegate_OutputDelegate1;             // 0x0064(0x0010)(ZeroConstructor, NoDestructor)
	uint8                                         Pad_74[0x4];                                       // 0x0074(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 K2Node_CustomEvent_EventName5;                     // 0x0078(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	struct FTimespan                              K2Node_CustomEvent_TimeUntilEnd3;                  // 0x0088(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	struct FTimespan                              K2Node_CustomEvent_TimeSinceBegin3;                // 0x0090(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	float                                         K2Node_CustomEvent_TimeSpanRatio3;                 // 0x0098(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TDelegate<void(const class FString& EventName, const struct FTimespan& TimeUntilEnd, const struct FTimespan& TimeSinceBegin, float TimespanRatio)> K2Node_CreateDelegate_OutputDelegate2;             // 0x009C(0x0010)(ZeroConstructor, NoDestructor)
	float                                         Temp_float_Variable;                               // 0x00AC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FTimespan                              Temp_struct_Variable;                              // 0x00B0(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	struct FTimespan                              Temp_struct_Variable1;                             // 0x00B8(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class FString                                 Temp_string_Variable;                              // 0x00C0(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class UFortAsyncAction_CalendarEventWatcher*  CallFunc_WatchCalendarEvent_ReturnValue;           // 0x00D0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TDelegate<void(const class FString& EventName, const struct FTimespan& TimeUntilEnd, const struct FTimespan& TimeSinceBegin, float TimespanRatio)> K2Node_CreateDelegate_OutputDelegate3;             // 0x00D8(0x0010)(ZeroConstructor, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x00E8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_E9[0x7];                                       // 0x00E9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 K2Node_CustomEvent_EventName4;                     // 0x00F0(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	struct FTimespan                              K2Node_CustomEvent_TimeUntilEnd2;                  // 0x0100(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	struct FTimespan                              K2Node_CustomEvent_TimeSinceBegin2;                // 0x0108(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	float                                         K2Node_CustomEvent_TimeSpanRatio2;                 // 0x0110(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_114[0x4];                                      // 0x0114(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 K2Node_CustomEvent_EventName3;                     // 0x0118(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	struct FTimespan                              K2Node_CustomEvent_TimeUntilEnd1;                  // 0x0128(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	struct FTimespan                              K2Node_CustomEvent_TimeSinceBegin1;                // 0x0130(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	float                                         K2Node_CustomEvent_TimeSpanRatio1;                 // 0x0138(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TDelegate<void(const class FString& EventName, const struct FTimespan& TimeUntilEnd, const struct FTimespan& TimeSinceBegin, float TimespanRatio)> K2Node_CreateDelegate_OutputDelegate4;             // 0x013C(0x0010)(ZeroConstructor, NoDestructor)
	uint8                                         Pad_14C[0x4];                                      // 0x014C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 K2Node_CustomEvent_EventName2;                     // 0x0150(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	struct FTimespan                              K2Node_CustomEvent_TimeUntilEnd;                   // 0x0160(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	struct FTimespan                              K2Node_CustomEvent_TimeSinceBegin;                 // 0x0168(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	float                                         K2Node_CustomEvent_TimeSpanRatio;                  // 0x0170(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TDelegate<void(const class FString& EventName, const struct FTimespan& TimeUntilEnd, const struct FTimespan& TimeSinceBegin, float TimespanRatio)> K2Node_CreateDelegate_OutputDelegate5;             // 0x0174(0x0010)(ZeroConstructor, NoDestructor)
	float                                         Temp_float_Variable1;                              // 0x0184(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FTimespan                              Temp_struct_Variable2;                             // 0x0188(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	struct FTimespan                              Temp_struct_Variable3;                             // 0x0190(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class FString                                 Temp_string_Variable1;                             // 0x0198(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	float                                         CallFunc_GetTotalSeconds_ReturnValue;              // 0x01A8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetTotalHours_ReturnValue;                // 0x01AC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_FloatFloat_ReturnValue;              // 0x01B0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1B1[0x7];                                      // 0x01B1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTimespan                              CallFunc_Add_TimespanTimespan_ReturnValue;         // 0x01B8(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UFortReplayContext*                     CallFunc_GetContext_ReturnValue;                   // 0x01C0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue1;                     // 0x01C8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1C9[0x7];                                      // 0x01C9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UFortReplayContext*                     CallFunc_GetContext_ReturnValue1;                  // 0x01D0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UFortReplayContext*                     CallFunc_GetContext_ReturnValue2;                  // 0x01D8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue2;                     // 0x01E0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue3;                     // 0x01E1(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1E2[0x2];                                      // 0x01E2(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_K2_GetComponentLocation_ReturnValue;      // 0x01E4(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UPrimitiveComponent*                    K2Node_Event_MyComp;                               // 0x01F0(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 K2Node_Event_Other;                                // 0x01F8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UPrimitiveComponent*                    K2Node_Event_OtherComp;                            // 0x0200(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_Event_bSelfMoved;                           // 0x0208(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_209[0x3];                                      // 0x0209(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                K2Node_Event_HitLocation;                          // 0x020C(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                K2Node_Event_HitNormal;                            // 0x0218(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                K2Node_Event_NormalImpulse;                        // 0x0224(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FHitResult                             K2Node_Event_Hit;                                  // 0x0230(0x0088)(ConstParm, IsPlainOldData, NoDestructor, ContainsInstancedReference)
	struct FVector                                CallFunc_Multiply_VectorFloat_ReturnValue;         // 0x02B8(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Multiply_VectorFloat_ReturnValue1;        // 0x02C4(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AFortAthenaVehicle*                     K2Node_DynamicCast_AsFort_Athena_Vehicle;          // 0x02D0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x02D8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_2D9[0x7];                                      // 0x02D9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class AB_PlayerSpawnedBall_C*                 K2Node_DynamicCast_AsB_Player_Spawned_Ball;        // 0x02E0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess1;                      // 0x02E8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_2E9[0x7];                                      // 0x02E9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class AFortAthenaSKVehicle*                   K2Node_DynamicCast_AsFort_Athena_SKVehicle;        // 0x02F0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess2;                      // 0x02F8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_2F9[0x3];                                      // 0x02F9(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_K2_GetActorLocation_ReturnValue;          // 0x02FC(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Subtract_VectorVector_ReturnValue;        // 0x0308(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Normal_ReturnValue;                       // 0x0314(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FTransform                             CallFunc_GetTransform_ReturnValue;                 // 0x0320(0x0030)(IsPlainOldData, NoDestructor)
	struct FVector                                CallFunc_Multiply_VectorFloat_ReturnValue2;        // 0x0350(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_35C[0x4];                                      // 0x035C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class APlayerPawn_Athena_C*                   K2Node_DynamicCast_AsPlayer_Pawn_Athena;           // 0x0360(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess3;                      // 0x0368(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_369[0x3];                                      // 0x0369(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_Add_VectorVector_ReturnValue;             // 0x036C(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         K2Node_Event_Damage1;                              // 0x0378(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_37C[0x4];                                      // 0x037C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FGameplayTagContainer                  K2Node_Event_DamageTags1;                          // 0x0380(0x0020)(ConstParm)
	struct FVector                                K2Node_Event_Momentum1;                            // 0x03A0(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FHitResult                             K2Node_Event_HitInfo1;                             // 0x03AC(0x0088)(ConstParm, IsPlainOldData, NoDestructor, ContainsInstancedReference)
	uint8                                         Pad_434[0x4];                                      // 0x0434(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class AController*                            K2Node_Event_InstigatedBy1;                        // 0x0438(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 K2Node_Event_DamageCauser1;                        // 0x0440(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FGameplayEffectContextHandle           K2Node_Event_EffectContext1;                       // 0x0448(0x0018)()
	class AActor*                                 CallFunc_GetOwner_ReturnValue;                     // 0x0460(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AFortPlayerController*                  K2Node_DynamicCast_AsFort_Player_Controller;       // 0x0468(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess4;                      // 0x0470(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_471[0x7];                                      // 0x0471(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class APlayerPawn_Athena_C*                   K2Node_DynamicCast_AsPlayer_Pawn_Athena1;          // 0x0478(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess5;                      // 0x0480(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_481[0x7];                                      // 0x0481(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class AFortPlayerPawn*                        CallFunc_GetPlayerPawn_ReturnValue;                // 0x0488(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BreakHitResult_bBlockingHit;              // 0x0490(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BreakHitResult_bInitialOverlap;           // 0x0491(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_492[0x2];                                      // 0x0492(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_BreakHitResult_Time;                      // 0x0494(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakHitResult_Distance;                  // 0x0498(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_Location;                  // 0x049C(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_ImpactPoint;               // 0x04A8(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_Normal;                    // 0x04B4(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_ImpactNormal;              // 0x04C0(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4CC[0x4];                                      // 0x04CC(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UPhysicalMaterial*                      CallFunc_BreakHitResult_PhysMat;                   // 0x04D0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 CallFunc_BreakHitResult_HitActor;                  // 0x04D8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UPrimitiveComponent*                    CallFunc_BreakHitResult_HitComponent;              // 0x04E0(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   CallFunc_BreakHitResult_HitBoneName;               // 0x04E8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_BreakHitResult_HitItem;                   // 0x04F0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_BreakHitResult_FaceIndex;                 // 0x04F4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_TraceStart;                // 0x04F8(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_TraceEnd;                  // 0x0504(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_HasTag_ReturnValue;                       // 0x0510(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_511[0x7];                                      // 0x0511(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UFortAsyncAction_CalendarEventWatcher*  CallFunc_WatchCalendarEvent_ReturnValue1;          // 0x0518(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue4;                     // 0x0520(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_521[0x7];                                      // 0x0521(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 Temp_string_Variable2;                             // 0x0528(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	int32                                         Temp_int_Variable;                                 // 0x0538(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x053C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue1;                  // 0x0540(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_544[0x4];                                      // 0x0544(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTimespan                              Temp_struct_Variable4;                             // 0x0548(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	struct FCubeStruct                            CallFunc_Array_Get_Item;                           // 0x0550(0x0040)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FTimespan                              Temp_struct_Variable5;                             // 0x0590(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_598[0x8];                                      // 0x0598(0x0008)(Fixing Size After Last Property [ Dumper-7 ])
	struct FCubeStruct                            CallFunc_Array_Get_Item1;                          // 0x05A0(0x0040)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue2;                  // 0x05E0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_LastIndex_ReturnValue;              // 0x05E4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         Temp_float_Variable2;                              // 0x05E8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_5EC[0x4];                                      // 0x05EC(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FCubeStruct                            CallFunc_Array_Get_Item2;                          // 0x05F0(0x0040)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue3;                  // 0x0630(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_LastIndex_ReturnValue1;             // 0x0634(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_LastIndex_ReturnValue2;             // 0x0638(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Subtract_IntInt_ReturnValue;              // 0x063C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0640(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue5;                     // 0x0644(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_CustomEvent_StartMidway;                    // 0x0645(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_646[0x2];                                      // 0x0646(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Conv_ByteToInt_ReturnValue;               // 0x0648(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_NotEqual_ByteByte_ReturnValue;            // 0x064C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_TraceCubeShape_Hit;                       // 0x064D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_TraceCubeShape_Hit1;                      // 0x064E(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_GetCalendarEventInformation_bIsEventActive; // 0x064F(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FTimespan                              CallFunc_GetCalendarEventInformation_TimeSinceBegin; // 0x0650(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	struct FTimespan                              CallFunc_GetCalendarEventInformation_TimeUntilEnd; // 0x0658(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetCalendarEventInformation_TimeSpanRatio; // 0x0660(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue4;                  // 0x0664(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TDelegate<void()>                             K2Node_CreateDelegate_OutputDelegate6;             // 0x0668(0x0010)(ZeroConstructor, NoDestructor)
	uint8                                         Pad_678[0x8];                                      // 0x0678(0x0008)(Fixing Size After Last Property [ Dumper-7 ])
	struct FCubeStruct                            CallFunc_Array_Get_Item3;                          // 0x0680(0x0040)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_FloatFloat_ReturnValue;        // 0x06C0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         CallFunc_Subtract_ByteByte_ReturnValue;            // 0x06C1(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_6C2[0x6];                                      // 0x06C2(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 K2Node_CustomEvent_EventName8;                     // 0x06C8(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	struct FTimespan                              K2Node_CustomEvent_TimeUntilEnd6;                  // 0x06D8(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	struct FTimespan                              K2Node_CustomEvent_TimeSinceBegin6;                // 0x06E0(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	float                                         K2Node_CustomEvent_TimeSpanRatio6;                 // 0x06E8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsDedicatedServer_ReturnValue;            // 0x06EC(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_6ED[0x3];                                      // 0x06ED(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	TDelegate<void(const class FString& EventName, const struct FTimespan& TimeUntilEnd, const struct FTimespan& TimeSinceBegin, float TimespanRatio)> K2Node_CreateDelegate_OutputDelegate7;             // 0x06F0(0x0010)(ZeroConstructor, NoDestructor)
	bool                                          Temp_bool_Variable;                                // 0x0700(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_701[0x3];                                      // 0x0701(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                K2Node_CustomEvent_Location2;                      // 0x0704(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                K2Node_CustomEvent_Normal;                         // 0x0710(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_71C[0x4];                                      // 0x071C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class AActor*                                 K2Node_CustomEvent_Source;                         // 0x0720(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         K2Node_CustomEvent_Scale;                          // 0x0728(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_72C[0x4];                                      // 0x072C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 K2Node_CustomEvent_EventName9;                     // 0x0730(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	struct FTimespan                              K2Node_CustomEvent_TimeUntilEnd7;                  // 0x0740(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	struct FTimespan                              K2Node_CustomEvent_TimeSinceBegin7;                // 0x0748(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	float                                         K2Node_CustomEvent_TimeSpanRatio7;                 // 0x0750(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_X;                            // 0x0754(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_Y;                            // 0x0758(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_Z;                            // 0x075C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector_NetQuantizeNormal              K2Node_MakeStruct_Vector_NetQuantizeNormal;        // 0x0760(0x000C)(NoDestructor)
	float                                         CallFunc_BreakVector_X1;                           // 0x076C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_Y1;                           // 0x0770(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_Z1;                           // 0x0774(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector_NetQuantize10                  K2Node_MakeStruct_Vector_NetQuantize10;            // 0x0778(0x000C)(NoDestructor)
	uint8                                         Pad_784[0xC];                                      // 0x0784(0x000C)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTransform                             CallFunc_GetTransform_ReturnValue1;                // 0x0790(0x0030)(IsPlainOldData, NoDestructor)
	struct FGameplayCueParameters                 K2Node_MakeStruct_GameplayCueParameters;           // 0x07C0(0x00B8)(ContainsInstancedReference)
	uint8                                         Pad_878[0x8];                                      // 0x0878(0x0008)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTransform                             CallFunc_ComposeTransforms_ReturnValue;            // 0x0880(0x0030)(IsPlainOldData, NoDestructor)
	struct FVector                                CallFunc_BreakTransform_Location;                  // 0x08B0(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               CallFunc_BreakTransform_Rotation;                  // 0x08BC(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FVector                                CallFunc_BreakTransform_Scale;                     // 0x08C8(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_8D4[0xC];                                      // 0x08D4(0x000C)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTransform                             CallFunc_MakeTransform_ReturnValue;                // 0x08E0(0x0030)(IsPlainOldData, NoDestructor)
	int32                                         CallFunc_CalculateNextMove_NextIndex;              // 0x0910(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_CalculateNextMove_SecondsTillMove;        // 0x0914(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Subtract_FloatFloat_ReturnValue;          // 0x0918(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_LessEqual_FloatFloat_ReturnValue;         // 0x091C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_91D[0x3];                                      // 0x091D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTimerHandle                           CallFunc_K2_SetTimerDelegate_ReturnValue;          // 0x0920(0x0008)(NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_HasAuthority_ReturnValue;                 // 0x0928(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Array_Contains_ReturnValue;               // 0x0929(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_92A[0x2];                                      // 0x092A(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	TDelegate<void(const class FString& EventName, const struct FTimespan& TimeUntilEnd, const struct FTimespan& TimeSinceBegin, float TimespanRatio)> K2Node_CreateDelegate_OutputDelegate8;             // 0x092C(0x0010)(ZeroConstructor, NoDestructor)
	uint8                                         Pad_93C[0x4];                                      // 0x093C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UMaterialInstanceDynamic*               CallFunc_CreateDynamicMaterialInstance_ReturnValue; // 0x0940(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_CustomEvent_Active;                         // 0x0948(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_949[0x7];                                      // 0x0949(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class AActor*                                 CallFunc_BeginDeferredActorSpawnFromClass_ReturnValue; // 0x0950(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ABGA_Cube_Area_Effect_C*                CallFunc_FinishSpawningActor_ReturnValue;          // 0x0958(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TDelegate<void()>                             K2Node_CreateDelegate_OutputDelegate9;             // 0x0960(0x0010)(ZeroConstructor, NoDestructor)
	struct FTimerHandle                           CallFunc_K2_SetTimerDelegate_ReturnValue1;         // 0x0970(0x0008)(NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0978(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_CustomEvent_Enabled1;                       // 0x097C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         CallFunc_Conv_IntToByte_ReturnValue;               // 0x097D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_CustomEvent_Is_2_Part_Roll;                 // 0x097E(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_97F[0x1];                                      // 0x097F(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	class USoundBase*                             K2Node_Select_Default;                             // 0x0980(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UAudioComponent*                        CallFunc_SpawnSoundAttached_ReturnValue;           // 0x0988(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UAudioComponent*                        CallFunc_SpawnSoundAttached_ReturnValue1;          // 0x0990(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         K2Node_CustomEvent_Percent_Complete;               // 0x0998(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_99C[0x4];                                      // 0x099C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UAudioComponent*                        CallFunc_SpawnSoundAttached_ReturnValue2;          // 0x09A0(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x09A8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FHitResult                             CallFunc_K2_SetWorldTransform_SweepHitResult;      // 0x09AC(0x0088)(IsPlainOldData, NoDestructor, ContainsInstancedReference)
	int32                                         CallFunc_Add_IntInt_ReturnValue5;                  // 0x0A34(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetFloatValue_ReturnValue;                // 0x0A38(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetFloatValue_ReturnValue1;               // 0x0A3C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UAudioComponent*                        CallFunc_SpawnSoundAttached_ReturnValue3;          // 0x0A40(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Divide_FloatFloat_ReturnValue;            // 0x0A48(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TDelegate<void()>                             K2Node_CreateDelegate_OutputDelegate10;            // 0x0A4C(0x0010)(ZeroConstructor, NoDestructor)
	float                                         CallFunc_Subtract_FloatFloat_ReturnValue1;         // 0x0A5C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Subtract_FloatFloat_ReturnValue2;         // 0x0A60(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_A64[0x4];                                      // 0x0A64(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTimerHandle                           CallFunc_K2_SetTimerDelegate_ReturnValue2;         // 0x0A68(0x0008)(NoDestructor, HasGetValueTypeHash)
	struct FCubeStruct                            CallFunc_Array_Get_Item4;                          // 0x0A70(0x0040)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_K2_GetComponentLocation_ReturnValue1;     // 0x0AB0(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakTransform_Location1;                 // 0x0ABC(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               CallFunc_BreakTransform_Rotation1;                 // 0x0AC8(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FVector                                CallFunc_BreakTransform_Scale1;                    // 0x0AD4(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FHitResult                             CallFunc_K2_SetActorLocation_SweepHitResult;       // 0x0AE0(0x0088)(IsPlainOldData, NoDestructor, ContainsInstancedReference)
	bool                                          CallFunc_K2_SetActorLocation_ReturnValue;          // 0x0B68(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_B69[0x7];                                      // 0x0B69(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UParticleSystemComponent*               CallFunc_SpawnEmitterAtLocation_ReturnValue;       // 0x0B70(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UParticleSystemComponent*               CallFunc_SpawnEmitterAtLocation_ReturnValue1;      // 0x0B78(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         K2Node_CustomEvent_Trace_Distance;                 // 0x0B80(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Multiply_FloatFloat_ReturnValue;          // 0x0B84(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FString                                 K2Node_CustomEvent_EventName10;                    // 0x0B88(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	struct FTimespan                              K2Node_CustomEvent_TimeUntilEnd8;                  // 0x0B98(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	struct FTimespan                              K2Node_CustomEvent_TimeSinceBegin8;                // 0x0BA0(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	float                                         K2Node_CustomEvent_TimeSpanRatio8;                 // 0x0BA8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Multiply_VectorFloat_ReturnValue3;        // 0x0BAC(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Add_VectorVector_ReturnValue1;            // 0x0BB8(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         K2Node_Event_Damage;                               // 0x0BC4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FGameplayTagContainer                  K2Node_Event_DamageTags;                           // 0x0BC8(0x0020)(ConstParm)
	struct FVector                                K2Node_Event_Momentum;                             // 0x0BE8(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FHitResult                             K2Node_Event_HitInfo;                              // 0x0BF4(0x0088)(ConstParm, IsPlainOldData, NoDestructor, ContainsInstancedReference)
	uint8                                         Pad_C7C[0x4];                                      // 0x0C7C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class AFortPawn*                              K2Node_Event_InstigatedBy;                         // 0x0C80(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 K2Node_Event_DamageCauser;                         // 0x0C88(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FGameplayEffectContextHandle           K2Node_Event_EffectContext;                        // 0x0C90(0x0018)()
	bool                                          CallFunc_BreakHitResult_bBlockingHit1;             // 0x0CA8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BreakHitResult_bInitialOverlap1;          // 0x0CA9(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_CAA[0x2];                                      // 0x0CAA(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_BreakHitResult_Time1;                     // 0x0CAC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakHitResult_Distance1;                 // 0x0CB0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_Location1;                 // 0x0CB4(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_ImpactPoint1;              // 0x0CC0(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_Normal1;                   // 0x0CCC(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_ImpactNormal1;             // 0x0CD8(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_CE4[0x4];                                      // 0x0CE4(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UPhysicalMaterial*                      CallFunc_BreakHitResult_PhysMat1;                  // 0x0CE8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 CallFunc_BreakHitResult_HitActor1;                 // 0x0CF0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UPrimitiveComponent*                    CallFunc_BreakHitResult_HitComponent1;             // 0x0CF8(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   CallFunc_BreakHitResult_HitBoneName1;              // 0x0D00(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_BreakHitResult_HitItem1;                  // 0x0D08(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_BreakHitResult_FaceIndex1;                // 0x0D0C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_TraceStart1;               // 0x0D10(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_TraceEnd1;                 // 0x0D1C(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_HasTag_ReturnValue1;                      // 0x0D28(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_D29[0x3];                                      // 0x0D29(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_Divide_FloatFloat_ReturnValue1;           // 0x0D2C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Conv_BoolToFloat_ReturnValue;             // 0x0D30(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_FClamp_ReturnValue;                       // 0x0D34(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_IsClosed_Variable;                       // 0x0D38(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_D39[0x3];                                      // 0x0D39(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_Add_FloatFloat_ReturnValue;               // 0x0D3C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 K2Node_CustomEvent_Actor;                          // 0x0D40(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class APlayerPawn_Athena_C*                   K2Node_DynamicCast_AsPlayer_Pawn_Athena2;          // 0x0D48(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess6;                      // 0x0D50(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_CustomEvent_Enabled;                        // 0x0D51(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_D52[0x6];                                      // 0x0D52(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class UAudioComponent*                        CallFunc_SpawnSoundAttached_ReturnValue4;          // 0x0D58(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TDelegate<void(const class FString& EventName, const struct FTimespan& TimeUntilEnd, const struct FTimespan& TimeSinceBegin, float TimespanRatio)> K2Node_CreateDelegate_OutputDelegate11;            // 0x0D60(0x0010)(ZeroConstructor, NoDestructor)
	class FName                                   K2Node_CustomEvent_EventName1;                     // 0x0D70(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         K2Node_CustomEvent_EmitterTime1;                   // 0x0D78(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                K2Node_CustomEvent_Location1;                      // 0x0D7C(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                K2Node_CustomEvent_Velocity1;                      // 0x0D88(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_K2_GetComponentLocation_ReturnValue2;     // 0x0D94(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_NameName_ReturnValue;          // 0x0DA0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_DA1[0x3];                                      // 0x0DA1(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	TDelegate<void(class FName EventName, float EmitterTime, const struct FVector& Location, const struct FVector& Velocity)> K2Node_CreateDelegate_OutputDelegate12;            // 0x0DA4(0x0010)(ZeroConstructor, NoDestructor)
	uint8                                         Pad_DB4[0x4];                                      // 0x0DB4(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UAudioComponent*                        CallFunc_SpawnSoundAtLocation_ReturnValue;         // 0x0DB8(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UAudioComponent*                        CallFunc_SpawnSoundAtLocation_ReturnValue1;        // 0x0DC0(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TDelegate<void()>                             K2Node_CreateDelegate_OutputDelegate13;            // 0x0DC8(0x0010)(ZeroConstructor, NoDestructor)
	class AGameModeBase*                          CallFunc_GetGameMode_ReturnValue;                  // 0x0DD8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AFortGameModeZone*                      K2Node_DynamicCast_AsFort_Game_Mode_Zone;          // 0x0DE0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess7;                      // 0x0DE8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_HasAuthority_ReturnValue1;                // 0x0DE9(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue6;                     // 0x0DEA(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_DEB[0x1];                                      // 0x0DEB(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_Divide_FloatFloat_ReturnValue2;           // 0x0DEC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Multiply_FloatFloat_ReturnValue1;         // 0x0DF0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_DF4[0xC];                                      // 0x0DF4(0x000C)(Fixing Size After Last Property [ Dumper-7 ])
	struct FCubeStruct                            CallFunc_Array_Get_Item5;                          // 0x0E00(0x0040)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FCubeStruct                            CallFunc_Array_Get_Item6;                          // 0x0E40(0x0040)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FTransform                             CallFunc_MakeRelativeTransform_ReturnValue;        // 0x0E80(0x0030)(IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Contains_ReturnValue;                     // 0x0EB0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_EB1[0x3];                                      // 0x0EB1(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_BreakTransform_Location2;                 // 0x0EB4(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               CallFunc_BreakTransform_Rotation2;                 // 0x0EC0(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FVector                                CallFunc_BreakTransform_Scale2;                    // 0x0ECC(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakRotator_Roll;                        // 0x0ED8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakRotator_Pitch;                       // 0x0EDC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakRotator_Yaw;                         // 0x0EE0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Abs_ReturnValue;                          // 0x0EE4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_SignOfFloat_ReturnValue;                  // 0x0EE8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Abs_ReturnValue1;                         // 0x0EEC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Multiply_FloatFloat_ReturnValue2;         // 0x0EF0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_SignOfFloat_ReturnValue1;                 // 0x0EF4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Multiply_FloatFloat_ReturnValue3;         // 0x0EF8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Multiply_FloatFloat_ReturnValue4;         // 0x0EFC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               CallFunc_MakeRotator_ReturnValue;                  // 0x0F00(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor)
	float                                         CallFunc_Multiply_FloatFloat_ReturnValue5;         // 0x0F0C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FTransform                             CallFunc_MakeTransform_ReturnValue1;               // 0x0F10(0x0030)(IsPlainOldData, NoDestructor)
	struct FRotator                               CallFunc_MakeRotator_ReturnValue1;                 // 0x0F40(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_F4C[0x4];                                      // 0x0F4C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTransform                             CallFunc_ComposeTransforms_ReturnValue1;           // 0x0F50(0x0030)(IsPlainOldData, NoDestructor)
	struct FTransform                             CallFunc_MakeTransform_ReturnValue2;               // 0x0F80(0x0030)(IsPlainOldData, NoDestructor)
	struct FTransform                             CallFunc_ComposeTransforms_ReturnValue2;           // 0x0FB0(0x0030)(IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Greater_FloatFloat_ReturnValue;           // 0x0FE0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Greater_FloatFloat_ReturnValue1;          // 0x0FE1(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_FE2[0x2];                                      // 0x0FE2(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_Abs_ReturnValue2;                         // 0x0FE4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_SignOfFloat_ReturnValue2;                 // 0x0FE8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Multiply_FloatFloat_ReturnValue6;         // 0x0FEC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_FloatFloat_ReturnValue2;          // 0x0FF0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_FF1[0x3];                                      // 0x0FF1(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_Multiply_FloatFloat_ReturnValue7;         // 0x0FF4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x0FF8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_FF9[0x3];                                      // 0x0FF9(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FRotator                               CallFunc_MakeRotator_ReturnValue2;                 // 0x0FFC(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1008[0x8];                                     // 0x1008(0x0008)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTransform                             CallFunc_MakeTransform_ReturnValue3;               // 0x1010(0x0030)(IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Greater_FloatFloat_ReturnValue3;          // 0x1040(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1041[0xF];                                     // 0x1041(0x000F)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTransform                             CallFunc_ComposeTransforms_ReturnValue3;           // 0x1050(0x0030)(IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanAND_ReturnValue1;                  // 0x1080(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Greater_FloatFloat_ReturnValue4;          // 0x1081(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Greater_FloatFloat_ReturnValue5;          // 0x1082(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanAND_ReturnValue2;                  // 0x1083(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	int32                                         CallFunc_CalculateNextMove_NextIndex1;             // 0x1084(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_CalculateNextMove_SecondsTillMove1;       // 0x1088(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_FMax_ReturnValue;                         // 0x108C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_FloatFloat_ReturnValue1;             // 0x1090(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1091[0xF];                                     // 0x1091(0x000F)(Fixing Size After Last Property [ Dumper-7 ])
	struct FCubeStruct                            K2Node_MakeStruct_CubeStruct;                      // 0x10A0(0x0040)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_LastIndex_ReturnValue3;             // 0x10E0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_LessEqual_IntInt_ReturnValue;             // 0x10E4(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          Temp_bool_Variable1;                               // 0x10E5(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Array_Contains_ReturnValue1;              // 0x10E6(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_10E7[0x1];                                     // 0x10E7(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	class FName                                   K2Node_CustomEvent_EventName;                      // 0x10E8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         K2Node_CustomEvent_EmitterTime;                    // 0x10F0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                K2Node_CustomEvent_Location;                       // 0x10F4(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                K2Node_CustomEvent_Velocity;                       // 0x1100(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_NameName_ReturnValue1;         // 0x110C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_110D[0x3];                                     // 0x110D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Length_ReturnValue1;                // 0x1110(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_LastIndex_ReturnValue4;             // 0x1114(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Conv_IntToFloat_ReturnValue;              // 0x1118(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Divide_FloatFloat_ReturnValue3;           // 0x111C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue2;                // 0x1120(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TDelegate<void()>                             K2Node_CreateDelegate_OutputDelegate14;            // 0x1124(0x0010)(ZeroConstructor, NoDestructor)
	bool                                          CallFunc_Greater_IntInt_ReturnValue;               // 0x1134(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1135[0x3];                                     // 0x1135(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTimerHandle                           CallFunc_K2_SetTimerDelegate_ReturnValue3;         // 0x1138(0x0008)(NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsLakeSplash_ReturnValue;                 // 0x1140(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsLakeSplash_ReturnValue1;                // 0x1141(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          Temp_bool_Has_Been_Initd_Variable;                 // 0x1142(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1143[0x1];                                     // 0x1143(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	struct FHitResult                             CallFunc_K2_SetWorldTransform_SweepHitResult1;     // 0x1144(0x0088)(IsPlainOldData, NoDestructor, ContainsInstancedReference)
	int32                                         K2Node_CustomEvent_NewParam1;                      // 0x11CC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_K2_GetComponentLocation_ReturnValue3;     // 0x11D0(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_11DC[0x4];                                     // 0x11DC(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class AFortTimeOfDayManager*                  CallFunc_GetTimeOfDayManagerFromContext_ReturnValue; // 0x11E0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_IntInt_ReturnValue;            // 0x11E8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EqualEqual_IntInt_ReturnValue1;           // 0x11E9(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanOR_ReturnValue;                    // 0x11EA(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          Temp_bool_IsClosed_Variable1;                      // 0x11EB(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          Temp_bool_Variable2;                               // 0x11EC(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsLakeSplash_ReturnValue2;                // 0x11ED(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_11EE[0x2];                                     // 0x11EE(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	TDelegate<void()>                             K2Node_CreateDelegate_OutputDelegate15;            // 0x11F0(0x0010)(ZeroConstructor, NoDestructor)
	struct FTimerHandle                           CallFunc_K2_SetTimerDelegate_ReturnValue4;         // 0x1200(0x0008)(NoDestructor, HasGetValueTypeHash)
	class UAudioComponent*                        CallFunc_SpawnSoundAttached_ReturnValue5;          // 0x1208(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           CallFunc_Conv_VectorToLinearColor_ReturnValue;     // 0x1210(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_IntInt_ReturnValue2;           // 0x1220(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EqualEqual_IntInt_ReturnValue3;           // 0x1221(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanOR_ReturnValue1;                   // 0x1222(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1223[0x5];                                     // 0x1223(0x0005)(Fixing Size After Last Property [ Dumper-7 ])
	class UAudioComponent*                        CallFunc_SpawnSoundAttached_ReturnValue6;          // 0x1228(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_HasAuthority_ReturnValue2;                // 0x1230(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_K2_IsTimerActiveHandle_ReturnValue;       // 0x1231(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1232[0xE];                                     // 0x1232(0x000E)(Fixing Size After Last Property [ Dumper-7 ])
	struct FCubeStruct                            CallFunc_Array_Get_Item7;                          // 0x1240(0x0040)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TDelegate<void()>                             K2Node_CreateDelegate_OutputDelegate16;            // 0x1280(0x0010)(ZeroConstructor, NoDestructor)
	struct FTimerHandle                           CallFunc_K2_SetTimerDelegate_ReturnValue5;         // 0x1290(0x0008)(NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Add_FloatFloat_ReturnValue1;              // 0x1298(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Divide_FloatFloat_ReturnValue4;           // 0x129C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Multiply_FloatFloat_ReturnValue8;         // 0x12A0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_FClamp_ReturnValue1;                      // 0x12A4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Subtract_FloatFloat_ReturnValue3;         // 0x12A8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_FClamp_ReturnValue2;                      // 0x12AC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsDedicatedServer_ReturnValue1;           // 0x12B0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_12B1[0xF];                                     // 0x12B1(0x000F)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTransform                             CallFunc_TLerp_ReturnValue;                        // 0x12C0(0x0030)(IsPlainOldData, NoDestructor)
	struct FTransform                             CallFunc_TLerp_ReturnValue1;                       // 0x12F0(0x0030)(IsPlainOldData, NoDestructor)
	int32                                         CallFunc_Add_IntInt_ReturnValue6;                  // 0x1320(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1324[0xC];                                     // 0x1324(0x000C)(Fixing Size After Last Property [ Dumper-7 ])
	struct FCubeStruct                            CallFunc_Array_Get_Item8;                          // 0x1330(0x0040)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         K2Node_Select1_Default;                            // 0x1370(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1371[0x7];                                     // 0x1371(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CallFunc_Conv_ByteToString_ReturnValue;            // 0x1378(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakTransform_Location3;                 // 0x1388(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               CallFunc_BreakTransform_Rotation3;                 // 0x1394(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FVector                                CallFunc_BreakTransform_Scale3;                    // 0x13A0(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   CallFunc_Conv_StringToName_ReturnValue;            // 0x13AC(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               CallFunc_GetSocketRotation_ReturnValue;            // 0x13B4(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FVector                                CallFunc_GetForwardVector_ReturnValue;             // 0x13C0(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_GetSocketLocation_ReturnValue;            // 0x13CC(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Multiply_VectorFloat_ReturnValue4;        // 0x13D8(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakTransform_Location4;                 // 0x13E4(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               CallFunc_BreakTransform_Rotation4;                 // 0x13F0(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FVector                                CallFunc_BreakTransform_Scale4;                    // 0x13FC(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakTransform_Location5;                 // 0x1408(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               CallFunc_BreakTransform_Rotation5;                 // 0x1414(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FVector                                CallFunc_BreakTransform_Scale5;                    // 0x1420(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                K2Node_Select2_Default;                            // 0x142C(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Variable1;                                // 0x1438(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Subtract_VectorVector_ReturnValue1;       // 0x143C(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               CallFunc_MakeRotFromZX_ReturnValue;                // 0x1448(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1454[0x4];                                     // 0x1454(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UParticleSystem*                        Temp_object_Variable;                              // 0x1458(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FTransform                             CallFunc_TLerp_ReturnValue2;                       // 0x1460(0x0030)(IsPlainOldData, NoDestructor)
	bool                                          Temp_bool_Has_Been_Initd_Variable1;                // 0x1490(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1491[0x3];                                     // 0x1491(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         K2Node_CustomEvent_NewParam;                       // 0x1494(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_IntInt_ReturnValue4;           // 0x1498(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EqualEqual_IntInt_ReturnValue5;           // 0x1499(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          Temp_bool_Variable3;                               // 0x149A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_149B[0x1];                                     // 0x149B(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_LastIndex_ReturnValue5;             // 0x149C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Subtract_IntInt_ReturnValue1;             // 0x14A0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_14A4[0x4];                                     // 0x14A4(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UParticleSystem*                        K2Node_Select3_Default;                            // 0x14A8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_IntInt_ReturnValue6;           // 0x14B0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_14B1[0x7];                                     // 0x14B1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UParticleSystemComponent*               CallFunc_SpawnEmitterAtLocation_ReturnValue2;      // 0x14B8(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_IntInt_ReturnValue7;           // 0x14C0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanOR_ReturnValue2;                   // 0x14C1(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EqualEqual_IntInt_ReturnValue8;           // 0x14C2(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_14C3[0x1];                                     // 0x14C3(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_K2_GetTimerRemainingTimeHandle_ReturnValue; // 0x14C4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_FloatFloat_ReturnValue6;          // 0x14C8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EqualEqual_IntInt_ReturnValue9;           // 0x14C9(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          Temp_bool_IsClosed_Variable2;                      // 0x14CA(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_14CB[0x1];                                     // 0x14CB(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Array_Index_Variable1;                    // 0x14CC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_DoFindDownFace_FaceIndex;                 // 0x14D0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         CallFunc_Conv_IntToByte_ReturnValue1;              // 0x14D4(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_14D5[0x3];                                     // 0x14D5(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	TDelegate<void()>                             K2Node_CreateDelegate_OutputDelegate17;            // 0x14D8(0x0010)(ZeroConstructor, NoDestructor)
	struct FTimerHandle                           CallFunc_K2_SetTimerDelegate_ReturnValue6;         // 0x14E8(0x0008)(NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           CallFunc_Conv_VectorToLinearColor_ReturnValue1;    // 0x14F0(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FTransform                             CallFunc_TLerp_ReturnValue3;                       // 0x1500(0x0030)(IsPlainOldData, NoDestructor)
	class FString                                 CallFunc_Right_ReturnValue;                        // 0x1530(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	int32                                         CallFunc_Conv_StringToInt_ReturnValue;             // 0x1540(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Contains_ReturnValue1;                    // 0x1544(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1545[0x3];                                     // 0x1545(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CallFunc_Right_ReturnValue1;                       // 0x1548(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	TDelegate<void(class FName EventName, float EmitterTime, const struct FVector& Location, const struct FVector& Velocity)> K2Node_CreateDelegate_OutputDelegate18;            // 0x1558(0x0010)(ZeroConstructor, NoDestructor)
	int32                                         CallFunc_Conv_StringToInt_ReturnValue1;            // 0x1568(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Subtract_IntInt_ReturnValue2;             // 0x156C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Variable2;                                // 0x1570(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Get_Item9;                          // 0x1574(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TDelegate<void()>                             K2Node_CreateDelegate_OutputDelegate19;            // 0x1578(0x0010)(ZeroConstructor, NoDestructor)
	struct FTimerHandle                           CallFunc_K2_SetTimerDelegate_ReturnValue7;         // 0x1588(0x0008)(NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue3;                // 0x1590(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable4;                               // 0x1594(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1595[0x3];                                     // 0x1595(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	TDelegate<void()>                             K2Node_CreateDelegate_OutputDelegate20;            // 0x1598(0x0010)(ZeroConstructor, NoDestructor)
	int32                                         K2Node_Select4_Default;                            // 0x15A8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue7;                  // 0x15AC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Divide_FloatFloat_ReturnValue5;           // 0x15B0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Multiply_FloatFloat_ReturnValue9;         // 0x15B4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Subtract_FloatFloat_ReturnValue4;         // 0x15B8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Subtract_FloatFloat_ReturnValue5;         // 0x15BC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FTimerHandle                           CallFunc_K2_SetTimerDelegate_ReturnValue8;         // 0x15C0(0x0008)(NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_NotEqual_FloatFloat_ReturnValue;          // 0x15C8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_15C9[0x7];                                     // 0x15C9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTransform                             CallFunc_GetTransform_ReturnValue2;                // 0x15D0(0x0030)(IsPlainOldData, NoDestructor)
	int32                                         CallFunc_Subtract_IntInt_ReturnValue3;             // 0x1600(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1604[0xC];                                     // 0x1604(0x000C)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTransform                             CallFunc_ComposeTransforms_ReturnValue4;           // 0x1610(0x0030)(IsPlainOldData, NoDestructor)
	struct FCubeStruct                            CallFunc_Array_Get_Item10;                         // 0x1640(0x0040)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue8;                  // 0x1680(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1684[0xC];                                     // 0x1684(0x000C)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTransform                             CallFunc_GetTransform_ReturnValue3;                // 0x1690(0x0030)(IsPlainOldData, NoDestructor)
	struct FCubeStruct                            CallFunc_Array_Get_Item11;                         // 0x16C0(0x0040)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FTransform                             CallFunc_ComposeTransforms_ReturnValue5;           // 0x1700(0x0030)(IsPlainOldData, NoDestructor)
	int32                                         CallFunc_Array_LastIndex_ReturnValue6;             // 0x1730(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Subtract_IntInt_ReturnValue4;             // 0x1734(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_IntInt_ReturnValue10;          // 0x1738(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1739[0x3];                                     // 0x1739(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_GetValueAtLevel_ReturnValue;              // 0x173C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_FloatFloat_ReturnValue7;          // 0x1740(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1741[0x3];                                     // 0x1741(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Loop_Counter_Variable1;                   // 0x1744(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Add_FloatFloat_ReturnValue2;              // 0x1748(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x174C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_174D[0x3];                                     // 0x174D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue9;                  // 0x1750(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1754[0x4];                                     // 0x1754(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class AActor*>                         Temp_object_Variable1;                             // 0x1758(0x0010)(ConstParm, ZeroConstructor, ReferenceParm)
	struct FHitResult                             CallFunc_LineTraceSingle_OutHit;                   // 0x1768(0x0088)(IsPlainOldData, NoDestructor, ContainsInstancedReference)
	bool                                          CallFunc_LineTraceSingle_ReturnValue;              // 0x17F0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EqualEqual_ObjectObject_ReturnValue;      // 0x17F1(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_HasAuthority_ReturnValue3;                // 0x17F2(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          Temp_bool_Has_Been_Initd_Variable2;                // 0x17F3(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_17F4[0x4];                                     // 0x17F4(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class ABGA_Cube_Area_Effect_C*                CallFunc_Array_Get_Item12;                         // 0x17F8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue7;                     // 0x1800(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1801[0xF];                                     // 0x1801(0x000F)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTransform                             CallFunc_Map_Find_Value;                           // 0x1810(0x0030)(IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Map_Find_ReturnValue;                     // 0x1840(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Map_Contains_ReturnValue;                 // 0x1841(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1842[0xE];                                     // 0x1842(0x000E)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTransform                             CallFunc_GetTransform_ReturnValue4;                // 0x1850(0x0030)(IsPlainOldData, NoDestructor)
	int32                                         CallFunc_Array_Get_Item13;                         // 0x1880(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue4;                // 0x1884(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1888[0x8];                                     // 0x1888(0x0008)(Fixing Size After Last Property [ Dumper-7 ])
	struct FCubeStruct                            CallFunc_Array_Get_Item14;                         // 0x1890(0x0040)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue1;                 // 0x18D0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_18D1[0xF];                                     // 0x18D1(0x000F)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTransform                             CallFunc_ComposeTransforms_ReturnValue6;           // 0x18E0(0x0030)(IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Greater_IntInt_ReturnValue1;              // 0x1910(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1911[0x3];                                     // 0x1911(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_BreakTransform_Location6;                 // 0x1914(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               CallFunc_BreakTransform_Rotation6;                 // 0x1920(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FVector                                CallFunc_BreakTransform_Scale6;                    // 0x192C(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1938[0x8];                                     // 0x1938(0x0008)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTransform                             CallFunc_MakeTransform_ReturnValue4;               // 0x1940(0x0030)(IsPlainOldData, NoDestructor)
	class AActor*                                 CallFunc_BeginDeferredActorSpawnFromClass_ReturnValue1; // 0x1970(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ABGA_Cube_Area_Effect_C*                CallFunc_FinishSpawningActor_ReturnValue1;         // 0x1978(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue;          // 0x1980(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1981[0xF];                                     // 0x1981(0x000F)(Fixing Size After Last Property [ Dumper-7 ])
	struct FCubeStruct                            CallFunc_Array_Get_Item15;                         // 0x1990(0x0040)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FHitResult                             CallFunc_K2_SetWorldTransform_SweepHitResult2;     // 0x19D0(0x0088)(IsPlainOldData, NoDestructor, ContainsInstancedReference)
	int32                                         Temp_int_Array_Index_Variable2;                    // 0x1A58(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1A5C[0x4];                                     // 0x1A5C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CallFunc_Array_Get_Item16;                         // 0x1A60(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Conv_ByteToString_ReturnValue1;           // 0x1A70(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class UFortAsyncAction_CalendarEventWatcher*  CallFunc_WatchCalendarEvent_ReturnValue2;          // 0x1A80(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   CallFunc_Conv_StringToName_ReturnValue1;           // 0x1A88(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FTransform                             CallFunc_GetSocketTransform_ReturnValue;           // 0x1A90(0x0030)(IsPlainOldData, NoDestructor)
	struct FTransform                             CallFunc_MakeRelativeTransform_ReturnValue1;       // 0x1AC0(0x0030)(IsPlainOldData, NoDestructor)
	struct FVector                                CallFunc_BreakTransform_Location7;                 // 0x1AF0(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               CallFunc_BreakTransform_Rotation7;                 // 0x1AFC(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FVector                                CallFunc_BreakTransform_Scale7;                    // 0x1B08(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_X2;                           // 0x1B14(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_Y2;                           // 0x1B18(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_Z2;                           // 0x1B1C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue8;                     // 0x1B20(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Less_FloatFloat_ReturnValue2;             // 0x1B21(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_HasAuthority_ReturnValue4;                // 0x1B22(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1B23[0x1];                                     // 0x1B23(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Loop_Counter_Variable2;                   // 0x1B24(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue2;                 // 0x1B28(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1B29[0x3];                                     // 0x1B29(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue10;                 // 0x1B2C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsDedicatedServer_ReturnValue2;           // 0x1B30(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1B31[0x3];                                     // 0x1B31(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	TDelegate<void()>                             K2Node_CreateDelegate_OutputDelegate21;            // 0x1B34(0x0010)(ZeroConstructor, NoDestructor)
	TDelegate<void()>                             K2Node_CreateDelegate_OutputDelegate22;            // 0x1B44(0x0010)(ZeroConstructor, NoDestructor)
	uint8                                         Pad_1B54[0x4];                                     // 0x1B54(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTimerHandle                           CallFunc_K2_SetTimerDelegate_ReturnValue9;         // 0x1B58(0x0008)(NoDestructor, HasGetValueTypeHash)
	struct FCubeStruct                            CallFunc_Array_Get_Item17;                         // 0x1B60(0x0040)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FCubeStruct                            CallFunc_Array_Get_Item18;                         // 0x1BA0(0x0040)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_HasAuthority_ReturnValue5;                // 0x1BE0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue9;                     // 0x1BE1(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1BE2[0x6];                                     // 0x1BE2(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class ACube_Dest_Scripting_C*>         CallFunc_GetAllActorsOfClass_OutActors;            // 0x1BE8(0x0010)(ZeroConstructor, ReferenceParm)
	class ACube_Dest_Scripting_C*                 CallFunc_Array_Get_Item19;                         // 0x1BF8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsPlaying_ReturnValue;                    // 0x1C00(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsPlaying_ReturnValue1;                   // 0x1C01(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(CUBE_C_ExecuteUbergraph_CUBE) == 0x000010, "Wrong alignment on CUBE_C_ExecuteUbergraph_CUBE");
static_assert(sizeof(CUBE_C_ExecuteUbergraph_CUBE) == 0x001C10, "Wrong size on CUBE_C_ExecuteUbergraph_CUBE");
static_assert(offsetof(CUBE_C_ExecuteUbergraph_CUBE, EntryPoint) == 0x000000, "Member 'CUBE_C_ExecuteUbergraph_CUBE::EntryPoint' has a wrong offset!");
static_assert(offsetof(CUBE_C_ExecuteUbergraph_CUBE, K2Node_CustomEvent_EventName7) == 0x000008, "Member 'CUBE_C_ExecuteUbergraph_CUBE::K2Node_CustomEvent_EventName7' has a wrong offset!");
static_assert(offsetof(CUBE_C_ExecuteUbergraph_CUBE, K2Node_CustomEvent_TimeUntilEnd5) == 0x000018, "Member 'CUBE_C_ExecuteUbergraph_CUBE::K2Node_CustomEvent_TimeUntilEnd5' has a wrong offset!");
static_assert(offsetof(CUBE_C_ExecuteUbergraph_CUBE, K2Node_CustomEvent_TimeSinceBegin5) == 0x000020, "Member 'CUBE_C_ExecuteUbergraph_CUBE::K2Node_CustomEvent_TimeSinceBegin5' has a wrong offset!");
static_assert(offsetof(CUBE_C_ExecuteUbergraph_CUBE, K2Node_CustomEvent_TimeSpanRatio5) == 0x000028, "Member 'CUBE_C_ExecuteUbergraph_CUBE::K2Node_CustomEvent_TimeSpanRatio5' has a wrong offset!");
static_assert(offsetof(CUBE_C_ExecuteUbergraph_CUBE, K2Node_CreateDelegate_OutputDelegate) == 0x00002C, "Member 'CUBE_C_ExecuteUbergraph_CUBE::K2Node_CreateDelegate_OutputDelegate' has a wrong offset!");
static_assert(offsetof(CUBE_C_ExecuteUbergraph_CUBE, K2Node_CustomEvent_EventName6) == 0x000040, "Member 'CUBE_C_ExecuteUbergraph_CUBE::K2Node_CustomEvent_EventName6' has a wrong offset!");
static_assert(offsetof(CUBE_C_ExecuteUbergraph_CUBE, K2Node_CustomEvent_TimeUntilEnd4) == 0x000050, "Member 'CUBE_C_ExecuteUbergraph_CUBE::K2Node_CustomEvent_TimeUntilEnd4' has a wrong offset!");
static_assert(offsetof(CUBE_C_ExecuteUbergraph_CUBE, K2Node_CustomEvent_TimeSinceBegin4) == 0x000058, "Member 'CUBE_C_ExecuteUbergraph_CUBE::K2Node_CustomEvent_TimeSinceBegin4' has a wrong offset!");
static_assert(offsetof(CUBE_C_ExecuteUbergraph_CUBE, K2Node_CustomEvent_TimeSpanRatio4) == 0x000060, "Member 'CUBE_C_ExecuteUbergraph_CUBE::K2Node_CustomEvent_TimeSpanRatio4' has a wrong offset!");
static_assert(offsetof(CUBE_C_ExecuteUbergraph_CUBE, K2Node_CreateDelegate_OutputDelegate1) == 0x000064, "Member 'CUBE_C_ExecuteUbergraph_CUBE::K2Node_CreateDelegate_OutputDelegate1' has a wrong offset!");
static_assert(offsetof(CUBE_C_ExecuteUbergraph_CUBE, K2Node_CustomEvent_EventName5) == 0x000078, "Member 'CUBE_C_ExecuteUbergraph_CUBE::K2Node_CustomEvent_EventName5' has a wrong offset!");
static_assert(offsetof(CUBE_C_ExecuteUbergraph_CUBE, K2Node_CustomEvent_TimeUntilEnd3) == 0x000088, "Member 'CUBE_C_ExecuteUbergraph_CUBE::K2Node_CustomEvent_TimeUntilEnd3' has a wrong offset!");
static_assert(offsetof(CUBE_C_ExecuteUbergraph_CUBE, K2Node_CustomEvent_TimeSinceBegin3) == 0x000090, "Member 'CUBE_C_ExecuteUbergraph_CUBE::K2Node_CustomEvent_TimeSinceBegin3' has a wrong offset!");
static_assert(offsetof(CUBE_C_ExecuteUbergraph_CUBE, K2Node_CustomEvent_TimeSpanRatio3) == 0x000098, "Member 'CUBE_C_ExecuteUbergraph_CUBE::K2Node_CustomEvent_TimeSpanRatio3' has a wrong offset!");
static_assert(offsetof(CUBE_C_ExecuteUbergraph_CUBE, K2Node_CreateDelegate_OutputDelegate2) == 0x00009C, "Member 'CUBE_C_ExecuteUbergraph_CUBE::K2Node_CreateDelegate_OutputDelegate2' has a wrong offset!");
static_assert(offsetof(CUBE_C_ExecuteUbergraph_CUBE, Temp_float_Variable) == 0x0000AC, "Member 'CUBE_C_ExecuteUbergraph_CUBE::Temp_float_Variable' has a wrong offset!");
static_assert(offsetof(CUBE_C_ExecuteUbergraph_CUBE, Temp_struct_Variable) == 0x0000B0, "Member 'CUBE_C_ExecuteUbergraph_CUBE::Temp_struct_Variable' has a wrong offset!");
static_assert(offsetof(CUBE_C_ExecuteUbergraph_CUBE, Temp_struct_Variable1) == 0x0000B8, "Member 'CUBE_C_ExecuteUbergraph_CUBE::Temp_struct_Variable1' has a wrong offset!");
static_assert(offsetof(CUBE_C_ExecuteUbergraph_CUBE, Temp_string_Variable) == 0x0000C0, "Member 'CUBE_C_ExecuteUbergraph_CUBE::Temp_string_Variable' has a wrong offset!");
static_assert(offsetof(CUBE_C_ExecuteUbergraph_CUBE, CallFunc_WatchCalendarEvent_ReturnValue) == 0x0000D0, "Member 'CUBE_C_ExecuteUbergraph_CUBE::CallFunc_WatchCalendarEvent_ReturnValue' has a wrong offset!");
static_assert(offsetof(CUBE_C_ExecuteUbergraph_CUBE, K2Node_CreateDelegate_OutputDelegate3) == 0x0000D8, "Member 'CUBE_C_ExecuteUbergraph_CUBE::K2Node_CreateDelegate_OutputDelegate3' has a wrong offset!");
static_assert(offsetof(CUBE_C_ExecuteUbergraph_CUBE, CallFunc_IsValid_ReturnValue) == 0x0000E8, "Member 'CUBE_C_ExecuteUbergraph_CUBE::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(CUBE_C_ExecuteUbergraph_CUBE, K2Node_CustomEvent_EventName4) == 0x0000F0, "Member 'CUBE_C_ExecuteUbergraph_CUBE::K2Node_CustomEvent_EventName4' has a wrong offset!");
static_assert(offsetof(CUBE_C_ExecuteUbergraph_CUBE, K2Node_CustomEvent_TimeUntilEnd2) == 0x000100, "Member 'CUBE_C_ExecuteUbergraph_CUBE::K2Node_CustomEvent_TimeUntilEnd2' has a wrong offset!");
static_assert(offsetof(CUBE_C_ExecuteUbergraph_CUBE, K2Node_CustomEvent_TimeSinceBegin2) == 0x000108, "Member 'CUBE_C_ExecuteUbergraph_CUBE::K2Node_CustomEvent_TimeSinceBegin2' has a wrong offset!");
static_assert(offsetof(CUBE_C_ExecuteUbergraph_CUBE, K2Node_CustomEvent_TimeSpanRatio2) == 0x000110, "Member 'CUBE_C_ExecuteUbergraph_CUBE::K2Node_CustomEvent_TimeSpanRatio2' has a wrong offset!");
static_assert(offsetof(CUBE_C_ExecuteUbergraph_CUBE, K2Node_CustomEvent_EventName3) == 0x000118, "Member 'CUBE_C_ExecuteUbergraph_CUBE::K2Node_CustomEvent_EventName3' has a wrong offset!");
static_assert(offsetof(CUBE_C_ExecuteUbergraph_CUBE, K2Node_CustomEvent_TimeUntilEnd1) == 0x000128, "Member 'CUBE_C_ExecuteUbergraph_CUBE::K2Node_CustomEvent_TimeUntilEnd1' has a wrong offset!");
static_assert(offsetof(CUBE_C_ExecuteUbergraph_CUBE, K2Node_CustomEvent_TimeSinceBegin1) == 0x000130, "Member 'CUBE_C_ExecuteUbergraph_CUBE::K2Node_CustomEvent_TimeSinceBegin1' has a wrong offset!");
static_assert(offsetof(CUBE_C_ExecuteUbergraph_CUBE, K2Node_CustomEvent_TimeSpanRatio1) == 0x000138, "Member 'CUBE_C_ExecuteUbergraph_CUBE::K2Node_CustomEvent_TimeSpanRatio1' has a wrong offset!");
static_assert(offsetof(CUBE_C_ExecuteUbergraph_CUBE, K2Node_CreateDelegate_OutputDelegate4) == 0x00013C, "Member 'CUBE_C_ExecuteUbergraph_CUBE::K2Node_CreateDelegate_OutputDelegate4' has a wrong offset!");
static_assert(offsetof(CUBE_C_ExecuteUbergraph_CUBE, K2Node_CustomEvent_EventName2) == 0x000150, "Member 'CUBE_C_ExecuteUbergraph_CUBE::K2Node_CustomEvent_EventName2' has a wrong offset!");
static_assert(offsetof(CUBE_C_ExecuteUbergraph_CUBE, K2Node_CustomEvent_TimeUntilEnd) == 0x000160, "Member 'CUBE_C_ExecuteUbergraph_CUBE::K2Node_CustomEvent_TimeUntilEnd' has a wrong offset!");
static_assert(offsetof(CUBE_C_ExecuteUbergraph_CUBE, K2Node_CustomEvent_TimeSinceBegin) == 0x000168, "Member 'CUBE_C_ExecuteUbergraph_CUBE::K2Node_CustomEvent_TimeSinceBegin' has a wrong offset!");
static_assert(offsetof(CUBE_C_ExecuteUbergraph_CUBE, K2Node_CustomEvent_TimeSpanRatio) == 0x000170, "Member 'CUBE_C_ExecuteUbergraph_CUBE::K2Node_CustomEvent_TimeSpanRatio' has a wrong offset!");
static_assert(offsetof(CUBE_C_ExecuteUbergraph_CUBE, K2Node_CreateDelegate_OutputDelegate5) == 0x000174, "Member 'CUBE_C_ExecuteUbergraph_CUBE::K2Node_CreateDelegate_OutputDelegate5' has a wrong offset!");
static_assert(offsetof(CUBE_C_ExecuteUbergraph_CUBE, Temp_float_Variable1) == 0x000184, "Member 'CUBE_C_ExecuteUbergraph_CUBE::Temp_float_Variable1' has a wrong offset!");
static_assert(offsetof(CUBE_C_ExecuteUbergraph_CUBE, Temp_struct_Variable2) == 0x000188, "Member 'CUBE_C_ExecuteUbergraph_CUBE::Temp_struct_Variable2' has a wrong offset!");
static_assert(offsetof(CUBE_C_ExecuteUbergraph_CUBE, Temp_struct_Variable3) == 0x000190, "Member 'CUBE_C_ExecuteUbergraph_CUBE::Temp_struct_Variable3' has a wrong offset!");
static_assert(offsetof(CUBE_C_ExecuteUbergraph_CUBE, Temp_string_Variable1) == 0x000198, "Member 'CUBE_C_ExecuteUbergraph_CUBE::Temp_string_Variable1' has a wrong offset!");
static_assert(offsetof(CUBE_C_ExecuteUbergraph_CUBE, CallFunc_GetTotalSeconds_ReturnValue) == 0x0001A8, "Member 'CUBE_C_ExecuteUbergraph_CUBE::CallFunc_GetTotalSeconds_ReturnValue' has a wrong offset!");
static_assert(offsetof(CUBE_C_ExecuteUbergraph_CUBE, CallFunc_GetTotalHours_ReturnValue) == 0x0001AC, "Member 'CUBE_C_ExecuteUbergraph_CUBE::CallFunc_GetTotalHours_ReturnValue' has a wrong offset!");
static_assert(offsetof(CUBE_C_ExecuteUbergraph_CUBE, CallFunc_Less_FloatFloat_ReturnValue) == 0x0001B0, "Member 'CUBE_C_ExecuteUbergraph_CUBE::CallFunc_Less_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(CUBE_C_ExecuteUbergraph_CUBE, CallFunc_Add_TimespanTimespan_ReturnValue) == 0x0001B8, "Member 'CUBE_C_ExecuteUbergraph_CUBE::CallFunc_Add_TimespanTimespan_ReturnValue' has a wrong offset!");
static_assert(offsetof(CUBE_C_ExecuteUbergraph_CUBE, CallFunc_GetContext_ReturnValue) == 0x0001C0, "Member 'CUBE_C_ExecuteUbergraph_CUBE::CallFunc_GetContext_ReturnValue' has a wrong offset!");
static_assert(offsetof(CUBE_C_ExecuteUbergraph_CUBE, CallFunc_IsValid_ReturnValue1) == 0x0001C8, "Member 'CUBE_C_ExecuteUbergraph_CUBE::CallFunc_IsValid_ReturnValue1' has a wrong offset!");
static_assert(offsetof(CUBE_C_ExecuteUbergraph_CUBE, CallFunc_GetContext_ReturnValue1) == 0x0001D0, "Member 'CUBE_C_ExecuteUbergraph_CUBE::CallFunc_GetContext_ReturnValue1' has a wrong offset!");
static_assert(offsetof(CUBE_C_ExecuteUbergraph_CUBE, CallFunc_GetContext_ReturnValue2) == 0x0001D8, "Member 'CUBE_C_ExecuteUbergraph_CUBE::CallFunc_GetContext_ReturnValue2' has a wrong offset!");
static_assert(offsetof(CUBE_C_ExecuteUbergraph_CUBE, CallFunc_IsValid_ReturnValue2) == 0x0001E0, "Member 'CUBE_C_ExecuteUbergraph_CUBE::CallFunc_IsValid_ReturnValue2' has a wrong offset!");
static_assert(offsetof(CUBE_C_ExecuteUbergraph_CUBE, CallFunc_IsValid_ReturnValue3) == 0x0001E1, "Member 'CUBE_C_ExecuteUbergraph_CUBE::CallFunc_IsValid_ReturnValue3' has a wrong offset!");
static_assert(offsetof(CUBE_C_ExecuteUbergraph_CUBE, CallFunc_K2_GetComponentLocation_ReturnValue) == 0x0001E4, "Member 'CUBE_C_ExecuteUbergraph_CUBE::CallFunc_K2_GetComponentLocation_ReturnValue' has a wrong offset!");
static_assert(offsetof(CUBE_C_ExecuteUbergraph_CUBE, K2Node_Event_MyComp) == 0x0001F0, "Member 'CUBE_C_ExecuteUbergraph_CUBE::K2Node_Event_MyComp' has a wrong offset!");
static_assert(offsetof(CUBE_C_ExecuteUbergraph_CUBE, K2Node_Event_Other) == 0x0001F8, "Member 'CUBE_C_ExecuteUbergraph_CUBE::K2Node_Event_Other' has a wrong offset!");
static_assert(offsetof(CUBE_C_ExecuteUbergraph_CUBE, K2Node_Event_OtherComp) == 0x000200, "Member 'CUBE_C_ExecuteUbergraph_CUBE::K2Node_Event_OtherComp' has a wrong offset!");
static_assert(offsetof(CUBE_C_ExecuteUbergraph_CUBE, K2Node_Event_bSelfMoved) == 0x000208, "Member 'CUBE_C_ExecuteUbergraph_CUBE::K2Node_Event_bSelfMoved' has a wrong offset!");
static_assert(offsetof(CUBE_C_ExecuteUbergraph_CUBE, K2Node_Event_HitLocation) == 0x00020C, "Member 'CUBE_C_ExecuteUbergraph_CUBE::K2Node_Event_HitLocation' has a wrong offset!");
static_assert(offsetof(CUBE_C_ExecuteUbergraph_CUBE, K2Node_Event_HitNormal) == 0x000218, "Member 'CUBE_C_ExecuteUbergraph_CUBE::K2Node_Event_HitNormal' has a wrong offset!");
static_assert(offsetof(CUBE_C_ExecuteUbergraph_CUBE, K2Node_Event_NormalImpulse) == 0x000224, "Member 'CUBE_C_ExecuteUbergraph_CUBE::K2Node_Event_NormalImpulse' has a wrong offset!");
static_assert(offsetof(CUBE_C_ExecuteUbergraph_CUBE, K2Node_Event_Hit) == 0x000230, "Member 'CUBE_C_ExecuteUbergraph_CUBE::K2Node_Event_Hit' has a wrong offset!");
static_assert(offsetof(CUBE_C_ExecuteUbergraph_CUBE, CallFunc_Multiply_VectorFloat_ReturnValue) == 0x0002B8, "Member 'CUBE_C_ExecuteUbergraph_CUBE::CallFunc_Multiply_VectorFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(CUBE_C_ExecuteUbergraph_CUBE, CallFunc_Multiply_VectorFloat_ReturnValue1) == 0x0002C4, "Member 'CUBE_C_ExecuteUbergraph_CUBE::CallFunc_Multiply_VectorFloat_ReturnValue1' has a wrong offset!");
static_assert(offsetof(CUBE_C_ExecuteUbergraph_CUBE, K2Node_DynamicCast_AsFort_Athena_Vehicle) == 0x0002D0, "Member 'CUBE_C_ExecuteUbergraph_CUBE::K2Node_DynamicCast_AsFort_Athena_Vehicle' has a wrong offset!");
static_assert(offsetof(CUBE_C_ExecuteUbergraph_CUBE, K2Node_DynamicCast_bSuccess) == 0x0002D8, "Member 'CUBE_C_ExecuteUbergraph_CUBE::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(CUBE_C_ExecuteUbergraph_CUBE, K2Node_DynamicCast_AsB_Player_Spawned_Ball) == 0x0002E0, "Member 'CUBE_C_ExecuteUbergraph_CUBE::K2Node_DynamicCast_AsB_Player_Spawned_Ball' has a wrong offset!");
static_assert(offsetof(CUBE_C_ExecuteUbergraph_CUBE, K2Node_DynamicCast_bSuccess1) == 0x0002E8, "Member 'CUBE_C_ExecuteUbergraph_CUBE::K2Node_DynamicCast_bSuccess1' has a wrong offset!");
static_assert(offsetof(CUBE_C_ExecuteUbergraph_CUBE, K2Node_DynamicCast_AsFort_Athena_SKVehicle) == 0x0002F0, "Member 'CUBE_C_ExecuteUbergraph_CUBE::K2Node_DynamicCast_AsFort_Athena_SKVehicle' has a wrong offset!");
static_assert(offsetof(CUBE_C_ExecuteUbergraph_CUBE, K2Node_DynamicCast_bSuccess2) == 0x0002F8, "Member 'CUBE_C_ExecuteUbergraph_CUBE::K2Node_DynamicCast_bSuccess2' has a wrong offset!");
static_assert(offsetof(CUBE_C_ExecuteUbergraph_CUBE, CallFunc_K2_GetActorLocation_ReturnValue) == 0x0002FC, "Member 'CUBE_C_ExecuteUbergraph_CUBE::CallFunc_K2_GetActorLocation_ReturnValue' has a wrong offset!");
static_assert(offsetof(CUBE_C_ExecuteUbergraph_CUBE, CallFunc_Subtract_VectorVector_ReturnValue) == 0x000308, "Member 'CUBE_C_ExecuteUbergraph_CUBE::CallFunc_Subtract_VectorVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(CUBE_C_ExecuteUbergraph_CUBE, CallFunc_Normal_ReturnValue) == 0x000314, "Member 'CUBE_C_ExecuteUbergraph_CUBE::CallFunc_Normal_ReturnValue' has a wrong offset!");
static_assert(offsetof(CUBE_C_ExecuteUbergraph_CUBE, CallFunc_GetTransform_ReturnValue) == 0x000320, "Member 'CUBE_C_ExecuteUbergraph_CUBE::CallFunc_GetTransform_ReturnValue' has a wrong offset!");
static_assert(offsetof(CUBE_C_ExecuteUbergraph_CUBE, CallFunc_Multiply_VectorFloat_ReturnValue2) == 0x000350, "Member 'CUBE_C_ExecuteUbergraph_CUBE::CallFunc_Multiply_VectorFloat_ReturnValue2' has a wrong offset!");
static_assert(offsetof(CUBE_C_ExecuteUbergraph_CUBE, K2Node_DynamicCast_AsPlayer_Pawn_Athena) == 0x000360, "Member 'CUBE_C_ExecuteUbergraph_CUBE::K2Node_DynamicCast_AsPlayer_Pawn_Athena' has a wrong offset!");
static_assert(offsetof(CUBE_C_ExecuteUbergraph_CUBE, K2Node_DynamicCast_bSuccess3) == 0x000368, "Member 'CUBE_C_ExecuteUbergraph_CUBE::K2Node_DynamicCast_bSuccess3' has a wrong offset!");
static_assert(offsetof(CUBE_C_ExecuteUbergraph_CUBE, CallFunc_Add_VectorVector_ReturnValue) == 0x00036C, "Member 'CUBE_C_ExecuteUbergraph_CUBE::CallFunc_Add_VectorVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(CUBE_C_ExecuteUbergraph_CUBE, K2Node_Event_Damage1) == 0x000378, "Member 'CUBE_C_ExecuteUbergraph_CUBE::K2Node_Event_Damage1' has a wrong offset!");
static_assert(offsetof(CUBE_C_ExecuteUbergraph_CUBE, K2Node_Event_DamageTags1) == 0x000380, "Member 'CUBE_C_ExecuteUbergraph_CUBE::K2Node_Event_DamageTags1' has a wrong offset!");
static_assert(offsetof(CUBE_C_ExecuteUbergraph_CUBE, K2Node_Event_Momentum1) == 0x0003A0, "Member 'CUBE_C_ExecuteUbergraph_CUBE::K2Node_Event_Momentum1' has a wrong offset!");
static_assert(offsetof(CUBE_C_ExecuteUbergraph_CUBE, K2Node_Event_HitInfo1) == 0x0003AC, "Member 'CUBE_C_ExecuteUbergraph_CUBE::K2Node_Event_HitInfo1' has a wrong offset!");
static_assert(offsetof(CUBE_C_ExecuteUbergraph_CUBE, K2Node_Event_InstigatedBy1) == 0x000438, "Member 'CUBE_C_ExecuteUbergraph_CUBE::K2Node_Event_InstigatedBy1' has a wrong offset!");
static_assert(offsetof(CUBE_C_ExecuteUbergraph_CUBE, K2Node_Event_DamageCauser1) == 0x000440, "Member 'CUBE_C_ExecuteUbergraph_CUBE::K2Node_Event_DamageCauser1' has a wrong offset!");
static_assert(offsetof(CUBE_C_ExecuteUbergraph_CUBE, K2Node_Event_EffectContext1) == 0x000448, "Member 'CUBE_C_ExecuteUbergraph_CUBE::K2Node_Event_EffectContext1' has a wrong offset!");
static_assert(offsetof(CUBE_C_ExecuteUbergraph_CUBE, CallFunc_GetOwner_ReturnValue) == 0x000460, "Member 'CUBE_C_ExecuteUbergraph_CUBE::CallFunc_GetOwner_ReturnValue' has a wrong offset!");
static_assert(offsetof(CUBE_C_ExecuteUbergraph_CUBE, K2Node_DynamicCast_AsFort_Player_Controller) == 0x000468, "Member 'CUBE_C_ExecuteUbergraph_CUBE::K2Node_DynamicCast_AsFort_Player_Controller' has a wrong offset!");
static_assert(offsetof(CUBE_C_ExecuteUbergraph_CUBE, K2Node_DynamicCast_bSuccess4) == 0x000470, "Member 'CUBE_C_ExecuteUbergraph_CUBE::K2Node_DynamicCast_bSuccess4' has a wrong offset!");
static_assert(offsetof(CUBE_C_ExecuteUbergraph_CUBE, K2Node_DynamicCast_AsPlayer_Pawn_Athena1) == 0x000478, "Member 'CUBE_C_ExecuteUbergraph_CUBE::K2Node_DynamicCast_AsPlayer_Pawn_Athena1' has a wrong offset!");
static_assert(offsetof(CUBE_C_ExecuteUbergraph_CUBE, K2Node_DynamicCast_bSuccess5) == 0x000480, "Member 'CUBE_C_ExecuteUbergraph_CUBE::K2Node_DynamicCast_bSuccess5' has a wrong offset!");
static_assert(offsetof(CUBE_C_ExecuteUbergraph_CUBE, CallFunc_GetPlayerPawn_ReturnValue) == 0x000488, "Member 'CUBE_C_ExecuteUbergraph_CUBE::CallFunc_GetPlayerPawn_ReturnValue' has a wrong offset!");
static_assert(offsetof(CUBE_C_ExecuteUbergraph_CUBE, CallFunc_BreakHitResult_bBlockingHit) == 0x000490, "Member 'CUBE_C_ExecuteUbergraph_CUBE::CallFunc_BreakHitResult_bBlockingHit' has a wrong offset!");
static_assert(offsetof(CUBE_C_ExecuteUbergraph_CUBE, CallFunc_BreakHitResult_bInitialOverlap) == 0x000491, "Member 'CUBE_C_ExecuteUbergraph_CUBE::CallFunc_BreakHitResult_bInitialOverlap' has a wrong offset!");
static_assert(offsetof(CUBE_C_ExecuteUbergraph_CUBE, CallFunc_BreakHitResult_Time) == 0x000494, "Member 'CUBE_C_ExecuteUbergraph_CUBE::CallFunc_BreakHitResult_Time' has a wrong offset!");
static_assert(offsetof(CUBE_C_ExecuteUbergraph_CUBE, CallFunc_BreakHitResult_Distance) == 0x000498, "Member 'CUBE_C_ExecuteUbergraph_CUBE::CallFunc_BreakHitResult_Distance' has a wrong offset!");
static_assert(offsetof(CUBE_C_ExecuteUbergraph_CUBE, CallFunc_BreakHitResult_Location) == 0x00049C, "Member 'CUBE_C_ExecuteUbergraph_CUBE::CallFunc_BreakHitResult_Location' has a wrong offset!");
static_assert(offsetof(CUBE_C_ExecuteUbergraph_CUBE, CallFunc_BreakHitResult_ImpactPoint) == 0x0004A8, "Member 'CUBE_C_ExecuteUbergraph_CUBE::CallFunc_BreakHitResult_ImpactPoint' has a wrong offset!");
static_assert(offsetof(CUBE_C_ExecuteUbergraph_CUBE, CallFunc_BreakHitResult_Normal) == 0x0004B4, "Member 'CUBE_C_ExecuteUbergraph_CUBE::CallFunc_BreakHitResult_Normal' has a wrong offset!");
static_assert(offsetof(CUBE_C_ExecuteUbergraph_CUBE, CallFunc_BreakHitResult_ImpactNormal) == 0x0004C0, "Member 'CUBE_C_ExecuteUbergraph_CUBE::CallFunc_BreakHitResult_ImpactNormal' has a wrong offset!");
static_assert(offsetof(CUBE_C_ExecuteUbergraph_CUBE, CallFunc_BreakHitResult_PhysMat) == 0x0004D0, "Member 'CUBE_C_ExecuteUbergraph_CUBE::CallFunc_BreakHitResult_PhysMat' has a wrong offset!");
static_assert(offsetof(CUBE_C_ExecuteUbergraph_CUBE, CallFunc_BreakHitResult_HitActor) == 0x0004D8, "Member 'CUBE_C_ExecuteUbergraph_CUBE::CallFunc_BreakHitResult_HitActor' has a wrong offset!");
static_assert(offsetof(CUBE_C_ExecuteUbergraph_CUBE, CallFunc_BreakHitResult_HitComponent) == 0x0004E0, "Member 'CUBE_C_ExecuteUbergraph_CUBE::CallFunc_BreakHitResult_HitComponent' has a wrong offset!");
static_assert(offsetof(CUBE_C_ExecuteUbergraph_CUBE, CallFunc_BreakHitResult_HitBoneName) == 0x0004E8, "Member 'CUBE_C_ExecuteUbergraph_CUBE::CallFunc_BreakHitResult_HitBoneName' has a wrong offset!");
static_assert(offsetof(CUBE_C_ExecuteUbergraph_CUBE, CallFunc_BreakHitResult_HitItem) == 0x0004F0, "Member 'CUBE_C_ExecuteUbergraph_CUBE::CallFunc_BreakHitResult_HitItem' has a wrong offset!");
static_assert(offsetof(CUBE_C_ExecuteUbergraph_CUBE, CallFunc_BreakHitResult_FaceIndex) == 0x0004F4, "Member 'CUBE_C_ExecuteUbergraph_CUBE::CallFunc_BreakHitResult_FaceIndex' has a wrong offset!");
static_assert(offsetof(CUBE_C_ExecuteUbergraph_CUBE, CallFunc_BreakHitResult_TraceStart) == 0x0004F8, "Member 'CUBE_C_ExecuteUbergraph_CUBE::CallFunc_BreakHitResult_TraceStart' has a wrong offset!");
static_assert(offsetof(CUBE_C_ExecuteUbergraph_CUBE, CallFunc_BreakHitResult_TraceEnd) == 0x000504, "Member 'CUBE_C_ExecuteUbergraph_CUBE::CallFunc_BreakHitResult_TraceEnd' has a wrong offset!");
static_assert(offsetof(CUBE_C_ExecuteUbergraph_CUBE, CallFunc_HasTag_ReturnValue) == 0x000510, "Member 'CUBE_C_ExecuteUbergraph_CUBE::CallFunc_HasTag_ReturnValue' has a wrong offset!");
static_assert(offsetof(CUBE_C_ExecuteUbergraph_CUBE, CallFunc_WatchCalendarEvent_ReturnValue1) == 0x000518, "Member 'CUBE_C_ExecuteUbergraph_CUBE::CallFunc_WatchCalendarEvent_ReturnValue1' has a wrong offset!");
static_assert(offsetof(CUBE_C_ExecuteUbergraph_CUBE, CallFunc_IsValid_ReturnValue4) == 0x000520, "Member 'CUBE_C_ExecuteUbergraph_CUBE::CallFunc_IsValid_ReturnValue4' has a wrong offset!");
static_assert(offsetof(CUBE_C_ExecuteUbergraph_CUBE, Temp_string_Variable2) == 0x000528, "Member 'CUBE_C_ExecuteUbergraph_CUBE::Temp_string_Variable2' has a wrong offset!");
static_assert(offsetof(CUBE_C_ExecuteUbergraph_CUBE, Temp_int_Variable) == 0x000538, "Member 'CUBE_C_ExecuteUbergraph_CUBE::Temp_int_Variable' has a wrong offset!");
static_assert(offsetof(CUBE_C_ExecuteUbergraph_CUBE, CallFunc_Add_IntInt_ReturnValue) == 0x00053C, "Member 'CUBE_C_ExecuteUbergraph_CUBE::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(CUBE_C_ExecuteUbergraph_CUBE, CallFunc_Add_IntInt_ReturnValue1) == 0x000540, "Member 'CUBE_C_ExecuteUbergraph_CUBE::CallFunc_Add_IntInt_ReturnValue1' has a wrong offset!");
static_assert(offsetof(CUBE_C_ExecuteUbergraph_CUBE, Temp_struct_Variable4) == 0x000548, "Member 'CUBE_C_ExecuteUbergraph_CUBE::Temp_struct_Variable4' has a wrong offset!");
static_assert(offsetof(CUBE_C_ExecuteUbergraph_CUBE, CallFunc_Array_Get_Item) == 0x000550, "Member 'CUBE_C_ExecuteUbergraph_CUBE::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(CUBE_C_ExecuteUbergraph_CUBE, Temp_struct_Variable5) == 0x000590, "Member 'CUBE_C_ExecuteUbergraph_CUBE::Temp_struct_Variable5' has a wrong offset!");
static_assert(offsetof(CUBE_C_ExecuteUbergraph_CUBE, CallFunc_Array_Get_Item1) == 0x0005A0, "Member 'CUBE_C_ExecuteUbergraph_CUBE::CallFunc_Array_Get_Item1' has a wrong offset!");
static_assert(offsetof(CUBE_C_ExecuteUbergraph_CUBE, CallFunc_Add_IntInt_ReturnValue2) == 0x0005E0, "Member 'CUBE_C_ExecuteUbergraph_CUBE::CallFunc_Add_IntInt_ReturnValue2' has a wrong offset!");
static_assert(offsetof(CUBE_C_ExecuteUbergraph_CUBE, CallFunc_Array_LastIndex_ReturnValue) == 0x0005E4, "Member 'CUBE_C_ExecuteUbergraph_CUBE::CallFunc_Array_LastIndex_ReturnValue' has a wrong offset!");
static_assert(offsetof(CUBE_C_ExecuteUbergraph_CUBE, Temp_float_Variable2) == 0x0005E8, "Member 'CUBE_C_ExecuteUbergraph_CUBE::Temp_float_Variable2' has a wrong offset!");
static_assert(offsetof(CUBE_C_ExecuteUbergraph_CUBE, CallFunc_Array_Get_Item2) == 0x0005F0, "Member 'CUBE_C_ExecuteUbergraph_CUBE::CallFunc_Array_Get_Item2' has a wrong offset!");
static_assert(offsetof(CUBE_C_ExecuteUbergraph_CUBE, CallFunc_Add_IntInt_ReturnValue3) == 0x000630, "Member 'CUBE_C_ExecuteUbergraph_CUBE::CallFunc_Add_IntInt_ReturnValue3' has a wrong offset!");
static_assert(offsetof(CUBE_C_ExecuteUbergraph_CUBE, CallFunc_Array_LastIndex_ReturnValue1) == 0x000634, "Member 'CUBE_C_ExecuteUbergraph_CUBE::CallFunc_Array_LastIndex_ReturnValue1' has a wrong offset!");
static_assert(offsetof(CUBE_C_ExecuteUbergraph_CUBE, CallFunc_Array_LastIndex_ReturnValue2) == 0x000638, "Member 'CUBE_C_ExecuteUbergraph_CUBE::CallFunc_Array_LastIndex_ReturnValue2' has a wrong offset!");
static_assert(offsetof(CUBE_C_ExecuteUbergraph_CUBE, CallFunc_Subtract_IntInt_ReturnValue) == 0x00063C, "Member 'CUBE_C_ExecuteUbergraph_CUBE::CallFunc_Subtract_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(CUBE_C_ExecuteUbergraph_CUBE, CallFunc_Array_Length_ReturnValue) == 0x000640, "Member 'CUBE_C_ExecuteUbergraph_CUBE::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(CUBE_C_ExecuteUbergraph_CUBE, CallFunc_IsValid_ReturnValue5) == 0x000644, "Member 'CUBE_C_ExecuteUbergraph_CUBE::CallFunc_IsValid_ReturnValue5' has a wrong offset!");
static_assert(offsetof(CUBE_C_ExecuteUbergraph_CUBE, K2Node_CustomEvent_StartMidway) == 0x000645, "Member 'CUBE_C_ExecuteUbergraph_CUBE::K2Node_CustomEvent_StartMidway' has a wrong offset!");
static_assert(offsetof(CUBE_C_ExecuteUbergraph_CUBE, CallFunc_Conv_ByteToInt_ReturnValue) == 0x000648, "Member 'CUBE_C_ExecuteUbergraph_CUBE::CallFunc_Conv_ByteToInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(CUBE_C_ExecuteUbergraph_CUBE, CallFunc_NotEqual_ByteByte_ReturnValue) == 0x00064C, "Member 'CUBE_C_ExecuteUbergraph_CUBE::CallFunc_NotEqual_ByteByte_ReturnValue' has a wrong offset!");
static_assert(offsetof(CUBE_C_ExecuteUbergraph_CUBE, CallFunc_TraceCubeShape_Hit) == 0x00064D, "Member 'CUBE_C_ExecuteUbergraph_CUBE::CallFunc_TraceCubeShape_Hit' has a wrong offset!");
static_assert(offsetof(CUBE_C_ExecuteUbergraph_CUBE, CallFunc_TraceCubeShape_Hit1) == 0x00064E, "Member 'CUBE_C_ExecuteUbergraph_CUBE::CallFunc_TraceCubeShape_Hit1' has a wrong offset!");
static_assert(offsetof(CUBE_C_ExecuteUbergraph_CUBE, CallFunc_GetCalendarEventInformation_bIsEventActive) == 0x00064F, "Member 'CUBE_C_ExecuteUbergraph_CUBE::CallFunc_GetCalendarEventInformation_bIsEventActive' has a wrong offset!");
static_assert(offsetof(CUBE_C_ExecuteUbergraph_CUBE, CallFunc_GetCalendarEventInformation_TimeSinceBegin) == 0x000650, "Member 'CUBE_C_ExecuteUbergraph_CUBE::CallFunc_GetCalendarEventInformation_TimeSinceBegin' has a wrong offset!");
static_assert(offsetof(CUBE_C_ExecuteUbergraph_CUBE, CallFunc_GetCalendarEventInformation_TimeUntilEnd) == 0x000658, "Member 'CUBE_C_ExecuteUbergraph_CUBE::CallFunc_GetCalendarEventInformation_TimeUntilEnd' has a wrong offset!");
static_assert(offsetof(CUBE_C_ExecuteUbergraph_CUBE, CallFunc_GetCalendarEventInformation_TimeSpanRatio) == 0x000660, "Member 'CUBE_C_ExecuteUbergraph_CUBE::CallFunc_GetCalendarEventInformation_TimeSpanRatio' has a wrong offset!");
static_assert(offsetof(CUBE_C_ExecuteUbergraph_CUBE, CallFunc_Add_IntInt_ReturnValue4) == 0x000664, "Member 'CUBE_C_ExecuteUbergraph_CUBE::CallFunc_Add_IntInt_ReturnValue4' has a wrong offset!");
static_assert(offsetof(CUBE_C_ExecuteUbergraph_CUBE, K2Node_CreateDelegate_OutputDelegate6) == 0x000668, "Member 'CUBE_C_ExecuteUbergraph_CUBE::K2Node_CreateDelegate_OutputDelegate6' has a wrong offset!");
static_assert(offsetof(CUBE_C_ExecuteUbergraph_CUBE, CallFunc_Array_Get_Item3) == 0x000680, "Member 'CUBE_C_ExecuteUbergraph_CUBE::CallFunc_Array_Get_Item3' has a wrong offset!");
static_assert(offsetof(CUBE_C_ExecuteUbergraph_CUBE, CallFunc_EqualEqual_FloatFloat_ReturnValue) == 0x0006C0, "Member 'CUBE_C_ExecuteUbergraph_CUBE::CallFunc_EqualEqual_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(CUBE_C_ExecuteUbergraph_CUBE, CallFunc_Subtract_ByteByte_ReturnValue) == 0x0006C1, "Member 'CUBE_C_ExecuteUbergraph_CUBE::CallFunc_Subtract_ByteByte_ReturnValue' has a wrong offset!");
static_assert(offsetof(CUBE_C_ExecuteUbergraph_CUBE, K2Node_CustomEvent_EventName8) == 0x0006C8, "Member 'CUBE_C_ExecuteUbergraph_CUBE::K2Node_CustomEvent_EventName8' has a wrong offset!");
static_assert(offsetof(CUBE_C_ExecuteUbergraph_CUBE, K2Node_CustomEvent_TimeUntilEnd6) == 0x0006D8, "Member 'CUBE_C_ExecuteUbergraph_CUBE::K2Node_CustomEvent_TimeUntilEnd6' has a wrong offset!");
static_assert(offsetof(CUBE_C_ExecuteUbergraph_CUBE, K2Node_CustomEvent_TimeSinceBegin6) == 0x0006E0, "Member 'CUBE_C_ExecuteUbergraph_CUBE::K2Node_CustomEvent_TimeSinceBegin6' has a wrong offset!");
static_assert(offsetof(CUBE_C_ExecuteUbergraph_CUBE, K2Node_CustomEvent_TimeSpanRatio6) == 0x0006E8, "Member 'CUBE_C_ExecuteUbergraph_CUBE::K2Node_CustomEvent_TimeSpanRatio6' has a wrong offset!");
static_assert(offsetof(CUBE_C_ExecuteUbergraph_CUBE, CallFunc_IsDedicatedServer_ReturnValue) == 0x0006EC, "Member 'CUBE_C_ExecuteUbergraph_CUBE::CallFunc_IsDedicatedServer_ReturnValue' has a wrong offset!");
static_assert(offsetof(CUBE_C_ExecuteUbergraph_CUBE, K2Node_CreateDelegate_OutputDelegate7) == 0x0006F0, "Member 'CUBE_C_ExecuteUbergraph_CUBE::K2Node_CreateDelegate_OutputDelegate7' has a wrong offset!");
static_assert(offsetof(CUBE_C_ExecuteUbergraph_CUBE, Temp_bool_Variable) == 0x000700, "Member 'CUBE_C_ExecuteUbergraph_CUBE::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(CUBE_C_ExecuteUbergraph_CUBE, K2Node_CustomEvent_Location2) == 0x000704, "Member 'CUBE_C_ExecuteUbergraph_CUBE::K2Node_CustomEvent_Location2' has a wrong offset!");
static_assert(offsetof(CUBE_C_ExecuteUbergraph_CUBE, K2Node_CustomEvent_Normal) == 0x000710, "Member 'CUBE_C_ExecuteUbergraph_CUBE::K2Node_CustomEvent_Normal' has a wrong offset!");
static_assert(offsetof(CUBE_C_ExecuteUbergraph_CUBE, K2Node_CustomEvent_Source) == 0x000720, "Member 'CUBE_C_ExecuteUbergraph_CUBE::K2Node_CustomEvent_Source' has a wrong offset!");
static_assert(offsetof(CUBE_C_ExecuteUbergraph_CUBE, K2Node_CustomEvent_Scale) == 0x000728, "Member 'CUBE_C_ExecuteUbergraph_CUBE::K2Node_CustomEvent_Scale' has a wrong offset!");
static_assert(offsetof(CUBE_C_ExecuteUbergraph_CUBE, K2Node_CustomEvent_EventName9) == 0x000730, "Member 'CUBE_C_ExecuteUbergraph_CUBE::K2Node_CustomEvent_EventName9' has a wrong offset!");
static_assert(offsetof(CUBE_C_ExecuteUbergraph_CUBE, K2Node_CustomEvent_TimeUntilEnd7) == 0x000740, "Member 'CUBE_C_ExecuteUbergraph_CUBE::K2Node_CustomEvent_TimeUntilEnd7' has a wrong offset!");
static_assert(offsetof(CUBE_C_ExecuteUbergraph_CUBE, K2Node_CustomEvent_TimeSinceBegin7) == 0x000748, "Member 'CUBE_C_ExecuteUbergraph_CUBE::K2Node_CustomEvent_TimeSinceBegin7' has a wrong offset!");
static_assert(offsetof(CUBE_C_ExecuteUbergraph_CUBE, K2Node_CustomEvent_TimeSpanRatio7) == 0x000750, "Member 'CUBE_C_ExecuteUbergraph_CUBE::K2Node_CustomEvent_TimeSpanRatio7' has a wrong offset!");
static_assert(offsetof(CUBE_C_ExecuteUbergraph_CUBE, CallFunc_BreakVector_X) == 0x000754, "Member 'CUBE_C_ExecuteUbergraph_CUBE::CallFunc_BreakVector_X' has a wrong offset!");
static_assert(offsetof(CUBE_C_ExecuteUbergraph_CUBE, CallFunc_BreakVector_Y) == 0x000758, "Member 'CUBE_C_ExecuteUbergraph_CUBE::CallFunc_BreakVector_Y' has a wrong offset!");
static_assert(offsetof(CUBE_C_ExecuteUbergraph_CUBE, CallFunc_BreakVector_Z) == 0x00075C, "Member 'CUBE_C_ExecuteUbergraph_CUBE::CallFunc_BreakVector_Z' has a wrong offset!");
static_assert(offsetof(CUBE_C_ExecuteUbergraph_CUBE, K2Node_MakeStruct_Vector_NetQuantizeNormal) == 0x000760, "Member 'CUBE_C_ExecuteUbergraph_CUBE::K2Node_MakeStruct_Vector_NetQuantizeNormal' has a wrong offset!");
static_assert(offsetof(CUBE_C_ExecuteUbergraph_CUBE, CallFunc_BreakVector_X1) == 0x00076C, "Member 'CUBE_C_ExecuteUbergraph_CUBE::CallFunc_BreakVector_X1' has a wrong offset!");
static_assert(offsetof(CUBE_C_ExecuteUbergraph_CUBE, CallFunc_BreakVector_Y1) == 0x000770, "Member 'CUBE_C_ExecuteUbergraph_CUBE::CallFunc_BreakVector_Y1' has a wrong offset!");
static_assert(offsetof(CUBE_C_ExecuteUbergraph_CUBE, CallFunc_BreakVector_Z1) == 0x000774, "Member 'CUBE_C_ExecuteUbergraph_CUBE::CallFunc_BreakVector_Z1' has a wrong offset!");
static_assert(offsetof(CUBE_C_ExecuteUbergraph_CUBE, K2Node_MakeStruct_Vector_NetQuantize10) == 0x000778, "Member 'CUBE_C_ExecuteUbergraph_CUBE::K2Node_MakeStruct_Vector_NetQuantize10' has a wrong offset!");
static_assert(offsetof(CUBE_C_ExecuteUbergraph_CUBE, CallFunc_GetTransform_ReturnValue1) == 0x000790, "Member 'CUBE_C_ExecuteUbergraph_CUBE::CallFunc_GetTransform_ReturnValue1' has a wrong offset!");
static_assert(offsetof(CUBE_C_ExecuteUbergraph_CUBE, K2Node_MakeStruct_GameplayCueParameters) == 0x0007C0, "Member 'CUBE_C_ExecuteUbergraph_CUBE::K2Node_MakeStruct_GameplayCueParameters' has a wrong offset!");
static_assert(offsetof(CUBE_C_ExecuteUbergraph_CUBE, CallFunc_ComposeTransforms_ReturnValue) == 0x000880, "Member 'CUBE_C_ExecuteUbergraph_CUBE::CallFunc_ComposeTransforms_ReturnValue' has a wrong offset!");
static_assert(offsetof(CUBE_C_ExecuteUbergraph_CUBE, CallFunc_BreakTransform_Location) == 0x0008B0, "Member 'CUBE_C_ExecuteUbergraph_CUBE::CallFunc_BreakTransform_Location' has a wrong offset!");
static_assert(offsetof(CUBE_C_ExecuteUbergraph_CUBE, CallFunc_BreakTransform_Rotation) == 0x0008BC, "Member 'CUBE_C_ExecuteUbergraph_CUBE::CallFunc_BreakTransform_Rotation' has a wrong offset!");
static_assert(offsetof(CUBE_C_ExecuteUbergraph_CUBE, CallFunc_BreakTransform_Scale) == 0x0008C8, "Member 'CUBE_C_ExecuteUbergraph_CUBE::CallFunc_BreakTransform_Scale' has a wrong offset!");
static_assert(offsetof(CUBE_C_ExecuteUbergraph_CUBE, CallFunc_MakeTransform_ReturnValue) == 0x0008E0, "Member 'CUBE_C_ExecuteUbergraph_CUBE::CallFunc_MakeTransform_ReturnValue' has a wrong offset!");
static_assert(offsetof(CUBE_C_ExecuteUbergraph_CUBE, CallFunc_CalculateNextMove_NextIndex) == 0x000910, "Member 'CUBE_C_ExecuteUbergraph_CUBE::CallFunc_CalculateNextMove_NextIndex' has a wrong offset!");
static_assert(offsetof(CUBE_C_ExecuteUbergraph_CUBE, CallFunc_CalculateNextMove_SecondsTillMove) == 0x000914, "Member 'CUBE_C_ExecuteUbergraph_CUBE::CallFunc_CalculateNextMove_SecondsTillMove' has a wrong offset!");
static_assert(offsetof(CUBE_C_ExecuteUbergraph_CUBE, CallFunc_Subtract_FloatFloat_ReturnValue) == 0x000918, "Member 'CUBE_C_ExecuteUbergraph_CUBE::CallFunc_Subtract_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(CUBE_C_ExecuteUbergraph_CUBE, CallFunc_LessEqual_FloatFloat_ReturnValue) == 0x00091C, "Member 'CUBE_C_ExecuteUbergraph_CUBE::CallFunc_LessEqual_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(CUBE_C_ExecuteUbergraph_CUBE, CallFunc_K2_SetTimerDelegate_ReturnValue) == 0x000920, "Member 'CUBE_C_ExecuteUbergraph_CUBE::CallFunc_K2_SetTimerDelegate_ReturnValue' has a wrong offset!");
static_assert(offsetof(CUBE_C_ExecuteUbergraph_CUBE, CallFunc_HasAuthority_ReturnValue) == 0x000928, "Member 'CUBE_C_ExecuteUbergraph_CUBE::CallFunc_HasAuthority_ReturnValue' has a wrong offset!");
static_assert(offsetof(CUBE_C_ExecuteUbergraph_CUBE, CallFunc_Array_Contains_ReturnValue) == 0x000929, "Member 'CUBE_C_ExecuteUbergraph_CUBE::CallFunc_Array_Contains_ReturnValue' has a wrong offset!");
static_assert(offsetof(CUBE_C_ExecuteUbergraph_CUBE, K2Node_CreateDelegate_OutputDelegate8) == 0x00092C, "Member 'CUBE_C_ExecuteUbergraph_CUBE::K2Node_CreateDelegate_OutputDelegate8' has a wrong offset!");
static_assert(offsetof(CUBE_C_ExecuteUbergraph_CUBE, CallFunc_CreateDynamicMaterialInstance_ReturnValue) == 0x000940, "Member 'CUBE_C_ExecuteUbergraph_CUBE::CallFunc_CreateDynamicMaterialInstance_ReturnValue' has a wrong offset!");
static_assert(offsetof(CUBE_C_ExecuteUbergraph_CUBE, K2Node_CustomEvent_Active) == 0x000948, "Member 'CUBE_C_ExecuteUbergraph_CUBE::K2Node_CustomEvent_Active' has a wrong offset!");
static_assert(offsetof(CUBE_C_ExecuteUbergraph_CUBE, CallFunc_BeginDeferredActorSpawnFromClass_ReturnValue) == 0x000950, "Member 'CUBE_C_ExecuteUbergraph_CUBE::CallFunc_BeginDeferredActorSpawnFromClass_ReturnValue' has a wrong offset!");
static_assert(offsetof(CUBE_C_ExecuteUbergraph_CUBE, CallFunc_FinishSpawningActor_ReturnValue) == 0x000958, "Member 'CUBE_C_ExecuteUbergraph_CUBE::CallFunc_FinishSpawningActor_ReturnValue' has a wrong offset!");
static_assert(offsetof(CUBE_C_ExecuteUbergraph_CUBE, K2Node_CreateDelegate_OutputDelegate9) == 0x000960, "Member 'CUBE_C_ExecuteUbergraph_CUBE::K2Node_CreateDelegate_OutputDelegate9' has a wrong offset!");
static_assert(offsetof(CUBE_C_ExecuteUbergraph_CUBE, CallFunc_K2_SetTimerDelegate_ReturnValue1) == 0x000970, "Member 'CUBE_C_ExecuteUbergraph_CUBE::CallFunc_K2_SetTimerDelegate_ReturnValue1' has a wrong offset!");
static_assert(offsetof(CUBE_C_ExecuteUbergraph_CUBE, Temp_int_Array_Index_Variable) == 0x000978, "Member 'CUBE_C_ExecuteUbergraph_CUBE::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(CUBE_C_ExecuteUbergraph_CUBE, K2Node_CustomEvent_Enabled1) == 0x00097C, "Member 'CUBE_C_ExecuteUbergraph_CUBE::K2Node_CustomEvent_Enabled1' has a wrong offset!");
static_assert(offsetof(CUBE_C_ExecuteUbergraph_CUBE, CallFunc_Conv_IntToByte_ReturnValue) == 0x00097D, "Member 'CUBE_C_ExecuteUbergraph_CUBE::CallFunc_Conv_IntToByte_ReturnValue' has a wrong offset!");
static_assert(offsetof(CUBE_C_ExecuteUbergraph_CUBE, K2Node_CustomEvent_Is_2_Part_Roll) == 0x00097E, "Member 'CUBE_C_ExecuteUbergraph_CUBE::K2Node_CustomEvent_Is_2_Part_Roll' has a wrong offset!");
static_assert(offsetof(CUBE_C_ExecuteUbergraph_CUBE, K2Node_Select_Default) == 0x000980, "Member 'CUBE_C_ExecuteUbergraph_CUBE::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(CUBE_C_ExecuteUbergraph_CUBE, CallFunc_SpawnSoundAttached_ReturnValue) == 0x000988, "Member 'CUBE_C_ExecuteUbergraph_CUBE::CallFunc_SpawnSoundAttached_ReturnValue' has a wrong offset!");
static_assert(offsetof(CUBE_C_ExecuteUbergraph_CUBE, CallFunc_SpawnSoundAttached_ReturnValue1) == 0x000990, "Member 'CUBE_C_ExecuteUbergraph_CUBE::CallFunc_SpawnSoundAttached_ReturnValue1' has a wrong offset!");
static_assert(offsetof(CUBE_C_ExecuteUbergraph_CUBE, K2Node_CustomEvent_Percent_Complete) == 0x000998, "Member 'CUBE_C_ExecuteUbergraph_CUBE::K2Node_CustomEvent_Percent_Complete' has a wrong offset!");
static_assert(offsetof(CUBE_C_ExecuteUbergraph_CUBE, CallFunc_SpawnSoundAttached_ReturnValue2) == 0x0009A0, "Member 'CUBE_C_ExecuteUbergraph_CUBE::CallFunc_SpawnSoundAttached_ReturnValue2' has a wrong offset!");
static_assert(offsetof(CUBE_C_ExecuteUbergraph_CUBE, Temp_int_Loop_Counter_Variable) == 0x0009A8, "Member 'CUBE_C_ExecuteUbergraph_CUBE::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(CUBE_C_ExecuteUbergraph_CUBE, CallFunc_K2_SetWorldTransform_SweepHitResult) == 0x0009AC, "Member 'CUBE_C_ExecuteUbergraph_CUBE::CallFunc_K2_SetWorldTransform_SweepHitResult' has a wrong offset!");
static_assert(offsetof(CUBE_C_ExecuteUbergraph_CUBE, CallFunc_Add_IntInt_ReturnValue5) == 0x000A34, "Member 'CUBE_C_ExecuteUbergraph_CUBE::CallFunc_Add_IntInt_ReturnValue5' has a wrong offset!");
static_assert(offsetof(CUBE_C_ExecuteUbergraph_CUBE, CallFunc_GetFloatValue_ReturnValue) == 0x000A38, "Member 'CUBE_C_ExecuteUbergraph_CUBE::CallFunc_GetFloatValue_ReturnValue' has a wrong offset!");
static_assert(offsetof(CUBE_C_ExecuteUbergraph_CUBE, CallFunc_GetFloatValue_ReturnValue1) == 0x000A3C, "Member 'CUBE_C_ExecuteUbergraph_CUBE::CallFunc_GetFloatValue_ReturnValue1' has a wrong offset!");
static_assert(offsetof(CUBE_C_ExecuteUbergraph_CUBE, CallFunc_SpawnSoundAttached_ReturnValue3) == 0x000A40, "Member 'CUBE_C_ExecuteUbergraph_CUBE::CallFunc_SpawnSoundAttached_ReturnValue3' has a wrong offset!");
static_assert(offsetof(CUBE_C_ExecuteUbergraph_CUBE, CallFunc_Divide_FloatFloat_ReturnValue) == 0x000A48, "Member 'CUBE_C_ExecuteUbergraph_CUBE::CallFunc_Divide_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(CUBE_C_ExecuteUbergraph_CUBE, K2Node_CreateDelegate_OutputDelegate10) == 0x000A4C, "Member 'CUBE_C_ExecuteUbergraph_CUBE::K2Node_CreateDelegate_OutputDelegate10' has a wrong offset!");
static_assert(offsetof(CUBE_C_ExecuteUbergraph_CUBE, CallFunc_Subtract_FloatFloat_ReturnValue1) == 0x000A5C, "Member 'CUBE_C_ExecuteUbergraph_CUBE::CallFunc_Subtract_FloatFloat_ReturnValue1' has a wrong offset!");
static_assert(offsetof(CUBE_C_ExecuteUbergraph_CUBE, CallFunc_Subtract_FloatFloat_ReturnValue2) == 0x000A60, "Member 'CUBE_C_ExecuteUbergraph_CUBE::CallFunc_Subtract_FloatFloat_ReturnValue2' has a wrong offset!");
static_assert(offsetof(CUBE_C_ExecuteUbergraph_CUBE, CallFunc_K2_SetTimerDelegate_ReturnValue2) == 0x000A68, "Member 'CUBE_C_ExecuteUbergraph_CUBE::CallFunc_K2_SetTimerDelegate_ReturnValue2' has a wrong offset!");
static_assert(offsetof(CUBE_C_ExecuteUbergraph_CUBE, CallFunc_Array_Get_Item4) == 0x000A70, "Member 'CUBE_C_ExecuteUbergraph_CUBE::CallFunc_Array_Get_Item4' has a wrong offset!");
static_assert(offsetof(CUBE_C_ExecuteUbergraph_CUBE, CallFunc_K2_GetComponentLocation_ReturnValue1) == 0x000AB0, "Member 'CUBE_C_ExecuteUbergraph_CUBE::CallFunc_K2_GetComponentLocation_ReturnValue1' has a wrong offset!");
static_assert(offsetof(CUBE_C_ExecuteUbergraph_CUBE, CallFunc_BreakTransform_Location1) == 0x000ABC, "Member 'CUBE_C_ExecuteUbergraph_CUBE::CallFunc_BreakTransform_Location1' has a wrong offset!");
static_assert(offsetof(CUBE_C_ExecuteUbergraph_CUBE, CallFunc_BreakTransform_Rotation1) == 0x000AC8, "Member 'CUBE_C_ExecuteUbergraph_CUBE::CallFunc_BreakTransform_Rotation1' has a wrong offset!");
static_assert(offsetof(CUBE_C_ExecuteUbergraph_CUBE, CallFunc_BreakTransform_Scale1) == 0x000AD4, "Member 'CUBE_C_ExecuteUbergraph_CUBE::CallFunc_BreakTransform_Scale1' has a wrong offset!");
static_assert(offsetof(CUBE_C_ExecuteUbergraph_CUBE, CallFunc_K2_SetActorLocation_SweepHitResult) == 0x000AE0, "Member 'CUBE_C_ExecuteUbergraph_CUBE::CallFunc_K2_SetActorLocation_SweepHitResult' has a wrong offset!");
static_assert(offsetof(CUBE_C_ExecuteUbergraph_CUBE, CallFunc_K2_SetActorLocation_ReturnValue) == 0x000B68, "Member 'CUBE_C_ExecuteUbergraph_CUBE::CallFunc_K2_SetActorLocation_ReturnValue' has a wrong offset!");
static_assert(offsetof(CUBE_C_ExecuteUbergraph_CUBE, CallFunc_SpawnEmitterAtLocation_ReturnValue) == 0x000B70, "Member 'CUBE_C_ExecuteUbergraph_CUBE::CallFunc_SpawnEmitterAtLocation_ReturnValue' has a wrong offset!");
static_assert(offsetof(CUBE_C_ExecuteUbergraph_CUBE, CallFunc_SpawnEmitterAtLocation_ReturnValue1) == 0x000B78, "Member 'CUBE_C_ExecuteUbergraph_CUBE::CallFunc_SpawnEmitterAtLocation_ReturnValue1' has a wrong offset!");
static_assert(offsetof(CUBE_C_ExecuteUbergraph_CUBE, K2Node_CustomEvent_Trace_Distance) == 0x000B80, "Member 'CUBE_C_ExecuteUbergraph_CUBE::K2Node_CustomEvent_Trace_Distance' has a wrong offset!");
static_assert(offsetof(CUBE_C_ExecuteUbergraph_CUBE, CallFunc_Multiply_FloatFloat_ReturnValue) == 0x000B84, "Member 'CUBE_C_ExecuteUbergraph_CUBE::CallFunc_Multiply_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(CUBE_C_ExecuteUbergraph_CUBE, K2Node_CustomEvent_EventName10) == 0x000B88, "Member 'CUBE_C_ExecuteUbergraph_CUBE::K2Node_CustomEvent_EventName10' has a wrong offset!");
static_assert(offsetof(CUBE_C_ExecuteUbergraph_CUBE, K2Node_CustomEvent_TimeUntilEnd8) == 0x000B98, "Member 'CUBE_C_ExecuteUbergraph_CUBE::K2Node_CustomEvent_TimeUntilEnd8' has a wrong offset!");
static_assert(offsetof(CUBE_C_ExecuteUbergraph_CUBE, K2Node_CustomEvent_TimeSinceBegin8) == 0x000BA0, "Member 'CUBE_C_ExecuteUbergraph_CUBE::K2Node_CustomEvent_TimeSinceBegin8' has a wrong offset!");
static_assert(offsetof(CUBE_C_ExecuteUbergraph_CUBE, K2Node_CustomEvent_TimeSpanRatio8) == 0x000BA8, "Member 'CUBE_C_ExecuteUbergraph_CUBE::K2Node_CustomEvent_TimeSpanRatio8' has a wrong offset!");
static_assert(offsetof(CUBE_C_ExecuteUbergraph_CUBE, CallFunc_Multiply_VectorFloat_ReturnValue3) == 0x000BAC, "Member 'CUBE_C_ExecuteUbergraph_CUBE::CallFunc_Multiply_VectorFloat_ReturnValue3' has a wrong offset!");
static_assert(offsetof(CUBE_C_ExecuteUbergraph_CUBE, CallFunc_Add_VectorVector_ReturnValue1) == 0x000BB8, "Member 'CUBE_C_ExecuteUbergraph_CUBE::CallFunc_Add_VectorVector_ReturnValue1' has a wrong offset!");
static_assert(offsetof(CUBE_C_ExecuteUbergraph_CUBE, K2Node_Event_Damage) == 0x000BC4, "Member 'CUBE_C_ExecuteUbergraph_CUBE::K2Node_Event_Damage' has a wrong offset!");
static_assert(offsetof(CUBE_C_ExecuteUbergraph_CUBE, K2Node_Event_DamageTags) == 0x000BC8, "Member 'CUBE_C_ExecuteUbergraph_CUBE::K2Node_Event_DamageTags' has a wrong offset!");
static_assert(offsetof(CUBE_C_ExecuteUbergraph_CUBE, K2Node_Event_Momentum) == 0x000BE8, "Member 'CUBE_C_ExecuteUbergraph_CUBE::K2Node_Event_Momentum' has a wrong offset!");
static_assert(offsetof(CUBE_C_ExecuteUbergraph_CUBE, K2Node_Event_HitInfo) == 0x000BF4, "Member 'CUBE_C_ExecuteUbergraph_CUBE::K2Node_Event_HitInfo' has a wrong offset!");
static_assert(offsetof(CUBE_C_ExecuteUbergraph_CUBE, K2Node_Event_InstigatedBy) == 0x000C80, "Member 'CUBE_C_ExecuteUbergraph_CUBE::K2Node_Event_InstigatedBy' has a wrong offset!");
static_assert(offsetof(CUBE_C_ExecuteUbergraph_CUBE, K2Node_Event_DamageCauser) == 0x000C88, "Member 'CUBE_C_ExecuteUbergraph_CUBE::K2Node_Event_DamageCauser' has a wrong offset!");
static_assert(offsetof(CUBE_C_ExecuteUbergraph_CUBE, K2Node_Event_EffectContext) == 0x000C90, "Member 'CUBE_C_ExecuteUbergraph_CUBE::K2Node_Event_EffectContext' has a wrong offset!");
static_assert(offsetof(CUBE_C_ExecuteUbergraph_CUBE, CallFunc_BreakHitResult_bBlockingHit1) == 0x000CA8, "Member 'CUBE_C_ExecuteUbergraph_CUBE::CallFunc_BreakHitResult_bBlockingHit1' has a wrong offset!");
static_assert(offsetof(CUBE_C_ExecuteUbergraph_CUBE, CallFunc_BreakHitResult_bInitialOverlap1) == 0x000CA9, "Member 'CUBE_C_ExecuteUbergraph_CUBE::CallFunc_BreakHitResult_bInitialOverlap1' has a wrong offset!");
static_assert(offsetof(CUBE_C_ExecuteUbergraph_CUBE, CallFunc_BreakHitResult_Time1) == 0x000CAC, "Member 'CUBE_C_ExecuteUbergraph_CUBE::CallFunc_BreakHitResult_Time1' has a wrong offset!");
static_assert(offsetof(CUBE_C_ExecuteUbergraph_CUBE, CallFunc_BreakHitResult_Distance1) == 0x000CB0, "Member 'CUBE_C_ExecuteUbergraph_CUBE::CallFunc_BreakHitResult_Distance1' has a wrong offset!");
static_assert(offsetof(CUBE_C_ExecuteUbergraph_CUBE, CallFunc_BreakHitResult_Location1) == 0x000CB4, "Member 'CUBE_C_ExecuteUbergraph_CUBE::CallFunc_BreakHitResult_Location1' has a wrong offset!");
static_assert(offsetof(CUBE_C_ExecuteUbergraph_CUBE, CallFunc_BreakHitResult_ImpactPoint1) == 0x000CC0, "Member 'CUBE_C_ExecuteUbergraph_CUBE::CallFunc_BreakHitResult_ImpactPoint1' has a wrong offset!");
static_assert(offsetof(CUBE_C_ExecuteUbergraph_CUBE, CallFunc_BreakHitResult_Normal1) == 0x000CCC, "Member 'CUBE_C_ExecuteUbergraph_CUBE::CallFunc_BreakHitResult_Normal1' has a wrong offset!");
static_assert(offsetof(CUBE_C_ExecuteUbergraph_CUBE, CallFunc_BreakHitResult_ImpactNormal1) == 0x000CD8, "Member 'CUBE_C_ExecuteUbergraph_CUBE::CallFunc_BreakHitResult_ImpactNormal1' has a wrong offset!");
static_assert(offsetof(CUBE_C_ExecuteUbergraph_CUBE, CallFunc_BreakHitResult_PhysMat1) == 0x000CE8, "Member 'CUBE_C_ExecuteUbergraph_CUBE::CallFunc_BreakHitResult_PhysMat1' has a wrong offset!");
static_assert(offsetof(CUBE_C_ExecuteUbergraph_CUBE, CallFunc_BreakHitResult_HitActor1) == 0x000CF0, "Member 'CUBE_C_ExecuteUbergraph_CUBE::CallFunc_BreakHitResult_HitActor1' has a wrong offset!");
static_assert(offsetof(CUBE_C_ExecuteUbergraph_CUBE, CallFunc_BreakHitResult_HitComponent1) == 0x000CF8, "Member 'CUBE_C_ExecuteUbergraph_CUBE::CallFunc_BreakHitResult_HitComponent1' has a wrong offset!");
static_assert(offsetof(CUBE_C_ExecuteUbergraph_CUBE, CallFunc_BreakHitResult_HitBoneName1) == 0x000D00, "Member 'CUBE_C_ExecuteUbergraph_CUBE::CallFunc_BreakHitResult_HitBoneName1' has a wrong offset!");
static_assert(offsetof(CUBE_C_ExecuteUbergraph_CUBE, CallFunc_BreakHitResult_HitItem1) == 0x000D08, "Member 'CUBE_C_ExecuteUbergraph_CUBE::CallFunc_BreakHitResult_HitItem1' has a wrong offset!");
static_assert(offsetof(CUBE_C_ExecuteUbergraph_CUBE, CallFunc_BreakHitResult_FaceIndex1) == 0x000D0C, "Member 'CUBE_C_ExecuteUbergraph_CUBE::CallFunc_BreakHitResult_FaceIndex1' has a wrong offset!");
static_assert(offsetof(CUBE_C_ExecuteUbergraph_CUBE, CallFunc_BreakHitResult_TraceStart1) == 0x000D10, "Member 'CUBE_C_ExecuteUbergraph_CUBE::CallFunc_BreakHitResult_TraceStart1' has a wrong offset!");
static_assert(offsetof(CUBE_C_ExecuteUbergraph_CUBE, CallFunc_BreakHitResult_TraceEnd1) == 0x000D1C, "Member 'CUBE_C_ExecuteUbergraph_CUBE::CallFunc_BreakHitResult_TraceEnd1' has a wrong offset!");
static_assert(offsetof(CUBE_C_ExecuteUbergraph_CUBE, CallFunc_HasTag_ReturnValue1) == 0x000D28, "Member 'CUBE_C_ExecuteUbergraph_CUBE::CallFunc_HasTag_ReturnValue1' has a wrong offset!");
static_assert(offsetof(CUBE_C_ExecuteUbergraph_CUBE, CallFunc_Divide_FloatFloat_ReturnValue1) == 0x000D2C, "Member 'CUBE_C_ExecuteUbergraph_CUBE::CallFunc_Divide_FloatFloat_ReturnValue1' has a wrong offset!");
static_assert(offsetof(CUBE_C_ExecuteUbergraph_CUBE, CallFunc_Conv_BoolToFloat_ReturnValue) == 0x000D30, "Member 'CUBE_C_ExecuteUbergraph_CUBE::CallFunc_Conv_BoolToFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(CUBE_C_ExecuteUbergraph_CUBE, CallFunc_FClamp_ReturnValue) == 0x000D34, "Member 'CUBE_C_ExecuteUbergraph_CUBE::CallFunc_FClamp_ReturnValue' has a wrong offset!");
static_assert(offsetof(CUBE_C_ExecuteUbergraph_CUBE, Temp_bool_IsClosed_Variable) == 0x000D38, "Member 'CUBE_C_ExecuteUbergraph_CUBE::Temp_bool_IsClosed_Variable' has a wrong offset!");
static_assert(offsetof(CUBE_C_ExecuteUbergraph_CUBE, CallFunc_Add_FloatFloat_ReturnValue) == 0x000D3C, "Member 'CUBE_C_ExecuteUbergraph_CUBE::CallFunc_Add_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(CUBE_C_ExecuteUbergraph_CUBE, K2Node_CustomEvent_Actor) == 0x000D40, "Member 'CUBE_C_ExecuteUbergraph_CUBE::K2Node_CustomEvent_Actor' has a wrong offset!");
static_assert(offsetof(CUBE_C_ExecuteUbergraph_CUBE, K2Node_DynamicCast_AsPlayer_Pawn_Athena2) == 0x000D48, "Member 'CUBE_C_ExecuteUbergraph_CUBE::K2Node_DynamicCast_AsPlayer_Pawn_Athena2' has a wrong offset!");
static_assert(offsetof(CUBE_C_ExecuteUbergraph_CUBE, K2Node_DynamicCast_bSuccess6) == 0x000D50, "Member 'CUBE_C_ExecuteUbergraph_CUBE::K2Node_DynamicCast_bSuccess6' has a wrong offset!");
static_assert(offsetof(CUBE_C_ExecuteUbergraph_CUBE, K2Node_CustomEvent_Enabled) == 0x000D51, "Member 'CUBE_C_ExecuteUbergraph_CUBE::K2Node_CustomEvent_Enabled' has a wrong offset!");
static_assert(offsetof(CUBE_C_ExecuteUbergraph_CUBE, CallFunc_SpawnSoundAttached_ReturnValue4) == 0x000D58, "Member 'CUBE_C_ExecuteUbergraph_CUBE::CallFunc_SpawnSoundAttached_ReturnValue4' has a wrong offset!");
static_assert(offsetof(CUBE_C_ExecuteUbergraph_CUBE, K2Node_CreateDelegate_OutputDelegate11) == 0x000D60, "Member 'CUBE_C_ExecuteUbergraph_CUBE::K2Node_CreateDelegate_OutputDelegate11' has a wrong offset!");
static_assert(offsetof(CUBE_C_ExecuteUbergraph_CUBE, K2Node_CustomEvent_EventName1) == 0x000D70, "Member 'CUBE_C_ExecuteUbergraph_CUBE::K2Node_CustomEvent_EventName1' has a wrong offset!");
static_assert(offsetof(CUBE_C_ExecuteUbergraph_CUBE, K2Node_CustomEvent_EmitterTime1) == 0x000D78, "Member 'CUBE_C_ExecuteUbergraph_CUBE::K2Node_CustomEvent_EmitterTime1' has a wrong offset!");
static_assert(offsetof(CUBE_C_ExecuteUbergraph_CUBE, K2Node_CustomEvent_Location1) == 0x000D7C, "Member 'CUBE_C_ExecuteUbergraph_CUBE::K2Node_CustomEvent_Location1' has a wrong offset!");
static_assert(offsetof(CUBE_C_ExecuteUbergraph_CUBE, K2Node_CustomEvent_Velocity1) == 0x000D88, "Member 'CUBE_C_ExecuteUbergraph_CUBE::K2Node_CustomEvent_Velocity1' has a wrong offset!");
static_assert(offsetof(CUBE_C_ExecuteUbergraph_CUBE, CallFunc_K2_GetComponentLocation_ReturnValue2) == 0x000D94, "Member 'CUBE_C_ExecuteUbergraph_CUBE::CallFunc_K2_GetComponentLocation_ReturnValue2' has a wrong offset!");
static_assert(offsetof(CUBE_C_ExecuteUbergraph_CUBE, CallFunc_EqualEqual_NameName_ReturnValue) == 0x000DA0, "Member 'CUBE_C_ExecuteUbergraph_CUBE::CallFunc_EqualEqual_NameName_ReturnValue' has a wrong offset!");
static_assert(offsetof(CUBE_C_ExecuteUbergraph_CUBE, K2Node_CreateDelegate_OutputDelegate12) == 0x000DA4, "Member 'CUBE_C_ExecuteUbergraph_CUBE::K2Node_CreateDelegate_OutputDelegate12' has a wrong offset!");
static_assert(offsetof(CUBE_C_ExecuteUbergraph_CUBE, CallFunc_SpawnSoundAtLocation_ReturnValue) == 0x000DB8, "Member 'CUBE_C_ExecuteUbergraph_CUBE::CallFunc_SpawnSoundAtLocation_ReturnValue' has a wrong offset!");
static_assert(offsetof(CUBE_C_ExecuteUbergraph_CUBE, CallFunc_SpawnSoundAtLocation_ReturnValue1) == 0x000DC0, "Member 'CUBE_C_ExecuteUbergraph_CUBE::CallFunc_SpawnSoundAtLocation_ReturnValue1' has a wrong offset!");
static_assert(offsetof(CUBE_C_ExecuteUbergraph_CUBE, K2Node_CreateDelegate_OutputDelegate13) == 0x000DC8, "Member 'CUBE_C_ExecuteUbergraph_CUBE::K2Node_CreateDelegate_OutputDelegate13' has a wrong offset!");
static_assert(offsetof(CUBE_C_ExecuteUbergraph_CUBE, CallFunc_GetGameMode_ReturnValue) == 0x000DD8, "Member 'CUBE_C_ExecuteUbergraph_CUBE::CallFunc_GetGameMode_ReturnValue' has a wrong offset!");
static_assert(offsetof(CUBE_C_ExecuteUbergraph_CUBE, K2Node_DynamicCast_AsFort_Game_Mode_Zone) == 0x000DE0, "Member 'CUBE_C_ExecuteUbergraph_CUBE::K2Node_DynamicCast_AsFort_Game_Mode_Zone' has a wrong offset!");
static_assert(offsetof(CUBE_C_ExecuteUbergraph_CUBE, K2Node_DynamicCast_bSuccess7) == 0x000DE8, "Member 'CUBE_C_ExecuteUbergraph_CUBE::K2Node_DynamicCast_bSuccess7' has a wrong offset!");
static_assert(offsetof(CUBE_C_ExecuteUbergraph_CUBE, CallFunc_HasAuthority_ReturnValue1) == 0x000DE9, "Member 'CUBE_C_ExecuteUbergraph_CUBE::CallFunc_HasAuthority_ReturnValue1' has a wrong offset!");
static_assert(offsetof(CUBE_C_ExecuteUbergraph_CUBE, CallFunc_IsValid_ReturnValue6) == 0x000DEA, "Member 'CUBE_C_ExecuteUbergraph_CUBE::CallFunc_IsValid_ReturnValue6' has a wrong offset!");
static_assert(offsetof(CUBE_C_ExecuteUbergraph_CUBE, CallFunc_Divide_FloatFloat_ReturnValue2) == 0x000DEC, "Member 'CUBE_C_ExecuteUbergraph_CUBE::CallFunc_Divide_FloatFloat_ReturnValue2' has a wrong offset!");
static_assert(offsetof(CUBE_C_ExecuteUbergraph_CUBE, CallFunc_Multiply_FloatFloat_ReturnValue1) == 0x000DF0, "Member 'CUBE_C_ExecuteUbergraph_CUBE::CallFunc_Multiply_FloatFloat_ReturnValue1' has a wrong offset!");
static_assert(offsetof(CUBE_C_ExecuteUbergraph_CUBE, CallFunc_Array_Get_Item5) == 0x000E00, "Member 'CUBE_C_ExecuteUbergraph_CUBE::CallFunc_Array_Get_Item5' has a wrong offset!");
static_assert(offsetof(CUBE_C_ExecuteUbergraph_CUBE, CallFunc_Array_Get_Item6) == 0x000E40, "Member 'CUBE_C_ExecuteUbergraph_CUBE::CallFunc_Array_Get_Item6' has a wrong offset!");
static_assert(offsetof(CUBE_C_ExecuteUbergraph_CUBE, CallFunc_MakeRelativeTransform_ReturnValue) == 0x000E80, "Member 'CUBE_C_ExecuteUbergraph_CUBE::CallFunc_MakeRelativeTransform_ReturnValue' has a wrong offset!");
static_assert(offsetof(CUBE_C_ExecuteUbergraph_CUBE, CallFunc_Contains_ReturnValue) == 0x000EB0, "Member 'CUBE_C_ExecuteUbergraph_CUBE::CallFunc_Contains_ReturnValue' has a wrong offset!");
static_assert(offsetof(CUBE_C_ExecuteUbergraph_CUBE, CallFunc_BreakTransform_Location2) == 0x000EB4, "Member 'CUBE_C_ExecuteUbergraph_CUBE::CallFunc_BreakTransform_Location2' has a wrong offset!");
static_assert(offsetof(CUBE_C_ExecuteUbergraph_CUBE, CallFunc_BreakTransform_Rotation2) == 0x000EC0, "Member 'CUBE_C_ExecuteUbergraph_CUBE::CallFunc_BreakTransform_Rotation2' has a wrong offset!");
static_assert(offsetof(CUBE_C_ExecuteUbergraph_CUBE, CallFunc_BreakTransform_Scale2) == 0x000ECC, "Member 'CUBE_C_ExecuteUbergraph_CUBE::CallFunc_BreakTransform_Scale2' has a wrong offset!");
static_assert(offsetof(CUBE_C_ExecuteUbergraph_CUBE, CallFunc_BreakRotator_Roll) == 0x000ED8, "Member 'CUBE_C_ExecuteUbergraph_CUBE::CallFunc_BreakRotator_Roll' has a wrong offset!");
static_assert(offsetof(CUBE_C_ExecuteUbergraph_CUBE, CallFunc_BreakRotator_Pitch) == 0x000EDC, "Member 'CUBE_C_ExecuteUbergraph_CUBE::CallFunc_BreakRotator_Pitch' has a wrong offset!");
static_assert(offsetof(CUBE_C_ExecuteUbergraph_CUBE, CallFunc_BreakRotator_Yaw) == 0x000EE0, "Member 'CUBE_C_ExecuteUbergraph_CUBE::CallFunc_BreakRotator_Yaw' has a wrong offset!");
static_assert(offsetof(CUBE_C_ExecuteUbergraph_CUBE, CallFunc_Abs_ReturnValue) == 0x000EE4, "Member 'CUBE_C_ExecuteUbergraph_CUBE::CallFunc_Abs_ReturnValue' has a wrong offset!");
static_assert(offsetof(CUBE_C_ExecuteUbergraph_CUBE, CallFunc_SignOfFloat_ReturnValue) == 0x000EE8, "Member 'CUBE_C_ExecuteUbergraph_CUBE::CallFunc_SignOfFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(CUBE_C_ExecuteUbergraph_CUBE, CallFunc_Abs_ReturnValue1) == 0x000EEC, "Member 'CUBE_C_ExecuteUbergraph_CUBE::CallFunc_Abs_ReturnValue1' has a wrong offset!");
static_assert(offsetof(CUBE_C_ExecuteUbergraph_CUBE, CallFunc_Multiply_FloatFloat_ReturnValue2) == 0x000EF0, "Member 'CUBE_C_ExecuteUbergraph_CUBE::CallFunc_Multiply_FloatFloat_ReturnValue2' has a wrong offset!");
static_assert(offsetof(CUBE_C_ExecuteUbergraph_CUBE, CallFunc_SignOfFloat_ReturnValue1) == 0x000EF4, "Member 'CUBE_C_ExecuteUbergraph_CUBE::CallFunc_SignOfFloat_ReturnValue1' has a wrong offset!");
static_assert(offsetof(CUBE_C_ExecuteUbergraph_CUBE, CallFunc_Multiply_FloatFloat_ReturnValue3) == 0x000EF8, "Member 'CUBE_C_ExecuteUbergraph_CUBE::CallFunc_Multiply_FloatFloat_ReturnValue3' has a wrong offset!");
static_assert(offsetof(CUBE_C_ExecuteUbergraph_CUBE, CallFunc_Multiply_FloatFloat_ReturnValue4) == 0x000EFC, "Member 'CUBE_C_ExecuteUbergraph_CUBE::CallFunc_Multiply_FloatFloat_ReturnValue4' has a wrong offset!");
static_assert(offsetof(CUBE_C_ExecuteUbergraph_CUBE, CallFunc_MakeRotator_ReturnValue) == 0x000F00, "Member 'CUBE_C_ExecuteUbergraph_CUBE::CallFunc_MakeRotator_ReturnValue' has a wrong offset!");
static_assert(offsetof(CUBE_C_ExecuteUbergraph_CUBE, CallFunc_Multiply_FloatFloat_ReturnValue5) == 0x000F0C, "Member 'CUBE_C_ExecuteUbergraph_CUBE::CallFunc_Multiply_FloatFloat_ReturnValue5' has a wrong offset!");
static_assert(offsetof(CUBE_C_ExecuteUbergraph_CUBE, CallFunc_MakeTransform_ReturnValue1) == 0x000F10, "Member 'CUBE_C_ExecuteUbergraph_CUBE::CallFunc_MakeTransform_ReturnValue1' has a wrong offset!");
static_assert(offsetof(CUBE_C_ExecuteUbergraph_CUBE, CallFunc_MakeRotator_ReturnValue1) == 0x000F40, "Member 'CUBE_C_ExecuteUbergraph_CUBE::CallFunc_MakeRotator_ReturnValue1' has a wrong offset!");
static_assert(offsetof(CUBE_C_ExecuteUbergraph_CUBE, CallFunc_ComposeTransforms_ReturnValue1) == 0x000F50, "Member 'CUBE_C_ExecuteUbergraph_CUBE::CallFunc_ComposeTransforms_ReturnValue1' has a wrong offset!");
static_assert(offsetof(CUBE_C_ExecuteUbergraph_CUBE, CallFunc_MakeTransform_ReturnValue2) == 0x000F80, "Member 'CUBE_C_ExecuteUbergraph_CUBE::CallFunc_MakeTransform_ReturnValue2' has a wrong offset!");
static_assert(offsetof(CUBE_C_ExecuteUbergraph_CUBE, CallFunc_ComposeTransforms_ReturnValue2) == 0x000FB0, "Member 'CUBE_C_ExecuteUbergraph_CUBE::CallFunc_ComposeTransforms_ReturnValue2' has a wrong offset!");
static_assert(offsetof(CUBE_C_ExecuteUbergraph_CUBE, CallFunc_Greater_FloatFloat_ReturnValue) == 0x000FE0, "Member 'CUBE_C_ExecuteUbergraph_CUBE::CallFunc_Greater_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(CUBE_C_ExecuteUbergraph_CUBE, CallFunc_Greater_FloatFloat_ReturnValue1) == 0x000FE1, "Member 'CUBE_C_ExecuteUbergraph_CUBE::CallFunc_Greater_FloatFloat_ReturnValue1' has a wrong offset!");
static_assert(offsetof(CUBE_C_ExecuteUbergraph_CUBE, CallFunc_Abs_ReturnValue2) == 0x000FE4, "Member 'CUBE_C_ExecuteUbergraph_CUBE::CallFunc_Abs_ReturnValue2' has a wrong offset!");
static_assert(offsetof(CUBE_C_ExecuteUbergraph_CUBE, CallFunc_SignOfFloat_ReturnValue2) == 0x000FE8, "Member 'CUBE_C_ExecuteUbergraph_CUBE::CallFunc_SignOfFloat_ReturnValue2' has a wrong offset!");
static_assert(offsetof(CUBE_C_ExecuteUbergraph_CUBE, CallFunc_Multiply_FloatFloat_ReturnValue6) == 0x000FEC, "Member 'CUBE_C_ExecuteUbergraph_CUBE::CallFunc_Multiply_FloatFloat_ReturnValue6' has a wrong offset!");
static_assert(offsetof(CUBE_C_ExecuteUbergraph_CUBE, CallFunc_Greater_FloatFloat_ReturnValue2) == 0x000FF0, "Member 'CUBE_C_ExecuteUbergraph_CUBE::CallFunc_Greater_FloatFloat_ReturnValue2' has a wrong offset!");
static_assert(offsetof(CUBE_C_ExecuteUbergraph_CUBE, CallFunc_Multiply_FloatFloat_ReturnValue7) == 0x000FF4, "Member 'CUBE_C_ExecuteUbergraph_CUBE::CallFunc_Multiply_FloatFloat_ReturnValue7' has a wrong offset!");
static_assert(offsetof(CUBE_C_ExecuteUbergraph_CUBE, CallFunc_BooleanAND_ReturnValue) == 0x000FF8, "Member 'CUBE_C_ExecuteUbergraph_CUBE::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");
static_assert(offsetof(CUBE_C_ExecuteUbergraph_CUBE, CallFunc_MakeRotator_ReturnValue2) == 0x000FFC, "Member 'CUBE_C_ExecuteUbergraph_CUBE::CallFunc_MakeRotator_ReturnValue2' has a wrong offset!");
static_assert(offsetof(CUBE_C_ExecuteUbergraph_CUBE, CallFunc_MakeTransform_ReturnValue3) == 0x001010, "Member 'CUBE_C_ExecuteUbergraph_CUBE::CallFunc_MakeTransform_ReturnValue3' has a wrong offset!");
static_assert(offsetof(CUBE_C_ExecuteUbergraph_CUBE, CallFunc_Greater_FloatFloat_ReturnValue3) == 0x001040, "Member 'CUBE_C_ExecuteUbergraph_CUBE::CallFunc_Greater_FloatFloat_ReturnValue3' has a wrong offset!");
static_assert(offsetof(CUBE_C_ExecuteUbergraph_CUBE, CallFunc_ComposeTransforms_ReturnValue3) == 0x001050, "Member 'CUBE_C_ExecuteUbergraph_CUBE::CallFunc_ComposeTransforms_ReturnValue3' has a wrong offset!");
static_assert(offsetof(CUBE_C_ExecuteUbergraph_CUBE, CallFunc_BooleanAND_ReturnValue1) == 0x001080, "Member 'CUBE_C_ExecuteUbergraph_CUBE::CallFunc_BooleanAND_ReturnValue1' has a wrong offset!");
static_assert(offsetof(CUBE_C_ExecuteUbergraph_CUBE, CallFunc_Greater_FloatFloat_ReturnValue4) == 0x001081, "Member 'CUBE_C_ExecuteUbergraph_CUBE::CallFunc_Greater_FloatFloat_ReturnValue4' has a wrong offset!");
static_assert(offsetof(CUBE_C_ExecuteUbergraph_CUBE, CallFunc_Greater_FloatFloat_ReturnValue5) == 0x001082, "Member 'CUBE_C_ExecuteUbergraph_CUBE::CallFunc_Greater_FloatFloat_ReturnValue5' has a wrong offset!");
static_assert(offsetof(CUBE_C_ExecuteUbergraph_CUBE, CallFunc_BooleanAND_ReturnValue2) == 0x001083, "Member 'CUBE_C_ExecuteUbergraph_CUBE::CallFunc_BooleanAND_ReturnValue2' has a wrong offset!");
static_assert(offsetof(CUBE_C_ExecuteUbergraph_CUBE, CallFunc_CalculateNextMove_NextIndex1) == 0x001084, "Member 'CUBE_C_ExecuteUbergraph_CUBE::CallFunc_CalculateNextMove_NextIndex1' has a wrong offset!");
static_assert(offsetof(CUBE_C_ExecuteUbergraph_CUBE, CallFunc_CalculateNextMove_SecondsTillMove1) == 0x001088, "Member 'CUBE_C_ExecuteUbergraph_CUBE::CallFunc_CalculateNextMove_SecondsTillMove1' has a wrong offset!");
static_assert(offsetof(CUBE_C_ExecuteUbergraph_CUBE, CallFunc_FMax_ReturnValue) == 0x00108C, "Member 'CUBE_C_ExecuteUbergraph_CUBE::CallFunc_FMax_ReturnValue' has a wrong offset!");
static_assert(offsetof(CUBE_C_ExecuteUbergraph_CUBE, CallFunc_Less_FloatFloat_ReturnValue1) == 0x001090, "Member 'CUBE_C_ExecuteUbergraph_CUBE::CallFunc_Less_FloatFloat_ReturnValue1' has a wrong offset!");
static_assert(offsetof(CUBE_C_ExecuteUbergraph_CUBE, K2Node_MakeStruct_CubeStruct) == 0x0010A0, "Member 'CUBE_C_ExecuteUbergraph_CUBE::K2Node_MakeStruct_CubeStruct' has a wrong offset!");
static_assert(offsetof(CUBE_C_ExecuteUbergraph_CUBE, CallFunc_Array_LastIndex_ReturnValue3) == 0x0010E0, "Member 'CUBE_C_ExecuteUbergraph_CUBE::CallFunc_Array_LastIndex_ReturnValue3' has a wrong offset!");
static_assert(offsetof(CUBE_C_ExecuteUbergraph_CUBE, CallFunc_LessEqual_IntInt_ReturnValue) == 0x0010E4, "Member 'CUBE_C_ExecuteUbergraph_CUBE::CallFunc_LessEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(CUBE_C_ExecuteUbergraph_CUBE, Temp_bool_Variable1) == 0x0010E5, "Member 'CUBE_C_ExecuteUbergraph_CUBE::Temp_bool_Variable1' has a wrong offset!");
static_assert(offsetof(CUBE_C_ExecuteUbergraph_CUBE, CallFunc_Array_Contains_ReturnValue1) == 0x0010E6, "Member 'CUBE_C_ExecuteUbergraph_CUBE::CallFunc_Array_Contains_ReturnValue1' has a wrong offset!");
static_assert(offsetof(CUBE_C_ExecuteUbergraph_CUBE, K2Node_CustomEvent_EventName) == 0x0010E8, "Member 'CUBE_C_ExecuteUbergraph_CUBE::K2Node_CustomEvent_EventName' has a wrong offset!");
static_assert(offsetof(CUBE_C_ExecuteUbergraph_CUBE, K2Node_CustomEvent_EmitterTime) == 0x0010F0, "Member 'CUBE_C_ExecuteUbergraph_CUBE::K2Node_CustomEvent_EmitterTime' has a wrong offset!");
static_assert(offsetof(CUBE_C_ExecuteUbergraph_CUBE, K2Node_CustomEvent_Location) == 0x0010F4, "Member 'CUBE_C_ExecuteUbergraph_CUBE::K2Node_CustomEvent_Location' has a wrong offset!");
static_assert(offsetof(CUBE_C_ExecuteUbergraph_CUBE, K2Node_CustomEvent_Velocity) == 0x001100, "Member 'CUBE_C_ExecuteUbergraph_CUBE::K2Node_CustomEvent_Velocity' has a wrong offset!");
static_assert(offsetof(CUBE_C_ExecuteUbergraph_CUBE, CallFunc_EqualEqual_NameName_ReturnValue1) == 0x00110C, "Member 'CUBE_C_ExecuteUbergraph_CUBE::CallFunc_EqualEqual_NameName_ReturnValue1' has a wrong offset!");
static_assert(offsetof(CUBE_C_ExecuteUbergraph_CUBE, CallFunc_Array_Length_ReturnValue1) == 0x001110, "Member 'CUBE_C_ExecuteUbergraph_CUBE::CallFunc_Array_Length_ReturnValue1' has a wrong offset!");
static_assert(offsetof(CUBE_C_ExecuteUbergraph_CUBE, CallFunc_Array_LastIndex_ReturnValue4) == 0x001114, "Member 'CUBE_C_ExecuteUbergraph_CUBE::CallFunc_Array_LastIndex_ReturnValue4' has a wrong offset!");
static_assert(offsetof(CUBE_C_ExecuteUbergraph_CUBE, CallFunc_Conv_IntToFloat_ReturnValue) == 0x001118, "Member 'CUBE_C_ExecuteUbergraph_CUBE::CallFunc_Conv_IntToFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(CUBE_C_ExecuteUbergraph_CUBE, CallFunc_Divide_FloatFloat_ReturnValue3) == 0x00111C, "Member 'CUBE_C_ExecuteUbergraph_CUBE::CallFunc_Divide_FloatFloat_ReturnValue3' has a wrong offset!");
static_assert(offsetof(CUBE_C_ExecuteUbergraph_CUBE, CallFunc_Array_Length_ReturnValue2) == 0x001120, "Member 'CUBE_C_ExecuteUbergraph_CUBE::CallFunc_Array_Length_ReturnValue2' has a wrong offset!");
static_assert(offsetof(CUBE_C_ExecuteUbergraph_CUBE, K2Node_CreateDelegate_OutputDelegate14) == 0x001124, "Member 'CUBE_C_ExecuteUbergraph_CUBE::K2Node_CreateDelegate_OutputDelegate14' has a wrong offset!");
static_assert(offsetof(CUBE_C_ExecuteUbergraph_CUBE, CallFunc_Greater_IntInt_ReturnValue) == 0x001134, "Member 'CUBE_C_ExecuteUbergraph_CUBE::CallFunc_Greater_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(CUBE_C_ExecuteUbergraph_CUBE, CallFunc_K2_SetTimerDelegate_ReturnValue3) == 0x001138, "Member 'CUBE_C_ExecuteUbergraph_CUBE::CallFunc_K2_SetTimerDelegate_ReturnValue3' has a wrong offset!");
static_assert(offsetof(CUBE_C_ExecuteUbergraph_CUBE, CallFunc_IsLakeSplash_ReturnValue) == 0x001140, "Member 'CUBE_C_ExecuteUbergraph_CUBE::CallFunc_IsLakeSplash_ReturnValue' has a wrong offset!");
static_assert(offsetof(CUBE_C_ExecuteUbergraph_CUBE, CallFunc_IsLakeSplash_ReturnValue1) == 0x001141, "Member 'CUBE_C_ExecuteUbergraph_CUBE::CallFunc_IsLakeSplash_ReturnValue1' has a wrong offset!");
static_assert(offsetof(CUBE_C_ExecuteUbergraph_CUBE, Temp_bool_Has_Been_Initd_Variable) == 0x001142, "Member 'CUBE_C_ExecuteUbergraph_CUBE::Temp_bool_Has_Been_Initd_Variable' has a wrong offset!");
static_assert(offsetof(CUBE_C_ExecuteUbergraph_CUBE, CallFunc_K2_SetWorldTransform_SweepHitResult1) == 0x001144, "Member 'CUBE_C_ExecuteUbergraph_CUBE::CallFunc_K2_SetWorldTransform_SweepHitResult1' has a wrong offset!");
static_assert(offsetof(CUBE_C_ExecuteUbergraph_CUBE, K2Node_CustomEvent_NewParam1) == 0x0011CC, "Member 'CUBE_C_ExecuteUbergraph_CUBE::K2Node_CustomEvent_NewParam1' has a wrong offset!");
static_assert(offsetof(CUBE_C_ExecuteUbergraph_CUBE, CallFunc_K2_GetComponentLocation_ReturnValue3) == 0x0011D0, "Member 'CUBE_C_ExecuteUbergraph_CUBE::CallFunc_K2_GetComponentLocation_ReturnValue3' has a wrong offset!");
static_assert(offsetof(CUBE_C_ExecuteUbergraph_CUBE, CallFunc_GetTimeOfDayManagerFromContext_ReturnValue) == 0x0011E0, "Member 'CUBE_C_ExecuteUbergraph_CUBE::CallFunc_GetTimeOfDayManagerFromContext_ReturnValue' has a wrong offset!");
static_assert(offsetof(CUBE_C_ExecuteUbergraph_CUBE, CallFunc_EqualEqual_IntInt_ReturnValue) == 0x0011E8, "Member 'CUBE_C_ExecuteUbergraph_CUBE::CallFunc_EqualEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(CUBE_C_ExecuteUbergraph_CUBE, CallFunc_EqualEqual_IntInt_ReturnValue1) == 0x0011E9, "Member 'CUBE_C_ExecuteUbergraph_CUBE::CallFunc_EqualEqual_IntInt_ReturnValue1' has a wrong offset!");
static_assert(offsetof(CUBE_C_ExecuteUbergraph_CUBE, CallFunc_BooleanOR_ReturnValue) == 0x0011EA, "Member 'CUBE_C_ExecuteUbergraph_CUBE::CallFunc_BooleanOR_ReturnValue' has a wrong offset!");
static_assert(offsetof(CUBE_C_ExecuteUbergraph_CUBE, Temp_bool_IsClosed_Variable1) == 0x0011EB, "Member 'CUBE_C_ExecuteUbergraph_CUBE::Temp_bool_IsClosed_Variable1' has a wrong offset!");
static_assert(offsetof(CUBE_C_ExecuteUbergraph_CUBE, Temp_bool_Variable2) == 0x0011EC, "Member 'CUBE_C_ExecuteUbergraph_CUBE::Temp_bool_Variable2' has a wrong offset!");
static_assert(offsetof(CUBE_C_ExecuteUbergraph_CUBE, CallFunc_IsLakeSplash_ReturnValue2) == 0x0011ED, "Member 'CUBE_C_ExecuteUbergraph_CUBE::CallFunc_IsLakeSplash_ReturnValue2' has a wrong offset!");
static_assert(offsetof(CUBE_C_ExecuteUbergraph_CUBE, K2Node_CreateDelegate_OutputDelegate15) == 0x0011F0, "Member 'CUBE_C_ExecuteUbergraph_CUBE::K2Node_CreateDelegate_OutputDelegate15' has a wrong offset!");
static_assert(offsetof(CUBE_C_ExecuteUbergraph_CUBE, CallFunc_K2_SetTimerDelegate_ReturnValue4) == 0x001200, "Member 'CUBE_C_ExecuteUbergraph_CUBE::CallFunc_K2_SetTimerDelegate_ReturnValue4' has a wrong offset!");
static_assert(offsetof(CUBE_C_ExecuteUbergraph_CUBE, CallFunc_SpawnSoundAttached_ReturnValue5) == 0x001208, "Member 'CUBE_C_ExecuteUbergraph_CUBE::CallFunc_SpawnSoundAttached_ReturnValue5' has a wrong offset!");
static_assert(offsetof(CUBE_C_ExecuteUbergraph_CUBE, CallFunc_Conv_VectorToLinearColor_ReturnValue) == 0x001210, "Member 'CUBE_C_ExecuteUbergraph_CUBE::CallFunc_Conv_VectorToLinearColor_ReturnValue' has a wrong offset!");
static_assert(offsetof(CUBE_C_ExecuteUbergraph_CUBE, CallFunc_EqualEqual_IntInt_ReturnValue2) == 0x001220, "Member 'CUBE_C_ExecuteUbergraph_CUBE::CallFunc_EqualEqual_IntInt_ReturnValue2' has a wrong offset!");
static_assert(offsetof(CUBE_C_ExecuteUbergraph_CUBE, CallFunc_EqualEqual_IntInt_ReturnValue3) == 0x001221, "Member 'CUBE_C_ExecuteUbergraph_CUBE::CallFunc_EqualEqual_IntInt_ReturnValue3' has a wrong offset!");
static_assert(offsetof(CUBE_C_ExecuteUbergraph_CUBE, CallFunc_BooleanOR_ReturnValue1) == 0x001222, "Member 'CUBE_C_ExecuteUbergraph_CUBE::CallFunc_BooleanOR_ReturnValue1' has a wrong offset!");
static_assert(offsetof(CUBE_C_ExecuteUbergraph_CUBE, CallFunc_SpawnSoundAttached_ReturnValue6) == 0x001228, "Member 'CUBE_C_ExecuteUbergraph_CUBE::CallFunc_SpawnSoundAttached_ReturnValue6' has a wrong offset!");
static_assert(offsetof(CUBE_C_ExecuteUbergraph_CUBE, CallFunc_HasAuthority_ReturnValue2) == 0x001230, "Member 'CUBE_C_ExecuteUbergraph_CUBE::CallFunc_HasAuthority_ReturnValue2' has a wrong offset!");
static_assert(offsetof(CUBE_C_ExecuteUbergraph_CUBE, CallFunc_K2_IsTimerActiveHandle_ReturnValue) == 0x001231, "Member 'CUBE_C_ExecuteUbergraph_CUBE::CallFunc_K2_IsTimerActiveHandle_ReturnValue' has a wrong offset!");
static_assert(offsetof(CUBE_C_ExecuteUbergraph_CUBE, CallFunc_Array_Get_Item7) == 0x001240, "Member 'CUBE_C_ExecuteUbergraph_CUBE::CallFunc_Array_Get_Item7' has a wrong offset!");
static_assert(offsetof(CUBE_C_ExecuteUbergraph_CUBE, K2Node_CreateDelegate_OutputDelegate16) == 0x001280, "Member 'CUBE_C_ExecuteUbergraph_CUBE::K2Node_CreateDelegate_OutputDelegate16' has a wrong offset!");
static_assert(offsetof(CUBE_C_ExecuteUbergraph_CUBE, CallFunc_K2_SetTimerDelegate_ReturnValue5) == 0x001290, "Member 'CUBE_C_ExecuteUbergraph_CUBE::CallFunc_K2_SetTimerDelegate_ReturnValue5' has a wrong offset!");
static_assert(offsetof(CUBE_C_ExecuteUbergraph_CUBE, CallFunc_Add_FloatFloat_ReturnValue1) == 0x001298, "Member 'CUBE_C_ExecuteUbergraph_CUBE::CallFunc_Add_FloatFloat_ReturnValue1' has a wrong offset!");
static_assert(offsetof(CUBE_C_ExecuteUbergraph_CUBE, CallFunc_Divide_FloatFloat_ReturnValue4) == 0x00129C, "Member 'CUBE_C_ExecuteUbergraph_CUBE::CallFunc_Divide_FloatFloat_ReturnValue4' has a wrong offset!");
static_assert(offsetof(CUBE_C_ExecuteUbergraph_CUBE, CallFunc_Multiply_FloatFloat_ReturnValue8) == 0x0012A0, "Member 'CUBE_C_ExecuteUbergraph_CUBE::CallFunc_Multiply_FloatFloat_ReturnValue8' has a wrong offset!");
static_assert(offsetof(CUBE_C_ExecuteUbergraph_CUBE, CallFunc_FClamp_ReturnValue1) == 0x0012A4, "Member 'CUBE_C_ExecuteUbergraph_CUBE::CallFunc_FClamp_ReturnValue1' has a wrong offset!");
static_assert(offsetof(CUBE_C_ExecuteUbergraph_CUBE, CallFunc_Subtract_FloatFloat_ReturnValue3) == 0x0012A8, "Member 'CUBE_C_ExecuteUbergraph_CUBE::CallFunc_Subtract_FloatFloat_ReturnValue3' has a wrong offset!");
static_assert(offsetof(CUBE_C_ExecuteUbergraph_CUBE, CallFunc_FClamp_ReturnValue2) == 0x0012AC, "Member 'CUBE_C_ExecuteUbergraph_CUBE::CallFunc_FClamp_ReturnValue2' has a wrong offset!");
static_assert(offsetof(CUBE_C_ExecuteUbergraph_CUBE, CallFunc_IsDedicatedServer_ReturnValue1) == 0x0012B0, "Member 'CUBE_C_ExecuteUbergraph_CUBE::CallFunc_IsDedicatedServer_ReturnValue1' has a wrong offset!");
static_assert(offsetof(CUBE_C_ExecuteUbergraph_CUBE, CallFunc_TLerp_ReturnValue) == 0x0012C0, "Member 'CUBE_C_ExecuteUbergraph_CUBE::CallFunc_TLerp_ReturnValue' has a wrong offset!");
static_assert(offsetof(CUBE_C_ExecuteUbergraph_CUBE, CallFunc_TLerp_ReturnValue1) == 0x0012F0, "Member 'CUBE_C_ExecuteUbergraph_CUBE::CallFunc_TLerp_ReturnValue1' has a wrong offset!");
static_assert(offsetof(CUBE_C_ExecuteUbergraph_CUBE, CallFunc_Add_IntInt_ReturnValue6) == 0x001320, "Member 'CUBE_C_ExecuteUbergraph_CUBE::CallFunc_Add_IntInt_ReturnValue6' has a wrong offset!");
static_assert(offsetof(CUBE_C_ExecuteUbergraph_CUBE, CallFunc_Array_Get_Item8) == 0x001330, "Member 'CUBE_C_ExecuteUbergraph_CUBE::CallFunc_Array_Get_Item8' has a wrong offset!");
static_assert(offsetof(CUBE_C_ExecuteUbergraph_CUBE, K2Node_Select1_Default) == 0x001370, "Member 'CUBE_C_ExecuteUbergraph_CUBE::K2Node_Select1_Default' has a wrong offset!");
static_assert(offsetof(CUBE_C_ExecuteUbergraph_CUBE, CallFunc_Conv_ByteToString_ReturnValue) == 0x001378, "Member 'CUBE_C_ExecuteUbergraph_CUBE::CallFunc_Conv_ByteToString_ReturnValue' has a wrong offset!");
static_assert(offsetof(CUBE_C_ExecuteUbergraph_CUBE, CallFunc_BreakTransform_Location3) == 0x001388, "Member 'CUBE_C_ExecuteUbergraph_CUBE::CallFunc_BreakTransform_Location3' has a wrong offset!");
static_assert(offsetof(CUBE_C_ExecuteUbergraph_CUBE, CallFunc_BreakTransform_Rotation3) == 0x001394, "Member 'CUBE_C_ExecuteUbergraph_CUBE::CallFunc_BreakTransform_Rotation3' has a wrong offset!");
static_assert(offsetof(CUBE_C_ExecuteUbergraph_CUBE, CallFunc_BreakTransform_Scale3) == 0x0013A0, "Member 'CUBE_C_ExecuteUbergraph_CUBE::CallFunc_BreakTransform_Scale3' has a wrong offset!");
static_assert(offsetof(CUBE_C_ExecuteUbergraph_CUBE, CallFunc_Conv_StringToName_ReturnValue) == 0x0013AC, "Member 'CUBE_C_ExecuteUbergraph_CUBE::CallFunc_Conv_StringToName_ReturnValue' has a wrong offset!");
static_assert(offsetof(CUBE_C_ExecuteUbergraph_CUBE, CallFunc_GetSocketRotation_ReturnValue) == 0x0013B4, "Member 'CUBE_C_ExecuteUbergraph_CUBE::CallFunc_GetSocketRotation_ReturnValue' has a wrong offset!");
static_assert(offsetof(CUBE_C_ExecuteUbergraph_CUBE, CallFunc_GetForwardVector_ReturnValue) == 0x0013C0, "Member 'CUBE_C_ExecuteUbergraph_CUBE::CallFunc_GetForwardVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(CUBE_C_ExecuteUbergraph_CUBE, CallFunc_GetSocketLocation_ReturnValue) == 0x0013CC, "Member 'CUBE_C_ExecuteUbergraph_CUBE::CallFunc_GetSocketLocation_ReturnValue' has a wrong offset!");
static_assert(offsetof(CUBE_C_ExecuteUbergraph_CUBE, CallFunc_Multiply_VectorFloat_ReturnValue4) == 0x0013D8, "Member 'CUBE_C_ExecuteUbergraph_CUBE::CallFunc_Multiply_VectorFloat_ReturnValue4' has a wrong offset!");
static_assert(offsetof(CUBE_C_ExecuteUbergraph_CUBE, CallFunc_BreakTransform_Location4) == 0x0013E4, "Member 'CUBE_C_ExecuteUbergraph_CUBE::CallFunc_BreakTransform_Location4' has a wrong offset!");
static_assert(offsetof(CUBE_C_ExecuteUbergraph_CUBE, CallFunc_BreakTransform_Rotation4) == 0x0013F0, "Member 'CUBE_C_ExecuteUbergraph_CUBE::CallFunc_BreakTransform_Rotation4' has a wrong offset!");
static_assert(offsetof(CUBE_C_ExecuteUbergraph_CUBE, CallFunc_BreakTransform_Scale4) == 0x0013FC, "Member 'CUBE_C_ExecuteUbergraph_CUBE::CallFunc_BreakTransform_Scale4' has a wrong offset!");
static_assert(offsetof(CUBE_C_ExecuteUbergraph_CUBE, CallFunc_BreakTransform_Location5) == 0x001408, "Member 'CUBE_C_ExecuteUbergraph_CUBE::CallFunc_BreakTransform_Location5' has a wrong offset!");
static_assert(offsetof(CUBE_C_ExecuteUbergraph_CUBE, CallFunc_BreakTransform_Rotation5) == 0x001414, "Member 'CUBE_C_ExecuteUbergraph_CUBE::CallFunc_BreakTransform_Rotation5' has a wrong offset!");
static_assert(offsetof(CUBE_C_ExecuteUbergraph_CUBE, CallFunc_BreakTransform_Scale5) == 0x001420, "Member 'CUBE_C_ExecuteUbergraph_CUBE::CallFunc_BreakTransform_Scale5' has a wrong offset!");
static_assert(offsetof(CUBE_C_ExecuteUbergraph_CUBE, K2Node_Select2_Default) == 0x00142C, "Member 'CUBE_C_ExecuteUbergraph_CUBE::K2Node_Select2_Default' has a wrong offset!");
static_assert(offsetof(CUBE_C_ExecuteUbergraph_CUBE, Temp_int_Variable1) == 0x001438, "Member 'CUBE_C_ExecuteUbergraph_CUBE::Temp_int_Variable1' has a wrong offset!");
static_assert(offsetof(CUBE_C_ExecuteUbergraph_CUBE, CallFunc_Subtract_VectorVector_ReturnValue1) == 0x00143C, "Member 'CUBE_C_ExecuteUbergraph_CUBE::CallFunc_Subtract_VectorVector_ReturnValue1' has a wrong offset!");
static_assert(offsetof(CUBE_C_ExecuteUbergraph_CUBE, CallFunc_MakeRotFromZX_ReturnValue) == 0x001448, "Member 'CUBE_C_ExecuteUbergraph_CUBE::CallFunc_MakeRotFromZX_ReturnValue' has a wrong offset!");
static_assert(offsetof(CUBE_C_ExecuteUbergraph_CUBE, Temp_object_Variable) == 0x001458, "Member 'CUBE_C_ExecuteUbergraph_CUBE::Temp_object_Variable' has a wrong offset!");
static_assert(offsetof(CUBE_C_ExecuteUbergraph_CUBE, CallFunc_TLerp_ReturnValue2) == 0x001460, "Member 'CUBE_C_ExecuteUbergraph_CUBE::CallFunc_TLerp_ReturnValue2' has a wrong offset!");
static_assert(offsetof(CUBE_C_ExecuteUbergraph_CUBE, Temp_bool_Has_Been_Initd_Variable1) == 0x001490, "Member 'CUBE_C_ExecuteUbergraph_CUBE::Temp_bool_Has_Been_Initd_Variable1' has a wrong offset!");
static_assert(offsetof(CUBE_C_ExecuteUbergraph_CUBE, K2Node_CustomEvent_NewParam) == 0x001494, "Member 'CUBE_C_ExecuteUbergraph_CUBE::K2Node_CustomEvent_NewParam' has a wrong offset!");
static_assert(offsetof(CUBE_C_ExecuteUbergraph_CUBE, CallFunc_EqualEqual_IntInt_ReturnValue4) == 0x001498, "Member 'CUBE_C_ExecuteUbergraph_CUBE::CallFunc_EqualEqual_IntInt_ReturnValue4' has a wrong offset!");
static_assert(offsetof(CUBE_C_ExecuteUbergraph_CUBE, CallFunc_EqualEqual_IntInt_ReturnValue5) == 0x001499, "Member 'CUBE_C_ExecuteUbergraph_CUBE::CallFunc_EqualEqual_IntInt_ReturnValue5' has a wrong offset!");
static_assert(offsetof(CUBE_C_ExecuteUbergraph_CUBE, Temp_bool_Variable3) == 0x00149A, "Member 'CUBE_C_ExecuteUbergraph_CUBE::Temp_bool_Variable3' has a wrong offset!");
static_assert(offsetof(CUBE_C_ExecuteUbergraph_CUBE, CallFunc_Array_LastIndex_ReturnValue5) == 0x00149C, "Member 'CUBE_C_ExecuteUbergraph_CUBE::CallFunc_Array_LastIndex_ReturnValue5' has a wrong offset!");
static_assert(offsetof(CUBE_C_ExecuteUbergraph_CUBE, CallFunc_Subtract_IntInt_ReturnValue1) == 0x0014A0, "Member 'CUBE_C_ExecuteUbergraph_CUBE::CallFunc_Subtract_IntInt_ReturnValue1' has a wrong offset!");
static_assert(offsetof(CUBE_C_ExecuteUbergraph_CUBE, K2Node_Select3_Default) == 0x0014A8, "Member 'CUBE_C_ExecuteUbergraph_CUBE::K2Node_Select3_Default' has a wrong offset!");
static_assert(offsetof(CUBE_C_ExecuteUbergraph_CUBE, CallFunc_EqualEqual_IntInt_ReturnValue6) == 0x0014B0, "Member 'CUBE_C_ExecuteUbergraph_CUBE::CallFunc_EqualEqual_IntInt_ReturnValue6' has a wrong offset!");
static_assert(offsetof(CUBE_C_ExecuteUbergraph_CUBE, CallFunc_SpawnEmitterAtLocation_ReturnValue2) == 0x0014B8, "Member 'CUBE_C_ExecuteUbergraph_CUBE::CallFunc_SpawnEmitterAtLocation_ReturnValue2' has a wrong offset!");
static_assert(offsetof(CUBE_C_ExecuteUbergraph_CUBE, CallFunc_EqualEqual_IntInt_ReturnValue7) == 0x0014C0, "Member 'CUBE_C_ExecuteUbergraph_CUBE::CallFunc_EqualEqual_IntInt_ReturnValue7' has a wrong offset!");
static_assert(offsetof(CUBE_C_ExecuteUbergraph_CUBE, CallFunc_BooleanOR_ReturnValue2) == 0x0014C1, "Member 'CUBE_C_ExecuteUbergraph_CUBE::CallFunc_BooleanOR_ReturnValue2' has a wrong offset!");
static_assert(offsetof(CUBE_C_ExecuteUbergraph_CUBE, CallFunc_EqualEqual_IntInt_ReturnValue8) == 0x0014C2, "Member 'CUBE_C_ExecuteUbergraph_CUBE::CallFunc_EqualEqual_IntInt_ReturnValue8' has a wrong offset!");
static_assert(offsetof(CUBE_C_ExecuteUbergraph_CUBE, CallFunc_K2_GetTimerRemainingTimeHandle_ReturnValue) == 0x0014C4, "Member 'CUBE_C_ExecuteUbergraph_CUBE::CallFunc_K2_GetTimerRemainingTimeHandle_ReturnValue' has a wrong offset!");
static_assert(offsetof(CUBE_C_ExecuteUbergraph_CUBE, CallFunc_Greater_FloatFloat_ReturnValue6) == 0x0014C8, "Member 'CUBE_C_ExecuteUbergraph_CUBE::CallFunc_Greater_FloatFloat_ReturnValue6' has a wrong offset!");
static_assert(offsetof(CUBE_C_ExecuteUbergraph_CUBE, CallFunc_EqualEqual_IntInt_ReturnValue9) == 0x0014C9, "Member 'CUBE_C_ExecuteUbergraph_CUBE::CallFunc_EqualEqual_IntInt_ReturnValue9' has a wrong offset!");
static_assert(offsetof(CUBE_C_ExecuteUbergraph_CUBE, Temp_bool_IsClosed_Variable2) == 0x0014CA, "Member 'CUBE_C_ExecuteUbergraph_CUBE::Temp_bool_IsClosed_Variable2' has a wrong offset!");
static_assert(offsetof(CUBE_C_ExecuteUbergraph_CUBE, Temp_int_Array_Index_Variable1) == 0x0014CC, "Member 'CUBE_C_ExecuteUbergraph_CUBE::Temp_int_Array_Index_Variable1' has a wrong offset!");
static_assert(offsetof(CUBE_C_ExecuteUbergraph_CUBE, CallFunc_DoFindDownFace_FaceIndex) == 0x0014D0, "Member 'CUBE_C_ExecuteUbergraph_CUBE::CallFunc_DoFindDownFace_FaceIndex' has a wrong offset!");
static_assert(offsetof(CUBE_C_ExecuteUbergraph_CUBE, CallFunc_Conv_IntToByte_ReturnValue1) == 0x0014D4, "Member 'CUBE_C_ExecuteUbergraph_CUBE::CallFunc_Conv_IntToByte_ReturnValue1' has a wrong offset!");
static_assert(offsetof(CUBE_C_ExecuteUbergraph_CUBE, K2Node_CreateDelegate_OutputDelegate17) == 0x0014D8, "Member 'CUBE_C_ExecuteUbergraph_CUBE::K2Node_CreateDelegate_OutputDelegate17' has a wrong offset!");
static_assert(offsetof(CUBE_C_ExecuteUbergraph_CUBE, CallFunc_K2_SetTimerDelegate_ReturnValue6) == 0x0014E8, "Member 'CUBE_C_ExecuteUbergraph_CUBE::CallFunc_K2_SetTimerDelegate_ReturnValue6' has a wrong offset!");
static_assert(offsetof(CUBE_C_ExecuteUbergraph_CUBE, CallFunc_Conv_VectorToLinearColor_ReturnValue1) == 0x0014F0, "Member 'CUBE_C_ExecuteUbergraph_CUBE::CallFunc_Conv_VectorToLinearColor_ReturnValue1' has a wrong offset!");
static_assert(offsetof(CUBE_C_ExecuteUbergraph_CUBE, CallFunc_TLerp_ReturnValue3) == 0x001500, "Member 'CUBE_C_ExecuteUbergraph_CUBE::CallFunc_TLerp_ReturnValue3' has a wrong offset!");
static_assert(offsetof(CUBE_C_ExecuteUbergraph_CUBE, CallFunc_Right_ReturnValue) == 0x001530, "Member 'CUBE_C_ExecuteUbergraph_CUBE::CallFunc_Right_ReturnValue' has a wrong offset!");
static_assert(offsetof(CUBE_C_ExecuteUbergraph_CUBE, CallFunc_Conv_StringToInt_ReturnValue) == 0x001540, "Member 'CUBE_C_ExecuteUbergraph_CUBE::CallFunc_Conv_StringToInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(CUBE_C_ExecuteUbergraph_CUBE, CallFunc_Contains_ReturnValue1) == 0x001544, "Member 'CUBE_C_ExecuteUbergraph_CUBE::CallFunc_Contains_ReturnValue1' has a wrong offset!");
static_assert(offsetof(CUBE_C_ExecuteUbergraph_CUBE, CallFunc_Right_ReturnValue1) == 0x001548, "Member 'CUBE_C_ExecuteUbergraph_CUBE::CallFunc_Right_ReturnValue1' has a wrong offset!");
static_assert(offsetof(CUBE_C_ExecuteUbergraph_CUBE, K2Node_CreateDelegate_OutputDelegate18) == 0x001558, "Member 'CUBE_C_ExecuteUbergraph_CUBE::K2Node_CreateDelegate_OutputDelegate18' has a wrong offset!");
static_assert(offsetof(CUBE_C_ExecuteUbergraph_CUBE, CallFunc_Conv_StringToInt_ReturnValue1) == 0x001568, "Member 'CUBE_C_ExecuteUbergraph_CUBE::CallFunc_Conv_StringToInt_ReturnValue1' has a wrong offset!");
static_assert(offsetof(CUBE_C_ExecuteUbergraph_CUBE, CallFunc_Subtract_IntInt_ReturnValue2) == 0x00156C, "Member 'CUBE_C_ExecuteUbergraph_CUBE::CallFunc_Subtract_IntInt_ReturnValue2' has a wrong offset!");
static_assert(offsetof(CUBE_C_ExecuteUbergraph_CUBE, Temp_int_Variable2) == 0x001570, "Member 'CUBE_C_ExecuteUbergraph_CUBE::Temp_int_Variable2' has a wrong offset!");
static_assert(offsetof(CUBE_C_ExecuteUbergraph_CUBE, CallFunc_Array_Get_Item9) == 0x001574, "Member 'CUBE_C_ExecuteUbergraph_CUBE::CallFunc_Array_Get_Item9' has a wrong offset!");
static_assert(offsetof(CUBE_C_ExecuteUbergraph_CUBE, K2Node_CreateDelegate_OutputDelegate19) == 0x001578, "Member 'CUBE_C_ExecuteUbergraph_CUBE::K2Node_CreateDelegate_OutputDelegate19' has a wrong offset!");
static_assert(offsetof(CUBE_C_ExecuteUbergraph_CUBE, CallFunc_K2_SetTimerDelegate_ReturnValue7) == 0x001588, "Member 'CUBE_C_ExecuteUbergraph_CUBE::CallFunc_K2_SetTimerDelegate_ReturnValue7' has a wrong offset!");
static_assert(offsetof(CUBE_C_ExecuteUbergraph_CUBE, CallFunc_Array_Length_ReturnValue3) == 0x001590, "Member 'CUBE_C_ExecuteUbergraph_CUBE::CallFunc_Array_Length_ReturnValue3' has a wrong offset!");
static_assert(offsetof(CUBE_C_ExecuteUbergraph_CUBE, Temp_bool_Variable4) == 0x001594, "Member 'CUBE_C_ExecuteUbergraph_CUBE::Temp_bool_Variable4' has a wrong offset!");
static_assert(offsetof(CUBE_C_ExecuteUbergraph_CUBE, K2Node_CreateDelegate_OutputDelegate20) == 0x001598, "Member 'CUBE_C_ExecuteUbergraph_CUBE::K2Node_CreateDelegate_OutputDelegate20' has a wrong offset!");
static_assert(offsetof(CUBE_C_ExecuteUbergraph_CUBE, K2Node_Select4_Default) == 0x0015A8, "Member 'CUBE_C_ExecuteUbergraph_CUBE::K2Node_Select4_Default' has a wrong offset!");
static_assert(offsetof(CUBE_C_ExecuteUbergraph_CUBE, CallFunc_Add_IntInt_ReturnValue7) == 0x0015AC, "Member 'CUBE_C_ExecuteUbergraph_CUBE::CallFunc_Add_IntInt_ReturnValue7' has a wrong offset!");
static_assert(offsetof(CUBE_C_ExecuteUbergraph_CUBE, CallFunc_Divide_FloatFloat_ReturnValue5) == 0x0015B0, "Member 'CUBE_C_ExecuteUbergraph_CUBE::CallFunc_Divide_FloatFloat_ReturnValue5' has a wrong offset!");
static_assert(offsetof(CUBE_C_ExecuteUbergraph_CUBE, CallFunc_Multiply_FloatFloat_ReturnValue9) == 0x0015B4, "Member 'CUBE_C_ExecuteUbergraph_CUBE::CallFunc_Multiply_FloatFloat_ReturnValue9' has a wrong offset!");
static_assert(offsetof(CUBE_C_ExecuteUbergraph_CUBE, CallFunc_Subtract_FloatFloat_ReturnValue4) == 0x0015B8, "Member 'CUBE_C_ExecuteUbergraph_CUBE::CallFunc_Subtract_FloatFloat_ReturnValue4' has a wrong offset!");
static_assert(offsetof(CUBE_C_ExecuteUbergraph_CUBE, CallFunc_Subtract_FloatFloat_ReturnValue5) == 0x0015BC, "Member 'CUBE_C_ExecuteUbergraph_CUBE::CallFunc_Subtract_FloatFloat_ReturnValue5' has a wrong offset!");
static_assert(offsetof(CUBE_C_ExecuteUbergraph_CUBE, CallFunc_K2_SetTimerDelegate_ReturnValue8) == 0x0015C0, "Member 'CUBE_C_ExecuteUbergraph_CUBE::CallFunc_K2_SetTimerDelegate_ReturnValue8' has a wrong offset!");
static_assert(offsetof(CUBE_C_ExecuteUbergraph_CUBE, CallFunc_NotEqual_FloatFloat_ReturnValue) == 0x0015C8, "Member 'CUBE_C_ExecuteUbergraph_CUBE::CallFunc_NotEqual_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(CUBE_C_ExecuteUbergraph_CUBE, CallFunc_GetTransform_ReturnValue2) == 0x0015D0, "Member 'CUBE_C_ExecuteUbergraph_CUBE::CallFunc_GetTransform_ReturnValue2' has a wrong offset!");
static_assert(offsetof(CUBE_C_ExecuteUbergraph_CUBE, CallFunc_Subtract_IntInt_ReturnValue3) == 0x001600, "Member 'CUBE_C_ExecuteUbergraph_CUBE::CallFunc_Subtract_IntInt_ReturnValue3' has a wrong offset!");
static_assert(offsetof(CUBE_C_ExecuteUbergraph_CUBE, CallFunc_ComposeTransforms_ReturnValue4) == 0x001610, "Member 'CUBE_C_ExecuteUbergraph_CUBE::CallFunc_ComposeTransforms_ReturnValue4' has a wrong offset!");
static_assert(offsetof(CUBE_C_ExecuteUbergraph_CUBE, CallFunc_Array_Get_Item10) == 0x001640, "Member 'CUBE_C_ExecuteUbergraph_CUBE::CallFunc_Array_Get_Item10' has a wrong offset!");
static_assert(offsetof(CUBE_C_ExecuteUbergraph_CUBE, CallFunc_Add_IntInt_ReturnValue8) == 0x001680, "Member 'CUBE_C_ExecuteUbergraph_CUBE::CallFunc_Add_IntInt_ReturnValue8' has a wrong offset!");
static_assert(offsetof(CUBE_C_ExecuteUbergraph_CUBE, CallFunc_GetTransform_ReturnValue3) == 0x001690, "Member 'CUBE_C_ExecuteUbergraph_CUBE::CallFunc_GetTransform_ReturnValue3' has a wrong offset!");
static_assert(offsetof(CUBE_C_ExecuteUbergraph_CUBE, CallFunc_Array_Get_Item11) == 0x0016C0, "Member 'CUBE_C_ExecuteUbergraph_CUBE::CallFunc_Array_Get_Item11' has a wrong offset!");
static_assert(offsetof(CUBE_C_ExecuteUbergraph_CUBE, CallFunc_ComposeTransforms_ReturnValue5) == 0x001700, "Member 'CUBE_C_ExecuteUbergraph_CUBE::CallFunc_ComposeTransforms_ReturnValue5' has a wrong offset!");
static_assert(offsetof(CUBE_C_ExecuteUbergraph_CUBE, CallFunc_Array_LastIndex_ReturnValue6) == 0x001730, "Member 'CUBE_C_ExecuteUbergraph_CUBE::CallFunc_Array_LastIndex_ReturnValue6' has a wrong offset!");
static_assert(offsetof(CUBE_C_ExecuteUbergraph_CUBE, CallFunc_Subtract_IntInt_ReturnValue4) == 0x001734, "Member 'CUBE_C_ExecuteUbergraph_CUBE::CallFunc_Subtract_IntInt_ReturnValue4' has a wrong offset!");
static_assert(offsetof(CUBE_C_ExecuteUbergraph_CUBE, CallFunc_EqualEqual_IntInt_ReturnValue10) == 0x001738, "Member 'CUBE_C_ExecuteUbergraph_CUBE::CallFunc_EqualEqual_IntInt_ReturnValue10' has a wrong offset!");
static_assert(offsetof(CUBE_C_ExecuteUbergraph_CUBE, CallFunc_GetValueAtLevel_ReturnValue) == 0x00173C, "Member 'CUBE_C_ExecuteUbergraph_CUBE::CallFunc_GetValueAtLevel_ReturnValue' has a wrong offset!");
static_assert(offsetof(CUBE_C_ExecuteUbergraph_CUBE, CallFunc_Greater_FloatFloat_ReturnValue7) == 0x001740, "Member 'CUBE_C_ExecuteUbergraph_CUBE::CallFunc_Greater_FloatFloat_ReturnValue7' has a wrong offset!");
static_assert(offsetof(CUBE_C_ExecuteUbergraph_CUBE, Temp_int_Loop_Counter_Variable1) == 0x001744, "Member 'CUBE_C_ExecuteUbergraph_CUBE::Temp_int_Loop_Counter_Variable1' has a wrong offset!");
static_assert(offsetof(CUBE_C_ExecuteUbergraph_CUBE, CallFunc_Add_FloatFloat_ReturnValue2) == 0x001748, "Member 'CUBE_C_ExecuteUbergraph_CUBE::CallFunc_Add_FloatFloat_ReturnValue2' has a wrong offset!");
static_assert(offsetof(CUBE_C_ExecuteUbergraph_CUBE, CallFunc_Less_IntInt_ReturnValue) == 0x00174C, "Member 'CUBE_C_ExecuteUbergraph_CUBE::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(CUBE_C_ExecuteUbergraph_CUBE, CallFunc_Add_IntInt_ReturnValue9) == 0x001750, "Member 'CUBE_C_ExecuteUbergraph_CUBE::CallFunc_Add_IntInt_ReturnValue9' has a wrong offset!");
static_assert(offsetof(CUBE_C_ExecuteUbergraph_CUBE, Temp_object_Variable1) == 0x001758, "Member 'CUBE_C_ExecuteUbergraph_CUBE::Temp_object_Variable1' has a wrong offset!");
static_assert(offsetof(CUBE_C_ExecuteUbergraph_CUBE, CallFunc_LineTraceSingle_OutHit) == 0x001768, "Member 'CUBE_C_ExecuteUbergraph_CUBE::CallFunc_LineTraceSingle_OutHit' has a wrong offset!");
static_assert(offsetof(CUBE_C_ExecuteUbergraph_CUBE, CallFunc_LineTraceSingle_ReturnValue) == 0x0017F0, "Member 'CUBE_C_ExecuteUbergraph_CUBE::CallFunc_LineTraceSingle_ReturnValue' has a wrong offset!");
static_assert(offsetof(CUBE_C_ExecuteUbergraph_CUBE, CallFunc_EqualEqual_ObjectObject_ReturnValue) == 0x0017F1, "Member 'CUBE_C_ExecuteUbergraph_CUBE::CallFunc_EqualEqual_ObjectObject_ReturnValue' has a wrong offset!");
static_assert(offsetof(CUBE_C_ExecuteUbergraph_CUBE, CallFunc_HasAuthority_ReturnValue3) == 0x0017F2, "Member 'CUBE_C_ExecuteUbergraph_CUBE::CallFunc_HasAuthority_ReturnValue3' has a wrong offset!");
static_assert(offsetof(CUBE_C_ExecuteUbergraph_CUBE, Temp_bool_Has_Been_Initd_Variable2) == 0x0017F3, "Member 'CUBE_C_ExecuteUbergraph_CUBE::Temp_bool_Has_Been_Initd_Variable2' has a wrong offset!");
static_assert(offsetof(CUBE_C_ExecuteUbergraph_CUBE, CallFunc_Array_Get_Item12) == 0x0017F8, "Member 'CUBE_C_ExecuteUbergraph_CUBE::CallFunc_Array_Get_Item12' has a wrong offset!");
static_assert(offsetof(CUBE_C_ExecuteUbergraph_CUBE, CallFunc_IsValid_ReturnValue7) == 0x001800, "Member 'CUBE_C_ExecuteUbergraph_CUBE::CallFunc_IsValid_ReturnValue7' has a wrong offset!");
static_assert(offsetof(CUBE_C_ExecuteUbergraph_CUBE, CallFunc_Map_Find_Value) == 0x001810, "Member 'CUBE_C_ExecuteUbergraph_CUBE::CallFunc_Map_Find_Value' has a wrong offset!");
static_assert(offsetof(CUBE_C_ExecuteUbergraph_CUBE, CallFunc_Map_Find_ReturnValue) == 0x001840, "Member 'CUBE_C_ExecuteUbergraph_CUBE::CallFunc_Map_Find_ReturnValue' has a wrong offset!");
static_assert(offsetof(CUBE_C_ExecuteUbergraph_CUBE, CallFunc_Map_Contains_ReturnValue) == 0x001841, "Member 'CUBE_C_ExecuteUbergraph_CUBE::CallFunc_Map_Contains_ReturnValue' has a wrong offset!");
static_assert(offsetof(CUBE_C_ExecuteUbergraph_CUBE, CallFunc_GetTransform_ReturnValue4) == 0x001850, "Member 'CUBE_C_ExecuteUbergraph_CUBE::CallFunc_GetTransform_ReturnValue4' has a wrong offset!");
static_assert(offsetof(CUBE_C_ExecuteUbergraph_CUBE, CallFunc_Array_Get_Item13) == 0x001880, "Member 'CUBE_C_ExecuteUbergraph_CUBE::CallFunc_Array_Get_Item13' has a wrong offset!");
static_assert(offsetof(CUBE_C_ExecuteUbergraph_CUBE, CallFunc_Array_Length_ReturnValue4) == 0x001884, "Member 'CUBE_C_ExecuteUbergraph_CUBE::CallFunc_Array_Length_ReturnValue4' has a wrong offset!");
static_assert(offsetof(CUBE_C_ExecuteUbergraph_CUBE, CallFunc_Array_Get_Item14) == 0x001890, "Member 'CUBE_C_ExecuteUbergraph_CUBE::CallFunc_Array_Get_Item14' has a wrong offset!");
static_assert(offsetof(CUBE_C_ExecuteUbergraph_CUBE, CallFunc_Less_IntInt_ReturnValue1) == 0x0018D0, "Member 'CUBE_C_ExecuteUbergraph_CUBE::CallFunc_Less_IntInt_ReturnValue1' has a wrong offset!");
static_assert(offsetof(CUBE_C_ExecuteUbergraph_CUBE, CallFunc_ComposeTransforms_ReturnValue6) == 0x0018E0, "Member 'CUBE_C_ExecuteUbergraph_CUBE::CallFunc_ComposeTransforms_ReturnValue6' has a wrong offset!");
static_assert(offsetof(CUBE_C_ExecuteUbergraph_CUBE, CallFunc_Greater_IntInt_ReturnValue1) == 0x001910, "Member 'CUBE_C_ExecuteUbergraph_CUBE::CallFunc_Greater_IntInt_ReturnValue1' has a wrong offset!");
static_assert(offsetof(CUBE_C_ExecuteUbergraph_CUBE, CallFunc_BreakTransform_Location6) == 0x001914, "Member 'CUBE_C_ExecuteUbergraph_CUBE::CallFunc_BreakTransform_Location6' has a wrong offset!");
static_assert(offsetof(CUBE_C_ExecuteUbergraph_CUBE, CallFunc_BreakTransform_Rotation6) == 0x001920, "Member 'CUBE_C_ExecuteUbergraph_CUBE::CallFunc_BreakTransform_Rotation6' has a wrong offset!");
static_assert(offsetof(CUBE_C_ExecuteUbergraph_CUBE, CallFunc_BreakTransform_Scale6) == 0x00192C, "Member 'CUBE_C_ExecuteUbergraph_CUBE::CallFunc_BreakTransform_Scale6' has a wrong offset!");
static_assert(offsetof(CUBE_C_ExecuteUbergraph_CUBE, CallFunc_MakeTransform_ReturnValue4) == 0x001940, "Member 'CUBE_C_ExecuteUbergraph_CUBE::CallFunc_MakeTransform_ReturnValue4' has a wrong offset!");
static_assert(offsetof(CUBE_C_ExecuteUbergraph_CUBE, CallFunc_BeginDeferredActorSpawnFromClass_ReturnValue1) == 0x001970, "Member 'CUBE_C_ExecuteUbergraph_CUBE::CallFunc_BeginDeferredActorSpawnFromClass_ReturnValue1' has a wrong offset!");
static_assert(offsetof(CUBE_C_ExecuteUbergraph_CUBE, CallFunc_FinishSpawningActor_ReturnValue1) == 0x001978, "Member 'CUBE_C_ExecuteUbergraph_CUBE::CallFunc_FinishSpawningActor_ReturnValue1' has a wrong offset!");
static_assert(offsetof(CUBE_C_ExecuteUbergraph_CUBE, CallFunc_EqualEqual_ByteByte_ReturnValue) == 0x001980, "Member 'CUBE_C_ExecuteUbergraph_CUBE::CallFunc_EqualEqual_ByteByte_ReturnValue' has a wrong offset!");
static_assert(offsetof(CUBE_C_ExecuteUbergraph_CUBE, CallFunc_Array_Get_Item15) == 0x001990, "Member 'CUBE_C_ExecuteUbergraph_CUBE::CallFunc_Array_Get_Item15' has a wrong offset!");
static_assert(offsetof(CUBE_C_ExecuteUbergraph_CUBE, CallFunc_K2_SetWorldTransform_SweepHitResult2) == 0x0019D0, "Member 'CUBE_C_ExecuteUbergraph_CUBE::CallFunc_K2_SetWorldTransform_SweepHitResult2' has a wrong offset!");
static_assert(offsetof(CUBE_C_ExecuteUbergraph_CUBE, Temp_int_Array_Index_Variable2) == 0x001A58, "Member 'CUBE_C_ExecuteUbergraph_CUBE::Temp_int_Array_Index_Variable2' has a wrong offset!");
static_assert(offsetof(CUBE_C_ExecuteUbergraph_CUBE, CallFunc_Array_Get_Item16) == 0x001A60, "Member 'CUBE_C_ExecuteUbergraph_CUBE::CallFunc_Array_Get_Item16' has a wrong offset!");
static_assert(offsetof(CUBE_C_ExecuteUbergraph_CUBE, CallFunc_Conv_ByteToString_ReturnValue1) == 0x001A70, "Member 'CUBE_C_ExecuteUbergraph_CUBE::CallFunc_Conv_ByteToString_ReturnValue1' has a wrong offset!");
static_assert(offsetof(CUBE_C_ExecuteUbergraph_CUBE, CallFunc_WatchCalendarEvent_ReturnValue2) == 0x001A80, "Member 'CUBE_C_ExecuteUbergraph_CUBE::CallFunc_WatchCalendarEvent_ReturnValue2' has a wrong offset!");
static_assert(offsetof(CUBE_C_ExecuteUbergraph_CUBE, CallFunc_Conv_StringToName_ReturnValue1) == 0x001A88, "Member 'CUBE_C_ExecuteUbergraph_CUBE::CallFunc_Conv_StringToName_ReturnValue1' has a wrong offset!");
static_assert(offsetof(CUBE_C_ExecuteUbergraph_CUBE, CallFunc_GetSocketTransform_ReturnValue) == 0x001A90, "Member 'CUBE_C_ExecuteUbergraph_CUBE::CallFunc_GetSocketTransform_ReturnValue' has a wrong offset!");
static_assert(offsetof(CUBE_C_ExecuteUbergraph_CUBE, CallFunc_MakeRelativeTransform_ReturnValue1) == 0x001AC0, "Member 'CUBE_C_ExecuteUbergraph_CUBE::CallFunc_MakeRelativeTransform_ReturnValue1' has a wrong offset!");
static_assert(offsetof(CUBE_C_ExecuteUbergraph_CUBE, CallFunc_BreakTransform_Location7) == 0x001AF0, "Member 'CUBE_C_ExecuteUbergraph_CUBE::CallFunc_BreakTransform_Location7' has a wrong offset!");
static_assert(offsetof(CUBE_C_ExecuteUbergraph_CUBE, CallFunc_BreakTransform_Rotation7) == 0x001AFC, "Member 'CUBE_C_ExecuteUbergraph_CUBE::CallFunc_BreakTransform_Rotation7' has a wrong offset!");
static_assert(offsetof(CUBE_C_ExecuteUbergraph_CUBE, CallFunc_BreakTransform_Scale7) == 0x001B08, "Member 'CUBE_C_ExecuteUbergraph_CUBE::CallFunc_BreakTransform_Scale7' has a wrong offset!");
static_assert(offsetof(CUBE_C_ExecuteUbergraph_CUBE, CallFunc_BreakVector_X2) == 0x001B14, "Member 'CUBE_C_ExecuteUbergraph_CUBE::CallFunc_BreakVector_X2' has a wrong offset!");
static_assert(offsetof(CUBE_C_ExecuteUbergraph_CUBE, CallFunc_BreakVector_Y2) == 0x001B18, "Member 'CUBE_C_ExecuteUbergraph_CUBE::CallFunc_BreakVector_Y2' has a wrong offset!");
static_assert(offsetof(CUBE_C_ExecuteUbergraph_CUBE, CallFunc_BreakVector_Z2) == 0x001B1C, "Member 'CUBE_C_ExecuteUbergraph_CUBE::CallFunc_BreakVector_Z2' has a wrong offset!");
static_assert(offsetof(CUBE_C_ExecuteUbergraph_CUBE, CallFunc_IsValid_ReturnValue8) == 0x001B20, "Member 'CUBE_C_ExecuteUbergraph_CUBE::CallFunc_IsValid_ReturnValue8' has a wrong offset!");
static_assert(offsetof(CUBE_C_ExecuteUbergraph_CUBE, CallFunc_Less_FloatFloat_ReturnValue2) == 0x001B21, "Member 'CUBE_C_ExecuteUbergraph_CUBE::CallFunc_Less_FloatFloat_ReturnValue2' has a wrong offset!");
static_assert(offsetof(CUBE_C_ExecuteUbergraph_CUBE, CallFunc_HasAuthority_ReturnValue4) == 0x001B22, "Member 'CUBE_C_ExecuteUbergraph_CUBE::CallFunc_HasAuthority_ReturnValue4' has a wrong offset!");
static_assert(offsetof(CUBE_C_ExecuteUbergraph_CUBE, Temp_int_Loop_Counter_Variable2) == 0x001B24, "Member 'CUBE_C_ExecuteUbergraph_CUBE::Temp_int_Loop_Counter_Variable2' has a wrong offset!");
static_assert(offsetof(CUBE_C_ExecuteUbergraph_CUBE, CallFunc_Less_IntInt_ReturnValue2) == 0x001B28, "Member 'CUBE_C_ExecuteUbergraph_CUBE::CallFunc_Less_IntInt_ReturnValue2' has a wrong offset!");
static_assert(offsetof(CUBE_C_ExecuteUbergraph_CUBE, CallFunc_Add_IntInt_ReturnValue10) == 0x001B2C, "Member 'CUBE_C_ExecuteUbergraph_CUBE::CallFunc_Add_IntInt_ReturnValue10' has a wrong offset!");
static_assert(offsetof(CUBE_C_ExecuteUbergraph_CUBE, CallFunc_IsDedicatedServer_ReturnValue2) == 0x001B30, "Member 'CUBE_C_ExecuteUbergraph_CUBE::CallFunc_IsDedicatedServer_ReturnValue2' has a wrong offset!");
static_assert(offsetof(CUBE_C_ExecuteUbergraph_CUBE, K2Node_CreateDelegate_OutputDelegate21) == 0x001B34, "Member 'CUBE_C_ExecuteUbergraph_CUBE::K2Node_CreateDelegate_OutputDelegate21' has a wrong offset!");
static_assert(offsetof(CUBE_C_ExecuteUbergraph_CUBE, K2Node_CreateDelegate_OutputDelegate22) == 0x001B44, "Member 'CUBE_C_ExecuteUbergraph_CUBE::K2Node_CreateDelegate_OutputDelegate22' has a wrong offset!");
static_assert(offsetof(CUBE_C_ExecuteUbergraph_CUBE, CallFunc_K2_SetTimerDelegate_ReturnValue9) == 0x001B58, "Member 'CUBE_C_ExecuteUbergraph_CUBE::CallFunc_K2_SetTimerDelegate_ReturnValue9' has a wrong offset!");
static_assert(offsetof(CUBE_C_ExecuteUbergraph_CUBE, CallFunc_Array_Get_Item17) == 0x001B60, "Member 'CUBE_C_ExecuteUbergraph_CUBE::CallFunc_Array_Get_Item17' has a wrong offset!");
static_assert(offsetof(CUBE_C_ExecuteUbergraph_CUBE, CallFunc_Array_Get_Item18) == 0x001BA0, "Member 'CUBE_C_ExecuteUbergraph_CUBE::CallFunc_Array_Get_Item18' has a wrong offset!");
static_assert(offsetof(CUBE_C_ExecuteUbergraph_CUBE, CallFunc_HasAuthority_ReturnValue5) == 0x001BE0, "Member 'CUBE_C_ExecuteUbergraph_CUBE::CallFunc_HasAuthority_ReturnValue5' has a wrong offset!");
static_assert(offsetof(CUBE_C_ExecuteUbergraph_CUBE, CallFunc_IsValid_ReturnValue9) == 0x001BE1, "Member 'CUBE_C_ExecuteUbergraph_CUBE::CallFunc_IsValid_ReturnValue9' has a wrong offset!");
static_assert(offsetof(CUBE_C_ExecuteUbergraph_CUBE, CallFunc_GetAllActorsOfClass_OutActors) == 0x001BE8, "Member 'CUBE_C_ExecuteUbergraph_CUBE::CallFunc_GetAllActorsOfClass_OutActors' has a wrong offset!");
static_assert(offsetof(CUBE_C_ExecuteUbergraph_CUBE, CallFunc_Array_Get_Item19) == 0x001BF8, "Member 'CUBE_C_ExecuteUbergraph_CUBE::CallFunc_Array_Get_Item19' has a wrong offset!");
static_assert(offsetof(CUBE_C_ExecuteUbergraph_CUBE, CallFunc_IsPlaying_ReturnValue) == 0x001C00, "Member 'CUBE_C_ExecuteUbergraph_CUBE::CallFunc_IsPlaying_ReturnValue' has a wrong offset!");
static_assert(offsetof(CUBE_C_ExecuteUbergraph_CUBE, CallFunc_IsPlaying_ReturnValue1) == 0x001C01, "Member 'CUBE_C_ExecuteUbergraph_CUBE::CallFunc_IsPlaying_ReturnValue1' has a wrong offset!");

// Function CUBE.CUBE_C.Next
// 0x0004 (0x0004 - 0x0000)
struct CUBE_C_Next final
{
public:
	int32                                         NewParam;                                          // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(CUBE_C_Next) == 0x000004, "Wrong alignment on CUBE_C_Next");
static_assert(sizeof(CUBE_C_Next) == 0x000004, "Wrong size on CUBE_C_Next");
static_assert(offsetof(CUBE_C_Next, NewParam) == 0x000000, "Member 'CUBE_C_Next::NewParam' has a wrong offset!");

// Function CUBE.CUBE_C.New
// 0x0004 (0x0004 - 0x0000)
struct CUBE_C_New final
{
public:
	int32                                         NewParam;                                          // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(CUBE_C_New) == 0x000004, "Wrong alignment on CUBE_C_New");
static_assert(sizeof(CUBE_C_New) == 0x000004, "Wrong size on CUBE_C_New");
static_assert(offsetof(CUBE_C_New, NewParam) == 0x000000, "Member 'CUBE_C_New::NewParam' has a wrong offset!");

// Function CUBE.CUBE_C.On Amb Zap Spawn
// 0x0024 (0x0024 - 0x0000)
struct CUBE_C_On_Amb_Zap_Spawn final
{
public:
	class FName                                   EventName;                                         // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         EmitterTime;                                       // 0x0008(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                Location;                                          // 0x000C(0x000C)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                Velocity;                                          // 0x0018(0x000C)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(CUBE_C_On_Amb_Zap_Spawn) == 0x000004, "Wrong alignment on CUBE_C_On_Amb_Zap_Spawn");
static_assert(sizeof(CUBE_C_On_Amb_Zap_Spawn) == 0x000024, "Wrong size on CUBE_C_On_Amb_Zap_Spawn");
static_assert(offsetof(CUBE_C_On_Amb_Zap_Spawn, EventName) == 0x000000, "Member 'CUBE_C_On_Amb_Zap_Spawn::EventName' has a wrong offset!");
static_assert(offsetof(CUBE_C_On_Amb_Zap_Spawn, EmitterTime) == 0x000008, "Member 'CUBE_C_On_Amb_Zap_Spawn::EmitterTime' has a wrong offset!");
static_assert(offsetof(CUBE_C_On_Amb_Zap_Spawn, Location) == 0x00000C, "Member 'CUBE_C_On_Amb_Zap_Spawn::Location' has a wrong offset!");
static_assert(offsetof(CUBE_C_On_Amb_Zap_Spawn, Velocity) == 0x000018, "Member 'CUBE_C_On_Amb_Zap_Spawn::Velocity' has a wrong offset!");

// Function CUBE.CUBE_C.On Spawn Dust Appear
// 0x0024 (0x0024 - 0x0000)
struct CUBE_C_On_Spawn_Dust_Appear final
{
public:
	class FName                                   EventName;                                         // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         EmitterTime;                                       // 0x0008(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                Location;                                          // 0x000C(0x000C)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                Velocity;                                          // 0x0018(0x000C)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(CUBE_C_On_Spawn_Dust_Appear) == 0x000004, "Wrong alignment on CUBE_C_On_Spawn_Dust_Appear");
static_assert(sizeof(CUBE_C_On_Spawn_Dust_Appear) == 0x000024, "Wrong size on CUBE_C_On_Spawn_Dust_Appear");
static_assert(offsetof(CUBE_C_On_Spawn_Dust_Appear, EventName) == 0x000000, "Member 'CUBE_C_On_Spawn_Dust_Appear::EventName' has a wrong offset!");
static_assert(offsetof(CUBE_C_On_Spawn_Dust_Appear, EmitterTime) == 0x000008, "Member 'CUBE_C_On_Spawn_Dust_Appear::EmitterTime' has a wrong offset!");
static_assert(offsetof(CUBE_C_On_Spawn_Dust_Appear, Location) == 0x00000C, "Member 'CUBE_C_On_Spawn_Dust_Appear::Location' has a wrong offset!");
static_assert(offsetof(CUBE_C_On_Spawn_Dust_Appear, Velocity) == 0x000018, "Member 'CUBE_C_On_Spawn_Dust_Appear::Velocity' has a wrong offset!");

// Function CUBE.CUBE_C.Set Rune Print Audio Enabled
// 0x0001 (0x0001 - 0x0000)
struct CUBE_C_Set_Rune_Print_Audio_Enabled final
{
public:
	bool                                          Enabled;                                           // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(CUBE_C_Set_Rune_Print_Audio_Enabled) == 0x000001, "Wrong alignment on CUBE_C_Set_Rune_Print_Audio_Enabled");
static_assert(sizeof(CUBE_C_Set_Rune_Print_Audio_Enabled) == 0x000001, "Wrong size on CUBE_C_Set_Rune_Print_Audio_Enabled");
static_assert(offsetof(CUBE_C_Set_Rune_Print_Audio_Enabled, Enabled) == 0x000000, "Member 'CUBE_C_Set_Rune_Print_Audio_Enabled::Enabled' has a wrong offset!");

// Function CUBE.CUBE_C.CrushPlayer
// 0x0008 (0x0008 - 0x0000)
struct CUBE_C_CrushPlayer final
{
public:
	class AActor*                                 Actor;                                             // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(CUBE_C_CrushPlayer) == 0x000008, "Wrong alignment on CUBE_C_CrushPlayer");
static_assert(sizeof(CUBE_C_CrushPlayer) == 0x000008, "Wrong size on CUBE_C_CrushPlayer");
static_assert(offsetof(CUBE_C_CrushPlayer, Actor) == 0x000000, "Member 'CUBE_C_CrushPlayer::Actor' has a wrong offset!");

// Function CUBE.CUBE_C.OnDamagePlayEffects
// 0x00E8 (0x00E8 - 0x0000)
struct CUBE_C_OnDamagePlayEffects final
{
public:
	float                                         Damage;                                            // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4[0x4];                                        // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FGameplayTagContainer                  DamageTags;                                        // 0x0008(0x0020)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
	struct FVector                                Momentum;                                          // 0x0028(0x000C)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FHitResult                             HitInfo;                                           // 0x0034(0x0088)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm, IsPlainOldData, NoDestructor, ContainsInstancedReference)
	uint8                                         Pad_BC[0x4];                                       // 0x00BC(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class AFortPawn*                              InstigatedBy;                                      // 0x00C0(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 DamageCauser;                                      // 0x00C8(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FGameplayEffectContextHandle           EffectContext;                                     // 0x00D0(0x0018)(BlueprintVisible, BlueprintReadOnly, Parm)
};
static_assert(alignof(CUBE_C_OnDamagePlayEffects) == 0x000008, "Wrong alignment on CUBE_C_OnDamagePlayEffects");
static_assert(sizeof(CUBE_C_OnDamagePlayEffects) == 0x0000E8, "Wrong size on CUBE_C_OnDamagePlayEffects");
static_assert(offsetof(CUBE_C_OnDamagePlayEffects, Damage) == 0x000000, "Member 'CUBE_C_OnDamagePlayEffects::Damage' has a wrong offset!");
static_assert(offsetof(CUBE_C_OnDamagePlayEffects, DamageTags) == 0x000008, "Member 'CUBE_C_OnDamagePlayEffects::DamageTags' has a wrong offset!");
static_assert(offsetof(CUBE_C_OnDamagePlayEffects, Momentum) == 0x000028, "Member 'CUBE_C_OnDamagePlayEffects::Momentum' has a wrong offset!");
static_assert(offsetof(CUBE_C_OnDamagePlayEffects, HitInfo) == 0x000034, "Member 'CUBE_C_OnDamagePlayEffects::HitInfo' has a wrong offset!");
static_assert(offsetof(CUBE_C_OnDamagePlayEffects, InstigatedBy) == 0x0000C0, "Member 'CUBE_C_OnDamagePlayEffects::InstigatedBy' has a wrong offset!");
static_assert(offsetof(CUBE_C_OnDamagePlayEffects, DamageCauser) == 0x0000C8, "Member 'CUBE_C_OnDamagePlayEffects::DamageCauser' has a wrong offset!");
static_assert(offsetof(CUBE_C_OnDamagePlayEffects, EffectContext) == 0x0000D0, "Member 'CUBE_C_OnDamagePlayEffects::EffectContext' has a wrong offset!");

// Function CUBE.CUBE_C.TestForCrushOnHit
// 0x0004 (0x0004 - 0x0000)
struct CUBE_C_TestForCrushOnHit final
{
public:
	float                                         Trace_Distance;                                    // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(CUBE_C_TestForCrushOnHit) == 0x000004, "Wrong alignment on CUBE_C_TestForCrushOnHit");
static_assert(sizeof(CUBE_C_TestForCrushOnHit) == 0x000004, "Wrong size on CUBE_C_TestForCrushOnHit");
static_assert(offsetof(CUBE_C_TestForCrushOnHit, Trace_Distance) == 0x000000, "Member 'CUBE_C_TestForCrushOnHit::Trace_Distance' has a wrong offset!");

// Function CUBE.CUBE_C.Update Roll Audio
// 0x0004 (0x0004 - 0x0000)
struct CUBE_C_Update_Roll_Audio final
{
public:
	float                                         Percent_Complete;                                  // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(CUBE_C_Update_Roll_Audio) == 0x000004, "Wrong alignment on CUBE_C_Update_Roll_Audio");
static_assert(sizeof(CUBE_C_Update_Roll_Audio) == 0x000004, "Wrong size on CUBE_C_Update_Roll_Audio");
static_assert(offsetof(CUBE_C_Update_Roll_Audio, Percent_Complete) == 0x000000, "Member 'CUBE_C_Update_Roll_Audio::Percent_Complete' has a wrong offset!");

// Function CUBE.CUBE_C.Start Roll Audio Part 1
// 0x0001 (0x0001 - 0x0000)
struct CUBE_C_Start_Roll_Audio_Part_1 final
{
public:
	bool                                          Is_2_Part_Roll;                                    // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(CUBE_C_Start_Roll_Audio_Part_1) == 0x000001, "Wrong alignment on CUBE_C_Start_Roll_Audio_Part_1");
static_assert(sizeof(CUBE_C_Start_Roll_Audio_Part_1) == 0x000001, "Wrong size on CUBE_C_Start_Roll_Audio_Part_1");
static_assert(offsetof(CUBE_C_Start_Roll_Audio_Part_1, Is_2_Part_Roll) == 0x000000, "Member 'CUBE_C_Start_Roll_Audio_Part_1::Is_2_Part_Roll' has a wrong offset!");

// Function CUBE.CUBE_C.Set Ambient Audio Enabled
// 0x0001 (0x0001 - 0x0000)
struct CUBE_C_Set_Ambient_Audio_Enabled final
{
public:
	bool                                          Enabled;                                           // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(CUBE_C_Set_Ambient_Audio_Enabled) == 0x000001, "Wrong alignment on CUBE_C_Set_Ambient_Audio_Enabled");
static_assert(sizeof(CUBE_C_Set_Ambient_Audio_Enabled) == 0x000001, "Wrong size on CUBE_C_Set_Ambient_Audio_Enabled");
static_assert(offsetof(CUBE_C_Set_Ambient_Audio_Enabled, Enabled) == 0x000000, "Member 'CUBE_C_Set_Ambient_Audio_Enabled::Enabled' has a wrong offset!");

// Function CUBE.CUBE_C.SetRuneGlow
// 0x0001 (0x0001 - 0x0000)
struct CUBE_C_SetRuneGlow final
{
public:
	bool                                          Active;                                            // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(CUBE_C_SetRuneGlow) == 0x000001, "Wrong alignment on CUBE_C_SetRuneGlow");
static_assert(sizeof(CUBE_C_SetRuneGlow) == 0x000001, "Wrong size on CUBE_C_SetRuneGlow");
static_assert(offsetof(CUBE_C_SetRuneGlow, Active) == 0x000000, "Member 'CUBE_C_SetRuneGlow::Active' has a wrong offset!");

// Function CUBE.CUBE_C.RippleGC
// 0x0028 (0x0028 - 0x0000)
struct CUBE_C_RippleGC final
{
public:
	struct FVector                                Location;                                          // 0x0000(0x000C)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                Normal;                                            // 0x000C(0x000C)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 Source;                                            // 0x0018(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         Scale;                                             // 0x0020(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(CUBE_C_RippleGC) == 0x000008, "Wrong alignment on CUBE_C_RippleGC");
static_assert(sizeof(CUBE_C_RippleGC) == 0x000028, "Wrong size on CUBE_C_RippleGC");
static_assert(offsetof(CUBE_C_RippleGC, Location) == 0x000000, "Member 'CUBE_C_RippleGC::Location' has a wrong offset!");
static_assert(offsetof(CUBE_C_RippleGC, Normal) == 0x00000C, "Member 'CUBE_C_RippleGC::Normal' has a wrong offset!");
static_assert(offsetof(CUBE_C_RippleGC, Source) == 0x000018, "Member 'CUBE_C_RippleGC::Source' has a wrong offset!");
static_assert(offsetof(CUBE_C_RippleGC, Scale) == 0x000020, "Member 'CUBE_C_RippleGC::Scale' has a wrong offset!");

// Function CUBE.CUBE_C.StartRuneSequence
// 0x0001 (0x0001 - 0x0000)
struct CUBE_C_StartRuneSequence final
{
public:
	bool                                          StartMidway;                                       // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(CUBE_C_StartRuneSequence) == 0x000001, "Wrong alignment on CUBE_C_StartRuneSequence");
static_assert(sizeof(CUBE_C_StartRuneSequence) == 0x000001, "Wrong size on CUBE_C_StartRuneSequence");
static_assert(offsetof(CUBE_C_StartRuneSequence, StartMidway) == 0x000000, "Member 'CUBE_C_StartRuneSequence::StartMidway' has a wrong offset!");

// Function CUBE.CUBE_C.OnDamageServer
// 0x00E8 (0x00E8 - 0x0000)
struct CUBE_C_OnDamageServer final
{
public:
	float                                         Damage;                                            // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4[0x4];                                        // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FGameplayTagContainer                  DamageTags;                                        // 0x0008(0x0020)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
	struct FVector                                Momentum;                                          // 0x0028(0x000C)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FHitResult                             HitInfo;                                           // 0x0034(0x0088)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm, IsPlainOldData, NoDestructor, ContainsInstancedReference)
	uint8                                         Pad_BC[0x4];                                       // 0x00BC(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class AController*                            InstigatedBy;                                      // 0x00C0(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 DamageCauser;                                      // 0x00C8(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FGameplayEffectContextHandle           EffectContext;                                     // 0x00D0(0x0018)(BlueprintVisible, BlueprintReadOnly, Parm)
};
static_assert(alignof(CUBE_C_OnDamageServer) == 0x000008, "Wrong alignment on CUBE_C_OnDamageServer");
static_assert(sizeof(CUBE_C_OnDamageServer) == 0x0000E8, "Wrong size on CUBE_C_OnDamageServer");
static_assert(offsetof(CUBE_C_OnDamageServer, Damage) == 0x000000, "Member 'CUBE_C_OnDamageServer::Damage' has a wrong offset!");
static_assert(offsetof(CUBE_C_OnDamageServer, DamageTags) == 0x000008, "Member 'CUBE_C_OnDamageServer::DamageTags' has a wrong offset!");
static_assert(offsetof(CUBE_C_OnDamageServer, Momentum) == 0x000028, "Member 'CUBE_C_OnDamageServer::Momentum' has a wrong offset!");
static_assert(offsetof(CUBE_C_OnDamageServer, HitInfo) == 0x000034, "Member 'CUBE_C_OnDamageServer::HitInfo' has a wrong offset!");
static_assert(offsetof(CUBE_C_OnDamageServer, InstigatedBy) == 0x0000C0, "Member 'CUBE_C_OnDamageServer::InstigatedBy' has a wrong offset!");
static_assert(offsetof(CUBE_C_OnDamageServer, DamageCauser) == 0x0000C8, "Member 'CUBE_C_OnDamageServer::DamageCauser' has a wrong offset!");
static_assert(offsetof(CUBE_C_OnDamageServer, EffectContext) == 0x0000D0, "Member 'CUBE_C_OnDamageServer::EffectContext' has a wrong offset!");

// Function CUBE.CUBE_C.ReceiveHit
// 0x00C8 (0x00C8 - 0x0000)
struct CUBE_C_ReceiveHit final
{
public:
	class UPrimitiveComponent*                    MyComp;                                            // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 Other;                                             // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UPrimitiveComponent*                    OtherComp;                                         // 0x0010(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          bSelfMoved;                                        // 0x0018(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_19[0x3];                                       // 0x0019(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                HitLocation;                                       // 0x001C(0x000C)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                HitNormal;                                         // 0x0028(0x000C)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                NormalImpulse;                                     // 0x0034(0x000C)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FHitResult                             Hit;                                               // 0x0040(0x0088)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm, IsPlainOldData, NoDestructor, ContainsInstancedReference)
};
static_assert(alignof(CUBE_C_ReceiveHit) == 0x000008, "Wrong alignment on CUBE_C_ReceiveHit");
static_assert(sizeof(CUBE_C_ReceiveHit) == 0x0000C8, "Wrong size on CUBE_C_ReceiveHit");
static_assert(offsetof(CUBE_C_ReceiveHit, MyComp) == 0x000000, "Member 'CUBE_C_ReceiveHit::MyComp' has a wrong offset!");
static_assert(offsetof(CUBE_C_ReceiveHit, Other) == 0x000008, "Member 'CUBE_C_ReceiveHit::Other' has a wrong offset!");
static_assert(offsetof(CUBE_C_ReceiveHit, OtherComp) == 0x000010, "Member 'CUBE_C_ReceiveHit::OtherComp' has a wrong offset!");
static_assert(offsetof(CUBE_C_ReceiveHit, bSelfMoved) == 0x000018, "Member 'CUBE_C_ReceiveHit::bSelfMoved' has a wrong offset!");
static_assert(offsetof(CUBE_C_ReceiveHit, HitLocation) == 0x00001C, "Member 'CUBE_C_ReceiveHit::HitLocation' has a wrong offset!");
static_assert(offsetof(CUBE_C_ReceiveHit, HitNormal) == 0x000028, "Member 'CUBE_C_ReceiveHit::HitNormal' has a wrong offset!");
static_assert(offsetof(CUBE_C_ReceiveHit, NormalImpulse) == 0x000034, "Member 'CUBE_C_ReceiveHit::NormalImpulse' has a wrong offset!");
static_assert(offsetof(CUBE_C_ReceiveHit, Hit) == 0x000040, "Member 'CUBE_C_ReceiveHit::Hit' has a wrong offset!");

// Function CUBE.CUBE_C.OnEventActive_750DF2F749472DA252073089796089C8
// 0x0028 (0x0028 - 0x0000)
struct CUBE_C_OnEventActive_750DF2F749472DA252073089796089C8 final
{
public:
	class FString                                 EventName;                                         // 0x0000(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, HasGetValueTypeHash)
	struct FTimespan                              TimeUntilEnd_0;                                    // 0x0010(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	struct FTimespan                              TimeSinceBegin;                                    // 0x0018(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	float                                         TimespanRatio;                                     // 0x0020(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(CUBE_C_OnEventActive_750DF2F749472DA252073089796089C8) == 0x000008, "Wrong alignment on CUBE_C_OnEventActive_750DF2F749472DA252073089796089C8");
static_assert(sizeof(CUBE_C_OnEventActive_750DF2F749472DA252073089796089C8) == 0x000028, "Wrong size on CUBE_C_OnEventActive_750DF2F749472DA252073089796089C8");
static_assert(offsetof(CUBE_C_OnEventActive_750DF2F749472DA252073089796089C8, EventName) == 0x000000, "Member 'CUBE_C_OnEventActive_750DF2F749472DA252073089796089C8::EventName' has a wrong offset!");
static_assert(offsetof(CUBE_C_OnEventActive_750DF2F749472DA252073089796089C8, TimeUntilEnd_0) == 0x000010, "Member 'CUBE_C_OnEventActive_750DF2F749472DA252073089796089C8::TimeUntilEnd_0' has a wrong offset!");
static_assert(offsetof(CUBE_C_OnEventActive_750DF2F749472DA252073089796089C8, TimeSinceBegin) == 0x000018, "Member 'CUBE_C_OnEventActive_750DF2F749472DA252073089796089C8::TimeSinceBegin' has a wrong offset!");
static_assert(offsetof(CUBE_C_OnEventActive_750DF2F749472DA252073089796089C8, TimespanRatio) == 0x000020, "Member 'CUBE_C_OnEventActive_750DF2F749472DA252073089796089C8::TimespanRatio' has a wrong offset!");

// Function CUBE.CUBE_C.OnEventUpdated_750DF2F749472DA252073089796089C8
// 0x0028 (0x0028 - 0x0000)
struct CUBE_C_OnEventUpdated_750DF2F749472DA252073089796089C8 final
{
public:
	class FString                                 EventName;                                         // 0x0000(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, HasGetValueTypeHash)
	struct FTimespan                              TimeUntilEnd_0;                                    // 0x0010(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	struct FTimespan                              TimeSinceBegin;                                    // 0x0018(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	float                                         TimespanRatio;                                     // 0x0020(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(CUBE_C_OnEventUpdated_750DF2F749472DA252073089796089C8) == 0x000008, "Wrong alignment on CUBE_C_OnEventUpdated_750DF2F749472DA252073089796089C8");
static_assert(sizeof(CUBE_C_OnEventUpdated_750DF2F749472DA252073089796089C8) == 0x000028, "Wrong size on CUBE_C_OnEventUpdated_750DF2F749472DA252073089796089C8");
static_assert(offsetof(CUBE_C_OnEventUpdated_750DF2F749472DA252073089796089C8, EventName) == 0x000000, "Member 'CUBE_C_OnEventUpdated_750DF2F749472DA252073089796089C8::EventName' has a wrong offset!");
static_assert(offsetof(CUBE_C_OnEventUpdated_750DF2F749472DA252073089796089C8, TimeUntilEnd_0) == 0x000010, "Member 'CUBE_C_OnEventUpdated_750DF2F749472DA252073089796089C8::TimeUntilEnd_0' has a wrong offset!");
static_assert(offsetof(CUBE_C_OnEventUpdated_750DF2F749472DA252073089796089C8, TimeSinceBegin) == 0x000018, "Member 'CUBE_C_OnEventUpdated_750DF2F749472DA252073089796089C8::TimeSinceBegin' has a wrong offset!");
static_assert(offsetof(CUBE_C_OnEventUpdated_750DF2F749472DA252073089796089C8, TimespanRatio) == 0x000020, "Member 'CUBE_C_OnEventUpdated_750DF2F749472DA252073089796089C8::TimespanRatio' has a wrong offset!");

// Function CUBE.CUBE_C.OnEventEnded_750DF2F749472DA252073089796089C8
// 0x0028 (0x0028 - 0x0000)
struct CUBE_C_OnEventEnded_750DF2F749472DA252073089796089C8 final
{
public:
	class FString                                 EventName;                                         // 0x0000(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, HasGetValueTypeHash)
	struct FTimespan                              TimeUntilEnd_0;                                    // 0x0010(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	struct FTimespan                              TimeSinceBegin;                                    // 0x0018(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	float                                         TimespanRatio;                                     // 0x0020(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(CUBE_C_OnEventEnded_750DF2F749472DA252073089796089C8) == 0x000008, "Wrong alignment on CUBE_C_OnEventEnded_750DF2F749472DA252073089796089C8");
static_assert(sizeof(CUBE_C_OnEventEnded_750DF2F749472DA252073089796089C8) == 0x000028, "Wrong size on CUBE_C_OnEventEnded_750DF2F749472DA252073089796089C8");
static_assert(offsetof(CUBE_C_OnEventEnded_750DF2F749472DA252073089796089C8, EventName) == 0x000000, "Member 'CUBE_C_OnEventEnded_750DF2F749472DA252073089796089C8::EventName' has a wrong offset!");
static_assert(offsetof(CUBE_C_OnEventEnded_750DF2F749472DA252073089796089C8, TimeUntilEnd_0) == 0x000010, "Member 'CUBE_C_OnEventEnded_750DF2F749472DA252073089796089C8::TimeUntilEnd_0' has a wrong offset!");
static_assert(offsetof(CUBE_C_OnEventEnded_750DF2F749472DA252073089796089C8, TimeSinceBegin) == 0x000018, "Member 'CUBE_C_OnEventEnded_750DF2F749472DA252073089796089C8::TimeSinceBegin' has a wrong offset!");
static_assert(offsetof(CUBE_C_OnEventEnded_750DF2F749472DA252073089796089C8, TimespanRatio) == 0x000020, "Member 'CUBE_C_OnEventEnded_750DF2F749472DA252073089796089C8::TimespanRatio' has a wrong offset!");

// Function CUBE.CUBE_C.OnEventActive_2648B1B24D74D365B5C956ACA1EAECB0
// 0x0028 (0x0028 - 0x0000)
struct CUBE_C_OnEventActive_2648B1B24D74D365B5C956ACA1EAECB0 final
{
public:
	class FString                                 EventName;                                         // 0x0000(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, HasGetValueTypeHash)
	struct FTimespan                              TimeUntilEnd_0;                                    // 0x0010(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	struct FTimespan                              TimeSinceBegin;                                    // 0x0018(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	float                                         TimespanRatio;                                     // 0x0020(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(CUBE_C_OnEventActive_2648B1B24D74D365B5C956ACA1EAECB0) == 0x000008, "Wrong alignment on CUBE_C_OnEventActive_2648B1B24D74D365B5C956ACA1EAECB0");
static_assert(sizeof(CUBE_C_OnEventActive_2648B1B24D74D365B5C956ACA1EAECB0) == 0x000028, "Wrong size on CUBE_C_OnEventActive_2648B1B24D74D365B5C956ACA1EAECB0");
static_assert(offsetof(CUBE_C_OnEventActive_2648B1B24D74D365B5C956ACA1EAECB0, EventName) == 0x000000, "Member 'CUBE_C_OnEventActive_2648B1B24D74D365B5C956ACA1EAECB0::EventName' has a wrong offset!");
static_assert(offsetof(CUBE_C_OnEventActive_2648B1B24D74D365B5C956ACA1EAECB0, TimeUntilEnd_0) == 0x000010, "Member 'CUBE_C_OnEventActive_2648B1B24D74D365B5C956ACA1EAECB0::TimeUntilEnd_0' has a wrong offset!");
static_assert(offsetof(CUBE_C_OnEventActive_2648B1B24D74D365B5C956ACA1EAECB0, TimeSinceBegin) == 0x000018, "Member 'CUBE_C_OnEventActive_2648B1B24D74D365B5C956ACA1EAECB0::TimeSinceBegin' has a wrong offset!");
static_assert(offsetof(CUBE_C_OnEventActive_2648B1B24D74D365B5C956ACA1EAECB0, TimespanRatio) == 0x000020, "Member 'CUBE_C_OnEventActive_2648B1B24D74D365B5C956ACA1EAECB0::TimespanRatio' has a wrong offset!");

// Function CUBE.CUBE_C.OnEventUpdated_2648B1B24D74D365B5C956ACA1EAECB0
// 0x0028 (0x0028 - 0x0000)
struct CUBE_C_OnEventUpdated_2648B1B24D74D365B5C956ACA1EAECB0 final
{
public:
	class FString                                 EventName;                                         // 0x0000(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, HasGetValueTypeHash)
	struct FTimespan                              TimeUntilEnd_0;                                    // 0x0010(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	struct FTimespan                              TimeSinceBegin;                                    // 0x0018(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	float                                         TimespanRatio;                                     // 0x0020(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(CUBE_C_OnEventUpdated_2648B1B24D74D365B5C956ACA1EAECB0) == 0x000008, "Wrong alignment on CUBE_C_OnEventUpdated_2648B1B24D74D365B5C956ACA1EAECB0");
static_assert(sizeof(CUBE_C_OnEventUpdated_2648B1B24D74D365B5C956ACA1EAECB0) == 0x000028, "Wrong size on CUBE_C_OnEventUpdated_2648B1B24D74D365B5C956ACA1EAECB0");
static_assert(offsetof(CUBE_C_OnEventUpdated_2648B1B24D74D365B5C956ACA1EAECB0, EventName) == 0x000000, "Member 'CUBE_C_OnEventUpdated_2648B1B24D74D365B5C956ACA1EAECB0::EventName' has a wrong offset!");
static_assert(offsetof(CUBE_C_OnEventUpdated_2648B1B24D74D365B5C956ACA1EAECB0, TimeUntilEnd_0) == 0x000010, "Member 'CUBE_C_OnEventUpdated_2648B1B24D74D365B5C956ACA1EAECB0::TimeUntilEnd_0' has a wrong offset!");
static_assert(offsetof(CUBE_C_OnEventUpdated_2648B1B24D74D365B5C956ACA1EAECB0, TimeSinceBegin) == 0x000018, "Member 'CUBE_C_OnEventUpdated_2648B1B24D74D365B5C956ACA1EAECB0::TimeSinceBegin' has a wrong offset!");
static_assert(offsetof(CUBE_C_OnEventUpdated_2648B1B24D74D365B5C956ACA1EAECB0, TimespanRatio) == 0x000020, "Member 'CUBE_C_OnEventUpdated_2648B1B24D74D365B5C956ACA1EAECB0::TimespanRatio' has a wrong offset!");

// Function CUBE.CUBE_C.OnEventEnded_2648B1B24D74D365B5C956ACA1EAECB0
// 0x0028 (0x0028 - 0x0000)
struct CUBE_C_OnEventEnded_2648B1B24D74D365B5C956ACA1EAECB0 final
{
public:
	class FString                                 EventName;                                         // 0x0000(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, HasGetValueTypeHash)
	struct FTimespan                              TimeUntilEnd_0;                                    // 0x0010(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	struct FTimespan                              TimeSinceBegin;                                    // 0x0018(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	float                                         TimespanRatio;                                     // 0x0020(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(CUBE_C_OnEventEnded_2648B1B24D74D365B5C956ACA1EAECB0) == 0x000008, "Wrong alignment on CUBE_C_OnEventEnded_2648B1B24D74D365B5C956ACA1EAECB0");
static_assert(sizeof(CUBE_C_OnEventEnded_2648B1B24D74D365B5C956ACA1EAECB0) == 0x000028, "Wrong size on CUBE_C_OnEventEnded_2648B1B24D74D365B5C956ACA1EAECB0");
static_assert(offsetof(CUBE_C_OnEventEnded_2648B1B24D74D365B5C956ACA1EAECB0, EventName) == 0x000000, "Member 'CUBE_C_OnEventEnded_2648B1B24D74D365B5C956ACA1EAECB0::EventName' has a wrong offset!");
static_assert(offsetof(CUBE_C_OnEventEnded_2648B1B24D74D365B5C956ACA1EAECB0, TimeUntilEnd_0) == 0x000010, "Member 'CUBE_C_OnEventEnded_2648B1B24D74D365B5C956ACA1EAECB0::TimeUntilEnd_0' has a wrong offset!");
static_assert(offsetof(CUBE_C_OnEventEnded_2648B1B24D74D365B5C956ACA1EAECB0, TimeSinceBegin) == 0x000018, "Member 'CUBE_C_OnEventEnded_2648B1B24D74D365B5C956ACA1EAECB0::TimeSinceBegin' has a wrong offset!");
static_assert(offsetof(CUBE_C_OnEventEnded_2648B1B24D74D365B5C956ACA1EAECB0, TimespanRatio) == 0x000020, "Member 'CUBE_C_OnEventEnded_2648B1B24D74D365B5C956ACA1EAECB0::TimespanRatio' has a wrong offset!");

// Function CUBE.CUBE_C.OnEventActive_16C2560C48CD325DC3C47CA23BEBB2C9
// 0x0028 (0x0028 - 0x0000)
struct CUBE_C_OnEventActive_16C2560C48CD325DC3C47CA23BEBB2C9 final
{
public:
	class FString                                 EventName;                                         // 0x0000(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, HasGetValueTypeHash)
	struct FTimespan                              TimeUntilEnd_0;                                    // 0x0010(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	struct FTimespan                              TimeSinceBegin;                                    // 0x0018(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	float                                         TimespanRatio;                                     // 0x0020(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(CUBE_C_OnEventActive_16C2560C48CD325DC3C47CA23BEBB2C9) == 0x000008, "Wrong alignment on CUBE_C_OnEventActive_16C2560C48CD325DC3C47CA23BEBB2C9");
static_assert(sizeof(CUBE_C_OnEventActive_16C2560C48CD325DC3C47CA23BEBB2C9) == 0x000028, "Wrong size on CUBE_C_OnEventActive_16C2560C48CD325DC3C47CA23BEBB2C9");
static_assert(offsetof(CUBE_C_OnEventActive_16C2560C48CD325DC3C47CA23BEBB2C9, EventName) == 0x000000, "Member 'CUBE_C_OnEventActive_16C2560C48CD325DC3C47CA23BEBB2C9::EventName' has a wrong offset!");
static_assert(offsetof(CUBE_C_OnEventActive_16C2560C48CD325DC3C47CA23BEBB2C9, TimeUntilEnd_0) == 0x000010, "Member 'CUBE_C_OnEventActive_16C2560C48CD325DC3C47CA23BEBB2C9::TimeUntilEnd_0' has a wrong offset!");
static_assert(offsetof(CUBE_C_OnEventActive_16C2560C48CD325DC3C47CA23BEBB2C9, TimeSinceBegin) == 0x000018, "Member 'CUBE_C_OnEventActive_16C2560C48CD325DC3C47CA23BEBB2C9::TimeSinceBegin' has a wrong offset!");
static_assert(offsetof(CUBE_C_OnEventActive_16C2560C48CD325DC3C47CA23BEBB2C9, TimespanRatio) == 0x000020, "Member 'CUBE_C_OnEventActive_16C2560C48CD325DC3C47CA23BEBB2C9::TimespanRatio' has a wrong offset!");

// Function CUBE.CUBE_C.OnEventUpdated_16C2560C48CD325DC3C47CA23BEBB2C9
// 0x0028 (0x0028 - 0x0000)
struct CUBE_C_OnEventUpdated_16C2560C48CD325DC3C47CA23BEBB2C9 final
{
public:
	class FString                                 EventName;                                         // 0x0000(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, HasGetValueTypeHash)
	struct FTimespan                              TimeUntilEnd_0;                                    // 0x0010(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	struct FTimespan                              TimeSinceBegin;                                    // 0x0018(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	float                                         TimespanRatio;                                     // 0x0020(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(CUBE_C_OnEventUpdated_16C2560C48CD325DC3C47CA23BEBB2C9) == 0x000008, "Wrong alignment on CUBE_C_OnEventUpdated_16C2560C48CD325DC3C47CA23BEBB2C9");
static_assert(sizeof(CUBE_C_OnEventUpdated_16C2560C48CD325DC3C47CA23BEBB2C9) == 0x000028, "Wrong size on CUBE_C_OnEventUpdated_16C2560C48CD325DC3C47CA23BEBB2C9");
static_assert(offsetof(CUBE_C_OnEventUpdated_16C2560C48CD325DC3C47CA23BEBB2C9, EventName) == 0x000000, "Member 'CUBE_C_OnEventUpdated_16C2560C48CD325DC3C47CA23BEBB2C9::EventName' has a wrong offset!");
static_assert(offsetof(CUBE_C_OnEventUpdated_16C2560C48CD325DC3C47CA23BEBB2C9, TimeUntilEnd_0) == 0x000010, "Member 'CUBE_C_OnEventUpdated_16C2560C48CD325DC3C47CA23BEBB2C9::TimeUntilEnd_0' has a wrong offset!");
static_assert(offsetof(CUBE_C_OnEventUpdated_16C2560C48CD325DC3C47CA23BEBB2C9, TimeSinceBegin) == 0x000018, "Member 'CUBE_C_OnEventUpdated_16C2560C48CD325DC3C47CA23BEBB2C9::TimeSinceBegin' has a wrong offset!");
static_assert(offsetof(CUBE_C_OnEventUpdated_16C2560C48CD325DC3C47CA23BEBB2C9, TimespanRatio) == 0x000020, "Member 'CUBE_C_OnEventUpdated_16C2560C48CD325DC3C47CA23BEBB2C9::TimespanRatio' has a wrong offset!");

// Function CUBE.CUBE_C.OnEventEnded_16C2560C48CD325DC3C47CA23BEBB2C9
// 0x0028 (0x0028 - 0x0000)
struct CUBE_C_OnEventEnded_16C2560C48CD325DC3C47CA23BEBB2C9 final
{
public:
	class FString                                 EventName;                                         // 0x0000(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, HasGetValueTypeHash)
	struct FTimespan                              TimeUntilEnd_0;                                    // 0x0010(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	struct FTimespan                              TimeSinceBegin;                                    // 0x0018(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	float                                         TimespanRatio;                                     // 0x0020(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(CUBE_C_OnEventEnded_16C2560C48CD325DC3C47CA23BEBB2C9) == 0x000008, "Wrong alignment on CUBE_C_OnEventEnded_16C2560C48CD325DC3C47CA23BEBB2C9");
static_assert(sizeof(CUBE_C_OnEventEnded_16C2560C48CD325DC3C47CA23BEBB2C9) == 0x000028, "Wrong size on CUBE_C_OnEventEnded_16C2560C48CD325DC3C47CA23BEBB2C9");
static_assert(offsetof(CUBE_C_OnEventEnded_16C2560C48CD325DC3C47CA23BEBB2C9, EventName) == 0x000000, "Member 'CUBE_C_OnEventEnded_16C2560C48CD325DC3C47CA23BEBB2C9::EventName' has a wrong offset!");
static_assert(offsetof(CUBE_C_OnEventEnded_16C2560C48CD325DC3C47CA23BEBB2C9, TimeUntilEnd_0) == 0x000010, "Member 'CUBE_C_OnEventEnded_16C2560C48CD325DC3C47CA23BEBB2C9::TimeUntilEnd_0' has a wrong offset!");
static_assert(offsetof(CUBE_C_OnEventEnded_16C2560C48CD325DC3C47CA23BEBB2C9, TimeSinceBegin) == 0x000018, "Member 'CUBE_C_OnEventEnded_16C2560C48CD325DC3C47CA23BEBB2C9::TimeSinceBegin' has a wrong offset!");
static_assert(offsetof(CUBE_C_OnEventEnded_16C2560C48CD325DC3C47CA23BEBB2C9, TimespanRatio) == 0x000020, "Member 'CUBE_C_OnEventEnded_16C2560C48CD325DC3C47CA23BEBB2C9::TimespanRatio' has a wrong offset!");

// Function CUBE.CUBE_C.UserConstructionScript
// 0x0620 (0x0620 - 0x0000)
struct CUBE_C_UserConstructionScript final
{
public:
	int32                                         NumImpacts;                                        // 0x0000(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4[0xC];                                        // 0x0004(0x000C)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTransform                             CurrentNewtransform;                               // 0x0010(0x0030)(Edit, BlueprintVisible, IsPlainOldData, NoDestructor)
	struct FVector                                CornerAvarage;                                     // 0x0040(0x000C)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                NearestGroundDirection;                            // 0x004C(0x000C)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                NearestFaceImpact;                                 // 0x0058(0x000C)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_64[0xC];                                       // 0x0064(0x000C)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTransform                             CurrentWorldTransform;                             // 0x0070(0x0030)(Edit, BlueprintVisible, IsPlainOldData, NoDestructor)
	TArray<struct FVector>                        DownMostFace;                                      // 0x00A0(0x0010)(Edit, BlueprintVisible, ZeroConstructor)
	int32                                         Temp_int_Array_Index_Variable;                     // 0x00B0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x00B4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x00B8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable1;                    // 0x00BC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Variable;                                 // 0x00C0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue1;                  // 0x00C4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_C8[0x8];                                       // 0x00C8(0x0008)(Fixing Size After Last Property [ Dumper-7 ])
	struct FCubeStruct                            CallFunc_Array_Get_Item;                           // 0x00D0(0x0040)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0110(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue;          // 0x0114(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_115[0x3];                                      // 0x0115(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Add_ReturnValue;                    // 0x0118(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_11C[0x4];                                      // 0x011C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTransform                             CallFunc_Array_Get_Item1;                          // 0x0120(0x0030)(IsPlainOldData, NoDestructor)
	int32                                         CallFunc_Array_Length_ReturnValue1;                // 0x0150(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_154[0x4];                                      // 0x0154(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UStaticMeshComponent*                   CallFunc_AddComponent_ReturnValue;                 // 0x0158(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0160(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_161[0x3];                                      // 0x0161(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Round_ReturnValue;                        // 0x0164(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable1;                   // 0x0168(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue1;                 // 0x016C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_16D[0x3];                                      // 0x016D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue2;                  // 0x0170(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_174[0xC];                                      // 0x0174(0x000C)(Fixing Size After Last Property [ Dumper-7 ])
	struct FCubeStruct                            CallFunc_Array_Get_Item2;                          // 0x0180(0x0040)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_LastIndex_ReturnValue;              // 0x01C0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Clamp_ReturnValue;                        // 0x01C4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Conv_ByteToString_ReturnValue;            // 0x01C8(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	bool                                          CallFunc_LessEqual_IntInt_ReturnValue;             // 0x01D8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1D9[0x3];                                      // 0x01D9(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class FName                                   CallFunc_Conv_StringToName_ReturnValue;            // 0x01DC(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1E4[0x4];                                      // 0x01E4(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UStaticMeshComponent*                   CallFunc_AddComponent_ReturnValue1;                // 0x01E8(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FTransform                             CallFunc_GetSocketTransform_ReturnValue;           // 0x01F0(0x0030)(IsPlainOldData, NoDestructor)
	struct FVector                                CallFunc_BreakTransform_Location;                  // 0x0220(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               CallFunc_BreakTransform_Rotation;                  // 0x022C(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FVector                                CallFunc_BreakTransform_Scale;                     // 0x0238(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_244[0xC];                                      // 0x0244(0x000C)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTransform                             CallFunc_GetTransform_ReturnValue;                 // 0x0250(0x0030)(IsPlainOldData, NoDestructor)
	struct FVector                                CallFunc_GetForwardVector_ReturnValue;             // 0x0280(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Multiply_VectorFloat_ReturnValue;         // 0x028C(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_LastIndex_ReturnValue1;             // 0x0298(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Add_VectorVector_ReturnValue;             // 0x029C(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Conv_IntToFloat_ReturnValue;              // 0x02A8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2AC[0x4];                                      // 0x02AC(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTransform                             CallFunc_MakeTransform_ReturnValue;                // 0x02B0(0x0030)(IsPlainOldData, NoDestructor)
	class UStaticMeshComponent*                   CallFunc_AddComponent_ReturnValue2;                // 0x02E0(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_LastIndex_ReturnValue2;             // 0x02E8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2EC[0x4];                                      // 0x02EC(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FCubeStruct                            CallFunc_Array_Get_Item3;                          // 0x02F0(0x0040)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FCubeStruct                            CallFunc_Array_Get_Item4;                          // 0x0330(0x0040)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FHitResult                             CallFunc_K2_SetWorldTransform_SweepHitResult;      // 0x0370(0x0088)(IsPlainOldData, NoDestructor, ContainsInstancedReference)
	bool                                          CallFunc_Greater_FloatFloat_ReturnValue;           // 0x03F8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3F9[0x3];                                      // 0x03F9(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Subtract_IntInt_ReturnValue;              // 0x03FC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Max_ReturnValue;                          // 0x0400(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Fraction_ReturnValue;                     // 0x0404(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_408[0x8];                                      // 0x0408(0x0008)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTransform                             CallFunc_TLerp_ReturnValue;                        // 0x0410(0x0030)(IsPlainOldData, NoDestructor)
	int32                                         CallFunc_FCeil_ReturnValue;                        // 0x0440(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FHitResult                             CallFunc_K2_SetWorldTransform_SweepHitResult1;     // 0x0444(0x0088)(IsPlainOldData, NoDestructor, ContainsInstancedReference)
	uint8                                         Pad_4CC[0x4];                                      // 0x04CC(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FCubeStruct                            CallFunc_Array_Get_Item5;                          // 0x04D0(0x0040)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_FFloor_ReturnValue;                       // 0x0510(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_514[0xC];                                      // 0x0514(0x000C)(Fixing Size After Last Property [ Dumper-7 ])
	struct FCubeStruct                            CallFunc_Array_Get_Item6;                          // 0x0520(0x0040)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FTransform                             CallFunc_ComposeTransforms_ReturnValue;            // 0x0560(0x0030)(IsPlainOldData, NoDestructor)
	struct FHitResult                             CallFunc_K2_SetRelativeTransform_SweepHitResult;   // 0x0590(0x0088)(IsPlainOldData, NoDestructor, ContainsInstancedReference)
};
static_assert(alignof(CUBE_C_UserConstructionScript) == 0x000010, "Wrong alignment on CUBE_C_UserConstructionScript");
static_assert(sizeof(CUBE_C_UserConstructionScript) == 0x000620, "Wrong size on CUBE_C_UserConstructionScript");
static_assert(offsetof(CUBE_C_UserConstructionScript, NumImpacts) == 0x000000, "Member 'CUBE_C_UserConstructionScript::NumImpacts' has a wrong offset!");
static_assert(offsetof(CUBE_C_UserConstructionScript, CurrentNewtransform) == 0x000010, "Member 'CUBE_C_UserConstructionScript::CurrentNewtransform' has a wrong offset!");
static_assert(offsetof(CUBE_C_UserConstructionScript, CornerAvarage) == 0x000040, "Member 'CUBE_C_UserConstructionScript::CornerAvarage' has a wrong offset!");
static_assert(offsetof(CUBE_C_UserConstructionScript, NearestGroundDirection) == 0x00004C, "Member 'CUBE_C_UserConstructionScript::NearestGroundDirection' has a wrong offset!");
static_assert(offsetof(CUBE_C_UserConstructionScript, NearestFaceImpact) == 0x000058, "Member 'CUBE_C_UserConstructionScript::NearestFaceImpact' has a wrong offset!");
static_assert(offsetof(CUBE_C_UserConstructionScript, CurrentWorldTransform) == 0x000070, "Member 'CUBE_C_UserConstructionScript::CurrentWorldTransform' has a wrong offset!");
static_assert(offsetof(CUBE_C_UserConstructionScript, DownMostFace) == 0x0000A0, "Member 'CUBE_C_UserConstructionScript::DownMostFace' has a wrong offset!");
static_assert(offsetof(CUBE_C_UserConstructionScript, Temp_int_Array_Index_Variable) == 0x0000B0, "Member 'CUBE_C_UserConstructionScript::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(CUBE_C_UserConstructionScript, Temp_int_Loop_Counter_Variable) == 0x0000B4, "Member 'CUBE_C_UserConstructionScript::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(CUBE_C_UserConstructionScript, CallFunc_Add_IntInt_ReturnValue) == 0x0000B8, "Member 'CUBE_C_UserConstructionScript::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(CUBE_C_UserConstructionScript, Temp_int_Array_Index_Variable1) == 0x0000BC, "Member 'CUBE_C_UserConstructionScript::Temp_int_Array_Index_Variable1' has a wrong offset!");
static_assert(offsetof(CUBE_C_UserConstructionScript, Temp_int_Variable) == 0x0000C0, "Member 'CUBE_C_UserConstructionScript::Temp_int_Variable' has a wrong offset!");
static_assert(offsetof(CUBE_C_UserConstructionScript, CallFunc_Add_IntInt_ReturnValue1) == 0x0000C4, "Member 'CUBE_C_UserConstructionScript::CallFunc_Add_IntInt_ReturnValue1' has a wrong offset!");
static_assert(offsetof(CUBE_C_UserConstructionScript, CallFunc_Array_Get_Item) == 0x0000D0, "Member 'CUBE_C_UserConstructionScript::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(CUBE_C_UserConstructionScript, CallFunc_Array_Length_ReturnValue) == 0x000110, "Member 'CUBE_C_UserConstructionScript::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(CUBE_C_UserConstructionScript, CallFunc_EqualEqual_ByteByte_ReturnValue) == 0x000114, "Member 'CUBE_C_UserConstructionScript::CallFunc_EqualEqual_ByteByte_ReturnValue' has a wrong offset!");
static_assert(offsetof(CUBE_C_UserConstructionScript, CallFunc_Array_Add_ReturnValue) == 0x000118, "Member 'CUBE_C_UserConstructionScript::CallFunc_Array_Add_ReturnValue' has a wrong offset!");
static_assert(offsetof(CUBE_C_UserConstructionScript, CallFunc_Array_Get_Item1) == 0x000120, "Member 'CUBE_C_UserConstructionScript::CallFunc_Array_Get_Item1' has a wrong offset!");
static_assert(offsetof(CUBE_C_UserConstructionScript, CallFunc_Array_Length_ReturnValue1) == 0x000150, "Member 'CUBE_C_UserConstructionScript::CallFunc_Array_Length_ReturnValue1' has a wrong offset!");
static_assert(offsetof(CUBE_C_UserConstructionScript, CallFunc_AddComponent_ReturnValue) == 0x000158, "Member 'CUBE_C_UserConstructionScript::CallFunc_AddComponent_ReturnValue' has a wrong offset!");
static_assert(offsetof(CUBE_C_UserConstructionScript, CallFunc_Less_IntInt_ReturnValue) == 0x000160, "Member 'CUBE_C_UserConstructionScript::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(CUBE_C_UserConstructionScript, CallFunc_Round_ReturnValue) == 0x000164, "Member 'CUBE_C_UserConstructionScript::CallFunc_Round_ReturnValue' has a wrong offset!");
static_assert(offsetof(CUBE_C_UserConstructionScript, Temp_int_Loop_Counter_Variable1) == 0x000168, "Member 'CUBE_C_UserConstructionScript::Temp_int_Loop_Counter_Variable1' has a wrong offset!");
static_assert(offsetof(CUBE_C_UserConstructionScript, CallFunc_Less_IntInt_ReturnValue1) == 0x00016C, "Member 'CUBE_C_UserConstructionScript::CallFunc_Less_IntInt_ReturnValue1' has a wrong offset!");
static_assert(offsetof(CUBE_C_UserConstructionScript, CallFunc_Add_IntInt_ReturnValue2) == 0x000170, "Member 'CUBE_C_UserConstructionScript::CallFunc_Add_IntInt_ReturnValue2' has a wrong offset!");
static_assert(offsetof(CUBE_C_UserConstructionScript, CallFunc_Array_Get_Item2) == 0x000180, "Member 'CUBE_C_UserConstructionScript::CallFunc_Array_Get_Item2' has a wrong offset!");
static_assert(offsetof(CUBE_C_UserConstructionScript, CallFunc_Array_LastIndex_ReturnValue) == 0x0001C0, "Member 'CUBE_C_UserConstructionScript::CallFunc_Array_LastIndex_ReturnValue' has a wrong offset!");
static_assert(offsetof(CUBE_C_UserConstructionScript, CallFunc_Clamp_ReturnValue) == 0x0001C4, "Member 'CUBE_C_UserConstructionScript::CallFunc_Clamp_ReturnValue' has a wrong offset!");
static_assert(offsetof(CUBE_C_UserConstructionScript, CallFunc_Conv_ByteToString_ReturnValue) == 0x0001C8, "Member 'CUBE_C_UserConstructionScript::CallFunc_Conv_ByteToString_ReturnValue' has a wrong offset!");
static_assert(offsetof(CUBE_C_UserConstructionScript, CallFunc_LessEqual_IntInt_ReturnValue) == 0x0001D8, "Member 'CUBE_C_UserConstructionScript::CallFunc_LessEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(CUBE_C_UserConstructionScript, CallFunc_Conv_StringToName_ReturnValue) == 0x0001DC, "Member 'CUBE_C_UserConstructionScript::CallFunc_Conv_StringToName_ReturnValue' has a wrong offset!");
static_assert(offsetof(CUBE_C_UserConstructionScript, CallFunc_AddComponent_ReturnValue1) == 0x0001E8, "Member 'CUBE_C_UserConstructionScript::CallFunc_AddComponent_ReturnValue1' has a wrong offset!");
static_assert(offsetof(CUBE_C_UserConstructionScript, CallFunc_GetSocketTransform_ReturnValue) == 0x0001F0, "Member 'CUBE_C_UserConstructionScript::CallFunc_GetSocketTransform_ReturnValue' has a wrong offset!");
static_assert(offsetof(CUBE_C_UserConstructionScript, CallFunc_BreakTransform_Location) == 0x000220, "Member 'CUBE_C_UserConstructionScript::CallFunc_BreakTransform_Location' has a wrong offset!");
static_assert(offsetof(CUBE_C_UserConstructionScript, CallFunc_BreakTransform_Rotation) == 0x00022C, "Member 'CUBE_C_UserConstructionScript::CallFunc_BreakTransform_Rotation' has a wrong offset!");
static_assert(offsetof(CUBE_C_UserConstructionScript, CallFunc_BreakTransform_Scale) == 0x000238, "Member 'CUBE_C_UserConstructionScript::CallFunc_BreakTransform_Scale' has a wrong offset!");
static_assert(offsetof(CUBE_C_UserConstructionScript, CallFunc_GetTransform_ReturnValue) == 0x000250, "Member 'CUBE_C_UserConstructionScript::CallFunc_GetTransform_ReturnValue' has a wrong offset!");
static_assert(offsetof(CUBE_C_UserConstructionScript, CallFunc_GetForwardVector_ReturnValue) == 0x000280, "Member 'CUBE_C_UserConstructionScript::CallFunc_GetForwardVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(CUBE_C_UserConstructionScript, CallFunc_Multiply_VectorFloat_ReturnValue) == 0x00028C, "Member 'CUBE_C_UserConstructionScript::CallFunc_Multiply_VectorFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(CUBE_C_UserConstructionScript, CallFunc_Array_LastIndex_ReturnValue1) == 0x000298, "Member 'CUBE_C_UserConstructionScript::CallFunc_Array_LastIndex_ReturnValue1' has a wrong offset!");
static_assert(offsetof(CUBE_C_UserConstructionScript, CallFunc_Add_VectorVector_ReturnValue) == 0x00029C, "Member 'CUBE_C_UserConstructionScript::CallFunc_Add_VectorVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(CUBE_C_UserConstructionScript, CallFunc_Conv_IntToFloat_ReturnValue) == 0x0002A8, "Member 'CUBE_C_UserConstructionScript::CallFunc_Conv_IntToFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(CUBE_C_UserConstructionScript, CallFunc_MakeTransform_ReturnValue) == 0x0002B0, "Member 'CUBE_C_UserConstructionScript::CallFunc_MakeTransform_ReturnValue' has a wrong offset!");
static_assert(offsetof(CUBE_C_UserConstructionScript, CallFunc_AddComponent_ReturnValue2) == 0x0002E0, "Member 'CUBE_C_UserConstructionScript::CallFunc_AddComponent_ReturnValue2' has a wrong offset!");
static_assert(offsetof(CUBE_C_UserConstructionScript, CallFunc_Array_LastIndex_ReturnValue2) == 0x0002E8, "Member 'CUBE_C_UserConstructionScript::CallFunc_Array_LastIndex_ReturnValue2' has a wrong offset!");
static_assert(offsetof(CUBE_C_UserConstructionScript, CallFunc_Array_Get_Item3) == 0x0002F0, "Member 'CUBE_C_UserConstructionScript::CallFunc_Array_Get_Item3' has a wrong offset!");
static_assert(offsetof(CUBE_C_UserConstructionScript, CallFunc_Array_Get_Item4) == 0x000330, "Member 'CUBE_C_UserConstructionScript::CallFunc_Array_Get_Item4' has a wrong offset!");
static_assert(offsetof(CUBE_C_UserConstructionScript, CallFunc_K2_SetWorldTransform_SweepHitResult) == 0x000370, "Member 'CUBE_C_UserConstructionScript::CallFunc_K2_SetWorldTransform_SweepHitResult' has a wrong offset!");
static_assert(offsetof(CUBE_C_UserConstructionScript, CallFunc_Greater_FloatFloat_ReturnValue) == 0x0003F8, "Member 'CUBE_C_UserConstructionScript::CallFunc_Greater_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(CUBE_C_UserConstructionScript, CallFunc_Subtract_IntInt_ReturnValue) == 0x0003FC, "Member 'CUBE_C_UserConstructionScript::CallFunc_Subtract_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(CUBE_C_UserConstructionScript, CallFunc_Max_ReturnValue) == 0x000400, "Member 'CUBE_C_UserConstructionScript::CallFunc_Max_ReturnValue' has a wrong offset!");
static_assert(offsetof(CUBE_C_UserConstructionScript, CallFunc_Fraction_ReturnValue) == 0x000404, "Member 'CUBE_C_UserConstructionScript::CallFunc_Fraction_ReturnValue' has a wrong offset!");
static_assert(offsetof(CUBE_C_UserConstructionScript, CallFunc_TLerp_ReturnValue) == 0x000410, "Member 'CUBE_C_UserConstructionScript::CallFunc_TLerp_ReturnValue' has a wrong offset!");
static_assert(offsetof(CUBE_C_UserConstructionScript, CallFunc_FCeil_ReturnValue) == 0x000440, "Member 'CUBE_C_UserConstructionScript::CallFunc_FCeil_ReturnValue' has a wrong offset!");
static_assert(offsetof(CUBE_C_UserConstructionScript, CallFunc_K2_SetWorldTransform_SweepHitResult1) == 0x000444, "Member 'CUBE_C_UserConstructionScript::CallFunc_K2_SetWorldTransform_SweepHitResult1' has a wrong offset!");
static_assert(offsetof(CUBE_C_UserConstructionScript, CallFunc_Array_Get_Item5) == 0x0004D0, "Member 'CUBE_C_UserConstructionScript::CallFunc_Array_Get_Item5' has a wrong offset!");
static_assert(offsetof(CUBE_C_UserConstructionScript, CallFunc_FFloor_ReturnValue) == 0x000510, "Member 'CUBE_C_UserConstructionScript::CallFunc_FFloor_ReturnValue' has a wrong offset!");
static_assert(offsetof(CUBE_C_UserConstructionScript, CallFunc_Array_Get_Item6) == 0x000520, "Member 'CUBE_C_UserConstructionScript::CallFunc_Array_Get_Item6' has a wrong offset!");
static_assert(offsetof(CUBE_C_UserConstructionScript, CallFunc_ComposeTransforms_ReturnValue) == 0x000560, "Member 'CUBE_C_UserConstructionScript::CallFunc_ComposeTransforms_ReturnValue' has a wrong offset!");
static_assert(offsetof(CUBE_C_UserConstructionScript, CallFunc_K2_SetRelativeTransform_SweepHitResult) == 0x000590, "Member 'CUBE_C_UserConstructionScript::CallFunc_K2_SetRelativeTransform_SweepHitResult' has a wrong offset!");

// Function CUBE.CUBE_C.FindBottomFace
// 0x0080 (0x0080 - 0x0000)
struct CUBE_C_FindBottomFace final
{
public:
	struct FTransform                             Transform;                                         // 0x0000(0x0030)(BlueprintVisible, BlueprintReadOnly, Parm, IsPlainOldData, NoDestructor)
	struct FVector                                Downward_Face;                                     // 0x0030(0x000C)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                ClosestDownwardVector;                             // 0x003C(0x000C)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         ClosestToDown;                                     // 0x0048(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable;                     // 0x004C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0050(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0054(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0058(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Array_Get_Item;                           // 0x005C(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0068(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_69[0x3];                                       // 0x0069(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_TransformDirection_ReturnValue;           // 0x006C(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Dot_VectorVector_ReturnValue;             // 0x0078(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_FloatFloat_ReturnValue;           // 0x007C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(CUBE_C_FindBottomFace) == 0x000010, "Wrong alignment on CUBE_C_FindBottomFace");
static_assert(sizeof(CUBE_C_FindBottomFace) == 0x000080, "Wrong size on CUBE_C_FindBottomFace");
static_assert(offsetof(CUBE_C_FindBottomFace, Transform) == 0x000000, "Member 'CUBE_C_FindBottomFace::Transform' has a wrong offset!");
static_assert(offsetof(CUBE_C_FindBottomFace, Downward_Face) == 0x000030, "Member 'CUBE_C_FindBottomFace::Downward_Face' has a wrong offset!");
static_assert(offsetof(CUBE_C_FindBottomFace, ClosestDownwardVector) == 0x00003C, "Member 'CUBE_C_FindBottomFace::ClosestDownwardVector' has a wrong offset!");
static_assert(offsetof(CUBE_C_FindBottomFace, ClosestToDown) == 0x000048, "Member 'CUBE_C_FindBottomFace::ClosestToDown' has a wrong offset!");
static_assert(offsetof(CUBE_C_FindBottomFace, Temp_int_Array_Index_Variable) == 0x00004C, "Member 'CUBE_C_FindBottomFace::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(CUBE_C_FindBottomFace, Temp_int_Loop_Counter_Variable) == 0x000050, "Member 'CUBE_C_FindBottomFace::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(CUBE_C_FindBottomFace, CallFunc_Add_IntInt_ReturnValue) == 0x000054, "Member 'CUBE_C_FindBottomFace::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(CUBE_C_FindBottomFace, CallFunc_Array_Length_ReturnValue) == 0x000058, "Member 'CUBE_C_FindBottomFace::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(CUBE_C_FindBottomFace, CallFunc_Array_Get_Item) == 0x00005C, "Member 'CUBE_C_FindBottomFace::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(CUBE_C_FindBottomFace, CallFunc_Less_IntInt_ReturnValue) == 0x000068, "Member 'CUBE_C_FindBottomFace::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(CUBE_C_FindBottomFace, CallFunc_TransformDirection_ReturnValue) == 0x00006C, "Member 'CUBE_C_FindBottomFace::CallFunc_TransformDirection_ReturnValue' has a wrong offset!");
static_assert(offsetof(CUBE_C_FindBottomFace, CallFunc_Dot_VectorVector_ReturnValue) == 0x000078, "Member 'CUBE_C_FindBottomFace::CallFunc_Dot_VectorVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(CUBE_C_FindBottomFace, CallFunc_Greater_FloatFloat_ReturnValue) == 0x00007C, "Member 'CUBE_C_FindBottomFace::CallFunc_Greater_FloatFloat_ReturnValue' has a wrong offset!");

// Function CUBE.CUBE_C.LaunchPlayerAway
// 0x0078 (0x0078 - 0x0000)
struct CUBE_C_LaunchPlayerAway final
{
public:
	struct FVector                                HitLocation;                                       // 0x0000(0x000C)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                HitNormal;                                         // 0x000C(0x000C)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class APlayerPawn_Athena_C*                   Player;                                            // 0x0018(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         ForceMultiplier;                                   // 0x0020(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          FlashCube;                                         // 0x0024(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_25[0x3];                                       // 0x0025(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_GetValueAtLevel_ReturnValue;              // 0x0028(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsWalking_ReturnValue;                    // 0x002C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_2D[0x3];                                       // 0x002D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_GetValueAtLevel_ReturnValue1;             // 0x0030(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable;                                // 0x0034(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_35[0x3];                                       // 0x0035(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_GetValueAtLevel_ReturnValue2;             // 0x0038(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Multiply_VectorFloat_ReturnValue;         // 0x003C(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         K2Node_Select_Default;                             // 0x0048(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_MakeVector_ReturnValue;                   // 0x004C(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Add_VectorVector_ReturnValue;             // 0x0058(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0064(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_65[0x3];                                       // 0x0065(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_Multiply_VectorFloat_ReturnValue1;        // 0x0068(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(CUBE_C_LaunchPlayerAway) == 0x000008, "Wrong alignment on CUBE_C_LaunchPlayerAway");
static_assert(sizeof(CUBE_C_LaunchPlayerAway) == 0x000078, "Wrong size on CUBE_C_LaunchPlayerAway");
static_assert(offsetof(CUBE_C_LaunchPlayerAway, HitLocation) == 0x000000, "Member 'CUBE_C_LaunchPlayerAway::HitLocation' has a wrong offset!");
static_assert(offsetof(CUBE_C_LaunchPlayerAway, HitNormal) == 0x00000C, "Member 'CUBE_C_LaunchPlayerAway::HitNormal' has a wrong offset!");
static_assert(offsetof(CUBE_C_LaunchPlayerAway, Player) == 0x000018, "Member 'CUBE_C_LaunchPlayerAway::Player' has a wrong offset!");
static_assert(offsetof(CUBE_C_LaunchPlayerAway, ForceMultiplier) == 0x000020, "Member 'CUBE_C_LaunchPlayerAway::ForceMultiplier' has a wrong offset!");
static_assert(offsetof(CUBE_C_LaunchPlayerAway, FlashCube) == 0x000024, "Member 'CUBE_C_LaunchPlayerAway::FlashCube' has a wrong offset!");
static_assert(offsetof(CUBE_C_LaunchPlayerAway, CallFunc_GetValueAtLevel_ReturnValue) == 0x000028, "Member 'CUBE_C_LaunchPlayerAway::CallFunc_GetValueAtLevel_ReturnValue' has a wrong offset!");
static_assert(offsetof(CUBE_C_LaunchPlayerAway, CallFunc_IsWalking_ReturnValue) == 0x00002C, "Member 'CUBE_C_LaunchPlayerAway::CallFunc_IsWalking_ReturnValue' has a wrong offset!");
static_assert(offsetof(CUBE_C_LaunchPlayerAway, CallFunc_GetValueAtLevel_ReturnValue1) == 0x000030, "Member 'CUBE_C_LaunchPlayerAway::CallFunc_GetValueAtLevel_ReturnValue1' has a wrong offset!");
static_assert(offsetof(CUBE_C_LaunchPlayerAway, Temp_bool_Variable) == 0x000034, "Member 'CUBE_C_LaunchPlayerAway::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(CUBE_C_LaunchPlayerAway, CallFunc_GetValueAtLevel_ReturnValue2) == 0x000038, "Member 'CUBE_C_LaunchPlayerAway::CallFunc_GetValueAtLevel_ReturnValue2' has a wrong offset!");
static_assert(offsetof(CUBE_C_LaunchPlayerAway, CallFunc_Multiply_VectorFloat_ReturnValue) == 0x00003C, "Member 'CUBE_C_LaunchPlayerAway::CallFunc_Multiply_VectorFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(CUBE_C_LaunchPlayerAway, K2Node_Select_Default) == 0x000048, "Member 'CUBE_C_LaunchPlayerAway::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(CUBE_C_LaunchPlayerAway, CallFunc_MakeVector_ReturnValue) == 0x00004C, "Member 'CUBE_C_LaunchPlayerAway::CallFunc_MakeVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(CUBE_C_LaunchPlayerAway, CallFunc_Add_VectorVector_ReturnValue) == 0x000058, "Member 'CUBE_C_LaunchPlayerAway::CallFunc_Add_VectorVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(CUBE_C_LaunchPlayerAway, CallFunc_IsValid_ReturnValue) == 0x000064, "Member 'CUBE_C_LaunchPlayerAway::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(CUBE_C_LaunchPlayerAway, CallFunc_Multiply_VectorFloat_ReturnValue1) == 0x000068, "Member 'CUBE_C_LaunchPlayerAway::CallFunc_Multiply_VectorFloat_ReturnValue1' has a wrong offset!");

// Function CUBE.CUBE_C.ShouldDie
// 0x0020 (0x0020 - 0x0000)
struct CUBE_C_ShouldDie final
{
public:
	float                                         Damage;                                            // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4[0x4];                                        // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class AController*                            EventInstigator;                                   // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 DamageCauser;                                      // 0x0010(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          ReturnValue;                                       // 0x0018(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
};
static_assert(alignof(CUBE_C_ShouldDie) == 0x000008, "Wrong alignment on CUBE_C_ShouldDie");
static_assert(sizeof(CUBE_C_ShouldDie) == 0x000020, "Wrong size on CUBE_C_ShouldDie");
static_assert(offsetof(CUBE_C_ShouldDie, Damage) == 0x000000, "Member 'CUBE_C_ShouldDie::Damage' has a wrong offset!");
static_assert(offsetof(CUBE_C_ShouldDie, EventInstigator) == 0x000008, "Member 'CUBE_C_ShouldDie::EventInstigator' has a wrong offset!");
static_assert(offsetof(CUBE_C_ShouldDie, DamageCauser) == 0x000010, "Member 'CUBE_C_ShouldDie::DamageCauser' has a wrong offset!");
static_assert(offsetof(CUBE_C_ShouldDie, ReturnValue) == 0x000018, "Member 'CUBE_C_ShouldDie::ReturnValue' has a wrong offset!");

// Function CUBE.CUBE_C.DoFindDownFace
// 0x02C0 (0x02C0 - 0x0000)
struct CUBE_C_DoFindDownFace final
{
public:
	int32                                         StepToTest;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         FaceIndex;                                         // 0x0004(0x0004)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<class AActor*>                         IgnoredActors;                                     // 0x0008(0x0010)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate)
	float                                         BestGuessLength;                                   // 0x0018(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         BestGuess;                                         // 0x001C(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                TraceStartLocation;                                // 0x0020(0x000C)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                TraceTowardsVector;                                // 0x002C(0x000C)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_38[0x8];                                       // 0x0038(0x0008)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTransform                             CurrentSocketTransform;                            // 0x0040(0x0030)(Edit, BlueprintVisible, IsPlainOldData, NoDestructor)
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0070(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0074(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0078(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_7C[0x4];                                       // 0x007C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTransform                             CallFunc_GetTransform_ReturnValue;                 // 0x0080(0x0030)(IsPlainOldData, NoDestructor)
	struct FVector                                CallFunc_Multiply_VectorFloat_ReturnValue;         // 0x00B0(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Add_VectorVector_ReturnValue;             // 0x00BC(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_C8[0x8];                                       // 0x00C8(0x0008)(Fixing Size After Last Property [ Dumper-7 ])
	struct FCubeStruct                            CallFunc_Array_Get_Item;                           // 0x00D0(0x0040)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FHitResult                             CallFunc_LineTraceSingle_OutHit;                   // 0x0110(0x0088)(IsPlainOldData, NoDestructor, ContainsInstancedReference)
	bool                                          CallFunc_LineTraceSingle_ReturnValue;              // 0x0198(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_199[0x7];                                      // 0x0199(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTransform                             CallFunc_ComposeTransforms_ReturnValue;            // 0x01A0(0x0030)(IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BreakHitResult_bBlockingHit;              // 0x01D0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BreakHitResult_bInitialOverlap;           // 0x01D1(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1D2[0x2];                                      // 0x01D2(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_BreakHitResult_Time;                      // 0x01D4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakHitResult_Distance;                  // 0x01D8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_Location;                  // 0x01DC(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_ImpactPoint;               // 0x01E8(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_Normal;                    // 0x01F4(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_ImpactNormal;              // 0x0200(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_20C[0x4];                                      // 0x020C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UPhysicalMaterial*                      CallFunc_BreakHitResult_PhysMat;                   // 0x0210(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 CallFunc_BreakHitResult_HitActor;                  // 0x0218(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UPrimitiveComponent*                    CallFunc_BreakHitResult_HitComponent;              // 0x0220(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   CallFunc_BreakHitResult_HitBoneName;               // 0x0228(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_BreakHitResult_HitItem;                   // 0x0230(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_BreakHitResult_FaceIndex;                 // 0x0234(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_TraceStart;                // 0x0238(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_TraceEnd;                  // 0x0244(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakTransform_Location;                  // 0x0250(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               CallFunc_BreakTransform_Rotation;                  // 0x025C(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FVector                                CallFunc_BreakTransform_Scale;                     // 0x0268(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_274[0x4];                                      // 0x0274(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class ABuildingProp*                          K2Node_DynamicCast_AsBuilding_Prop;                // 0x0278(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0280(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_281[0x7];                                      // 0x0281(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class ABuildingActor*                         K2Node_DynamicCast_AsBuilding_Actor;               // 0x0288(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess1;                      // 0x0290(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_291[0x3];                                      // 0x0291(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Add_ReturnValue;                    // 0x0294(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanOR_ReturnValue;                    // 0x0298(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Less_FloatFloat_ReturnValue;              // 0x0299(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_29A[0x2];                                      // 0x029A(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_Array_Get_Item1;                          // 0x029C(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x02A8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_TransformDirection_ReturnValue;           // 0x02AC(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x02B8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(CUBE_C_DoFindDownFace) == 0x000010, "Wrong alignment on CUBE_C_DoFindDownFace");
static_assert(sizeof(CUBE_C_DoFindDownFace) == 0x0002C0, "Wrong size on CUBE_C_DoFindDownFace");
static_assert(offsetof(CUBE_C_DoFindDownFace, StepToTest) == 0x000000, "Member 'CUBE_C_DoFindDownFace::StepToTest' has a wrong offset!");
static_assert(offsetof(CUBE_C_DoFindDownFace, FaceIndex) == 0x000004, "Member 'CUBE_C_DoFindDownFace::FaceIndex' has a wrong offset!");
static_assert(offsetof(CUBE_C_DoFindDownFace, IgnoredActors) == 0x000008, "Member 'CUBE_C_DoFindDownFace::IgnoredActors' has a wrong offset!");
static_assert(offsetof(CUBE_C_DoFindDownFace, BestGuessLength) == 0x000018, "Member 'CUBE_C_DoFindDownFace::BestGuessLength' has a wrong offset!");
static_assert(offsetof(CUBE_C_DoFindDownFace, BestGuess) == 0x00001C, "Member 'CUBE_C_DoFindDownFace::BestGuess' has a wrong offset!");
static_assert(offsetof(CUBE_C_DoFindDownFace, TraceStartLocation) == 0x000020, "Member 'CUBE_C_DoFindDownFace::TraceStartLocation' has a wrong offset!");
static_assert(offsetof(CUBE_C_DoFindDownFace, TraceTowardsVector) == 0x00002C, "Member 'CUBE_C_DoFindDownFace::TraceTowardsVector' has a wrong offset!");
static_assert(offsetof(CUBE_C_DoFindDownFace, CurrentSocketTransform) == 0x000040, "Member 'CUBE_C_DoFindDownFace::CurrentSocketTransform' has a wrong offset!");
static_assert(offsetof(CUBE_C_DoFindDownFace, Temp_int_Array_Index_Variable) == 0x000070, "Member 'CUBE_C_DoFindDownFace::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(CUBE_C_DoFindDownFace, Temp_int_Loop_Counter_Variable) == 0x000074, "Member 'CUBE_C_DoFindDownFace::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(CUBE_C_DoFindDownFace, CallFunc_Add_IntInt_ReturnValue) == 0x000078, "Member 'CUBE_C_DoFindDownFace::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(CUBE_C_DoFindDownFace, CallFunc_GetTransform_ReturnValue) == 0x000080, "Member 'CUBE_C_DoFindDownFace::CallFunc_GetTransform_ReturnValue' has a wrong offset!");
static_assert(offsetof(CUBE_C_DoFindDownFace, CallFunc_Multiply_VectorFloat_ReturnValue) == 0x0000B0, "Member 'CUBE_C_DoFindDownFace::CallFunc_Multiply_VectorFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(CUBE_C_DoFindDownFace, CallFunc_Add_VectorVector_ReturnValue) == 0x0000BC, "Member 'CUBE_C_DoFindDownFace::CallFunc_Add_VectorVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(CUBE_C_DoFindDownFace, CallFunc_Array_Get_Item) == 0x0000D0, "Member 'CUBE_C_DoFindDownFace::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(CUBE_C_DoFindDownFace, CallFunc_LineTraceSingle_OutHit) == 0x000110, "Member 'CUBE_C_DoFindDownFace::CallFunc_LineTraceSingle_OutHit' has a wrong offset!");
static_assert(offsetof(CUBE_C_DoFindDownFace, CallFunc_LineTraceSingle_ReturnValue) == 0x000198, "Member 'CUBE_C_DoFindDownFace::CallFunc_LineTraceSingle_ReturnValue' has a wrong offset!");
static_assert(offsetof(CUBE_C_DoFindDownFace, CallFunc_ComposeTransforms_ReturnValue) == 0x0001A0, "Member 'CUBE_C_DoFindDownFace::CallFunc_ComposeTransforms_ReturnValue' has a wrong offset!");
static_assert(offsetof(CUBE_C_DoFindDownFace, CallFunc_BreakHitResult_bBlockingHit) == 0x0001D0, "Member 'CUBE_C_DoFindDownFace::CallFunc_BreakHitResult_bBlockingHit' has a wrong offset!");
static_assert(offsetof(CUBE_C_DoFindDownFace, CallFunc_BreakHitResult_bInitialOverlap) == 0x0001D1, "Member 'CUBE_C_DoFindDownFace::CallFunc_BreakHitResult_bInitialOverlap' has a wrong offset!");
static_assert(offsetof(CUBE_C_DoFindDownFace, CallFunc_BreakHitResult_Time) == 0x0001D4, "Member 'CUBE_C_DoFindDownFace::CallFunc_BreakHitResult_Time' has a wrong offset!");
static_assert(offsetof(CUBE_C_DoFindDownFace, CallFunc_BreakHitResult_Distance) == 0x0001D8, "Member 'CUBE_C_DoFindDownFace::CallFunc_BreakHitResult_Distance' has a wrong offset!");
static_assert(offsetof(CUBE_C_DoFindDownFace, CallFunc_BreakHitResult_Location) == 0x0001DC, "Member 'CUBE_C_DoFindDownFace::CallFunc_BreakHitResult_Location' has a wrong offset!");
static_assert(offsetof(CUBE_C_DoFindDownFace, CallFunc_BreakHitResult_ImpactPoint) == 0x0001E8, "Member 'CUBE_C_DoFindDownFace::CallFunc_BreakHitResult_ImpactPoint' has a wrong offset!");
static_assert(offsetof(CUBE_C_DoFindDownFace, CallFunc_BreakHitResult_Normal) == 0x0001F4, "Member 'CUBE_C_DoFindDownFace::CallFunc_BreakHitResult_Normal' has a wrong offset!");
static_assert(offsetof(CUBE_C_DoFindDownFace, CallFunc_BreakHitResult_ImpactNormal) == 0x000200, "Member 'CUBE_C_DoFindDownFace::CallFunc_BreakHitResult_ImpactNormal' has a wrong offset!");
static_assert(offsetof(CUBE_C_DoFindDownFace, CallFunc_BreakHitResult_PhysMat) == 0x000210, "Member 'CUBE_C_DoFindDownFace::CallFunc_BreakHitResult_PhysMat' has a wrong offset!");
static_assert(offsetof(CUBE_C_DoFindDownFace, CallFunc_BreakHitResult_HitActor) == 0x000218, "Member 'CUBE_C_DoFindDownFace::CallFunc_BreakHitResult_HitActor' has a wrong offset!");
static_assert(offsetof(CUBE_C_DoFindDownFace, CallFunc_BreakHitResult_HitComponent) == 0x000220, "Member 'CUBE_C_DoFindDownFace::CallFunc_BreakHitResult_HitComponent' has a wrong offset!");
static_assert(offsetof(CUBE_C_DoFindDownFace, CallFunc_BreakHitResult_HitBoneName) == 0x000228, "Member 'CUBE_C_DoFindDownFace::CallFunc_BreakHitResult_HitBoneName' has a wrong offset!");
static_assert(offsetof(CUBE_C_DoFindDownFace, CallFunc_BreakHitResult_HitItem) == 0x000230, "Member 'CUBE_C_DoFindDownFace::CallFunc_BreakHitResult_HitItem' has a wrong offset!");
static_assert(offsetof(CUBE_C_DoFindDownFace, CallFunc_BreakHitResult_FaceIndex) == 0x000234, "Member 'CUBE_C_DoFindDownFace::CallFunc_BreakHitResult_FaceIndex' has a wrong offset!");
static_assert(offsetof(CUBE_C_DoFindDownFace, CallFunc_BreakHitResult_TraceStart) == 0x000238, "Member 'CUBE_C_DoFindDownFace::CallFunc_BreakHitResult_TraceStart' has a wrong offset!");
static_assert(offsetof(CUBE_C_DoFindDownFace, CallFunc_BreakHitResult_TraceEnd) == 0x000244, "Member 'CUBE_C_DoFindDownFace::CallFunc_BreakHitResult_TraceEnd' has a wrong offset!");
static_assert(offsetof(CUBE_C_DoFindDownFace, CallFunc_BreakTransform_Location) == 0x000250, "Member 'CUBE_C_DoFindDownFace::CallFunc_BreakTransform_Location' has a wrong offset!");
static_assert(offsetof(CUBE_C_DoFindDownFace, CallFunc_BreakTransform_Rotation) == 0x00025C, "Member 'CUBE_C_DoFindDownFace::CallFunc_BreakTransform_Rotation' has a wrong offset!");
static_assert(offsetof(CUBE_C_DoFindDownFace, CallFunc_BreakTransform_Scale) == 0x000268, "Member 'CUBE_C_DoFindDownFace::CallFunc_BreakTransform_Scale' has a wrong offset!");
static_assert(offsetof(CUBE_C_DoFindDownFace, K2Node_DynamicCast_AsBuilding_Prop) == 0x000278, "Member 'CUBE_C_DoFindDownFace::K2Node_DynamicCast_AsBuilding_Prop' has a wrong offset!");
static_assert(offsetof(CUBE_C_DoFindDownFace, K2Node_DynamicCast_bSuccess) == 0x000280, "Member 'CUBE_C_DoFindDownFace::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(CUBE_C_DoFindDownFace, K2Node_DynamicCast_AsBuilding_Actor) == 0x000288, "Member 'CUBE_C_DoFindDownFace::K2Node_DynamicCast_AsBuilding_Actor' has a wrong offset!");
static_assert(offsetof(CUBE_C_DoFindDownFace, K2Node_DynamicCast_bSuccess1) == 0x000290, "Member 'CUBE_C_DoFindDownFace::K2Node_DynamicCast_bSuccess1' has a wrong offset!");
static_assert(offsetof(CUBE_C_DoFindDownFace, CallFunc_Array_Add_ReturnValue) == 0x000294, "Member 'CUBE_C_DoFindDownFace::CallFunc_Array_Add_ReturnValue' has a wrong offset!");
static_assert(offsetof(CUBE_C_DoFindDownFace, CallFunc_BooleanOR_ReturnValue) == 0x000298, "Member 'CUBE_C_DoFindDownFace::CallFunc_BooleanOR_ReturnValue' has a wrong offset!");
static_assert(offsetof(CUBE_C_DoFindDownFace, CallFunc_Less_FloatFloat_ReturnValue) == 0x000299, "Member 'CUBE_C_DoFindDownFace::CallFunc_Less_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(CUBE_C_DoFindDownFace, CallFunc_Array_Get_Item1) == 0x00029C, "Member 'CUBE_C_DoFindDownFace::CallFunc_Array_Get_Item1' has a wrong offset!");
static_assert(offsetof(CUBE_C_DoFindDownFace, CallFunc_Array_Length_ReturnValue) == 0x0002A8, "Member 'CUBE_C_DoFindDownFace::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(CUBE_C_DoFindDownFace, CallFunc_TransformDirection_ReturnValue) == 0x0002AC, "Member 'CUBE_C_DoFindDownFace::CallFunc_TransformDirection_ReturnValue' has a wrong offset!");
static_assert(offsetof(CUBE_C_DoFindDownFace, CallFunc_Less_IntInt_ReturnValue) == 0x0002B8, "Member 'CUBE_C_DoFindDownFace::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");

// Function CUBE.CUBE_C.TraceCubeShape
// 0x01E0 (0x01E0 - 0x0000)
struct CUBE_C_TraceCubeShape final
{
public:
	bool                                          Hit;                                               // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1[0x7];                                        // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<EObjectTypeQuery>                      K2Node_MakeArray_Array;                            // 0x0008(0x0010)(ConstParm, ZeroConstructor, ReferenceParm)
	uint8                                         Pad_18[0x8];                                       // 0x0018(0x0008)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTransform                             CallFunc_K2_GetComponentToWorld_ReturnValue;       // 0x0020(0x0030)(IsPlainOldData, NoDestructor)
	struct FVector                                CallFunc_BreakTransform_Location;                  // 0x0050(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               CallFunc_BreakTransform_Rotation;                  // 0x005C(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FVector                                CallFunc_BreakTransform_Scale;                     // 0x0068(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FHitResult                             CallFunc_BoxTraceSingleForObjects_OutHit;          // 0x0074(0x0088)(IsPlainOldData, NoDestructor, ContainsInstancedReference)
	bool                                          CallFunc_BoxTraceSingleForObjects_ReturnValue;     // 0x00FC(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BreakHitResult_bBlockingHit;              // 0x00FD(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BreakHitResult_bInitialOverlap;           // 0x00FE(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_FF[0x1];                                       // 0x00FF(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_BreakHitResult_Time;                      // 0x0100(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakHitResult_Distance;                  // 0x0104(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_Location;                  // 0x0108(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_ImpactPoint;               // 0x0114(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_Normal;                    // 0x0120(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_ImpactNormal;              // 0x012C(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UPhysicalMaterial*                      CallFunc_BreakHitResult_PhysMat;                   // 0x0138(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 CallFunc_BreakHitResult_HitActor;                  // 0x0140(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UPrimitiveComponent*                    CallFunc_BreakHitResult_HitComponent;              // 0x0148(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   CallFunc_BreakHitResult_HitBoneName;               // 0x0150(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_BreakHitResult_HitItem;                   // 0x0158(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_BreakHitResult_FaceIndex;                 // 0x015C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_TraceStart;                // 0x0160(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_TraceEnd;                  // 0x016C(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AFortAthenaVehicle*                     K2Node_DynamicCast_AsFort_Athena_Vehicle;          // 0x0178(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0180(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_181[0x7];                                      // 0x0181(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class ABuildingActor*                         K2Node_DynamicCast_AsBuilding_Actor;               // 0x0188(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess1;                      // 0x0190(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_191[0x7];                                      // 0x0191(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CallFunc_GetObjectName_ReturnValue;                // 0x0198(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_GetObjectName_ReturnValue1;               // 0x01A8(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Add_ReturnValue;                    // 0x01B8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1BC[0x4];                                      // 0x01BC(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class APlayerPawn_Athena_C*                   K2Node_DynamicCast_AsPlayer_Pawn_Athena;           // 0x01C0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess2;                      // 0x01C8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1C9[0x7];                                      // 0x01C9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class ABuildingProp*                          K2Node_DynamicCast_AsBuilding_Prop;                // 0x01D0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess3;                      // 0x01D8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(CUBE_C_TraceCubeShape) == 0x000010, "Wrong alignment on CUBE_C_TraceCubeShape");
static_assert(sizeof(CUBE_C_TraceCubeShape) == 0x0001E0, "Wrong size on CUBE_C_TraceCubeShape");
static_assert(offsetof(CUBE_C_TraceCubeShape, Hit) == 0x000000, "Member 'CUBE_C_TraceCubeShape::Hit' has a wrong offset!");
static_assert(offsetof(CUBE_C_TraceCubeShape, K2Node_MakeArray_Array) == 0x000008, "Member 'CUBE_C_TraceCubeShape::K2Node_MakeArray_Array' has a wrong offset!");
static_assert(offsetof(CUBE_C_TraceCubeShape, CallFunc_K2_GetComponentToWorld_ReturnValue) == 0x000020, "Member 'CUBE_C_TraceCubeShape::CallFunc_K2_GetComponentToWorld_ReturnValue' has a wrong offset!");
static_assert(offsetof(CUBE_C_TraceCubeShape, CallFunc_BreakTransform_Location) == 0x000050, "Member 'CUBE_C_TraceCubeShape::CallFunc_BreakTransform_Location' has a wrong offset!");
static_assert(offsetof(CUBE_C_TraceCubeShape, CallFunc_BreakTransform_Rotation) == 0x00005C, "Member 'CUBE_C_TraceCubeShape::CallFunc_BreakTransform_Rotation' has a wrong offset!");
static_assert(offsetof(CUBE_C_TraceCubeShape, CallFunc_BreakTransform_Scale) == 0x000068, "Member 'CUBE_C_TraceCubeShape::CallFunc_BreakTransform_Scale' has a wrong offset!");
static_assert(offsetof(CUBE_C_TraceCubeShape, CallFunc_BoxTraceSingleForObjects_OutHit) == 0x000074, "Member 'CUBE_C_TraceCubeShape::CallFunc_BoxTraceSingleForObjects_OutHit' has a wrong offset!");
static_assert(offsetof(CUBE_C_TraceCubeShape, CallFunc_BoxTraceSingleForObjects_ReturnValue) == 0x0000FC, "Member 'CUBE_C_TraceCubeShape::CallFunc_BoxTraceSingleForObjects_ReturnValue' has a wrong offset!");
static_assert(offsetof(CUBE_C_TraceCubeShape, CallFunc_BreakHitResult_bBlockingHit) == 0x0000FD, "Member 'CUBE_C_TraceCubeShape::CallFunc_BreakHitResult_bBlockingHit' has a wrong offset!");
static_assert(offsetof(CUBE_C_TraceCubeShape, CallFunc_BreakHitResult_bInitialOverlap) == 0x0000FE, "Member 'CUBE_C_TraceCubeShape::CallFunc_BreakHitResult_bInitialOverlap' has a wrong offset!");
static_assert(offsetof(CUBE_C_TraceCubeShape, CallFunc_BreakHitResult_Time) == 0x000100, "Member 'CUBE_C_TraceCubeShape::CallFunc_BreakHitResult_Time' has a wrong offset!");
static_assert(offsetof(CUBE_C_TraceCubeShape, CallFunc_BreakHitResult_Distance) == 0x000104, "Member 'CUBE_C_TraceCubeShape::CallFunc_BreakHitResult_Distance' has a wrong offset!");
static_assert(offsetof(CUBE_C_TraceCubeShape, CallFunc_BreakHitResult_Location) == 0x000108, "Member 'CUBE_C_TraceCubeShape::CallFunc_BreakHitResult_Location' has a wrong offset!");
static_assert(offsetof(CUBE_C_TraceCubeShape, CallFunc_BreakHitResult_ImpactPoint) == 0x000114, "Member 'CUBE_C_TraceCubeShape::CallFunc_BreakHitResult_ImpactPoint' has a wrong offset!");
static_assert(offsetof(CUBE_C_TraceCubeShape, CallFunc_BreakHitResult_Normal) == 0x000120, "Member 'CUBE_C_TraceCubeShape::CallFunc_BreakHitResult_Normal' has a wrong offset!");
static_assert(offsetof(CUBE_C_TraceCubeShape, CallFunc_BreakHitResult_ImpactNormal) == 0x00012C, "Member 'CUBE_C_TraceCubeShape::CallFunc_BreakHitResult_ImpactNormal' has a wrong offset!");
static_assert(offsetof(CUBE_C_TraceCubeShape, CallFunc_BreakHitResult_PhysMat) == 0x000138, "Member 'CUBE_C_TraceCubeShape::CallFunc_BreakHitResult_PhysMat' has a wrong offset!");
static_assert(offsetof(CUBE_C_TraceCubeShape, CallFunc_BreakHitResult_HitActor) == 0x000140, "Member 'CUBE_C_TraceCubeShape::CallFunc_BreakHitResult_HitActor' has a wrong offset!");
static_assert(offsetof(CUBE_C_TraceCubeShape, CallFunc_BreakHitResult_HitComponent) == 0x000148, "Member 'CUBE_C_TraceCubeShape::CallFunc_BreakHitResult_HitComponent' has a wrong offset!");
static_assert(offsetof(CUBE_C_TraceCubeShape, CallFunc_BreakHitResult_HitBoneName) == 0x000150, "Member 'CUBE_C_TraceCubeShape::CallFunc_BreakHitResult_HitBoneName' has a wrong offset!");
static_assert(offsetof(CUBE_C_TraceCubeShape, CallFunc_BreakHitResult_HitItem) == 0x000158, "Member 'CUBE_C_TraceCubeShape::CallFunc_BreakHitResult_HitItem' has a wrong offset!");
static_assert(offsetof(CUBE_C_TraceCubeShape, CallFunc_BreakHitResult_FaceIndex) == 0x00015C, "Member 'CUBE_C_TraceCubeShape::CallFunc_BreakHitResult_FaceIndex' has a wrong offset!");
static_assert(offsetof(CUBE_C_TraceCubeShape, CallFunc_BreakHitResult_TraceStart) == 0x000160, "Member 'CUBE_C_TraceCubeShape::CallFunc_BreakHitResult_TraceStart' has a wrong offset!");
static_assert(offsetof(CUBE_C_TraceCubeShape, CallFunc_BreakHitResult_TraceEnd) == 0x00016C, "Member 'CUBE_C_TraceCubeShape::CallFunc_BreakHitResult_TraceEnd' has a wrong offset!");
static_assert(offsetof(CUBE_C_TraceCubeShape, K2Node_DynamicCast_AsFort_Athena_Vehicle) == 0x000178, "Member 'CUBE_C_TraceCubeShape::K2Node_DynamicCast_AsFort_Athena_Vehicle' has a wrong offset!");
static_assert(offsetof(CUBE_C_TraceCubeShape, K2Node_DynamicCast_bSuccess) == 0x000180, "Member 'CUBE_C_TraceCubeShape::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(CUBE_C_TraceCubeShape, K2Node_DynamicCast_AsBuilding_Actor) == 0x000188, "Member 'CUBE_C_TraceCubeShape::K2Node_DynamicCast_AsBuilding_Actor' has a wrong offset!");
static_assert(offsetof(CUBE_C_TraceCubeShape, K2Node_DynamicCast_bSuccess1) == 0x000190, "Member 'CUBE_C_TraceCubeShape::K2Node_DynamicCast_bSuccess1' has a wrong offset!");
static_assert(offsetof(CUBE_C_TraceCubeShape, CallFunc_GetObjectName_ReturnValue) == 0x000198, "Member 'CUBE_C_TraceCubeShape::CallFunc_GetObjectName_ReturnValue' has a wrong offset!");
static_assert(offsetof(CUBE_C_TraceCubeShape, CallFunc_GetObjectName_ReturnValue1) == 0x0001A8, "Member 'CUBE_C_TraceCubeShape::CallFunc_GetObjectName_ReturnValue1' has a wrong offset!");
static_assert(offsetof(CUBE_C_TraceCubeShape, CallFunc_Array_Add_ReturnValue) == 0x0001B8, "Member 'CUBE_C_TraceCubeShape::CallFunc_Array_Add_ReturnValue' has a wrong offset!");
static_assert(offsetof(CUBE_C_TraceCubeShape, K2Node_DynamicCast_AsPlayer_Pawn_Athena) == 0x0001C0, "Member 'CUBE_C_TraceCubeShape::K2Node_DynamicCast_AsPlayer_Pawn_Athena' has a wrong offset!");
static_assert(offsetof(CUBE_C_TraceCubeShape, K2Node_DynamicCast_bSuccess2) == 0x0001C8, "Member 'CUBE_C_TraceCubeShape::K2Node_DynamicCast_bSuccess2' has a wrong offset!");
static_assert(offsetof(CUBE_C_TraceCubeShape, K2Node_DynamicCast_AsBuilding_Prop) == 0x0001D0, "Member 'CUBE_C_TraceCubeShape::K2Node_DynamicCast_AsBuilding_Prop' has a wrong offset!");
static_assert(offsetof(CUBE_C_TraceCubeShape, K2Node_DynamicCast_bSuccess3) == 0x0001D8, "Member 'CUBE_C_TraceCubeShape::K2Node_DynamicCast_bSuccess3' has a wrong offset!");

// Function CUBE.CUBE_C.CalculateNextMove
// 0x00E0 (0x00E0 - 0x0000)
struct CUBE_C_CalculateNextMove final
{
public:
	struct FTimespan                              TimespanTillEnd;                                   // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	int32                                         RuneDestination_0;                                 // 0x0008(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         NextIndex;                                         // 0x000C(0x0004)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         SecondsTillMove;                                   // 0x0010(0x0004)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         PreviousSteps;                                     // 0x0014(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         Seconds;                                           // 0x0018(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         StepsThisRunePath;                                 // 0x001C(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         TestNextIndex;                                     // 0x0020(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         StepProgress;                                      // 0x0024(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_FFloor_ReturnValue;                       // 0x0028(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x002C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Subtract_IntInt_ReturnValue;              // 0x0030(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_IntInt_ReturnValue;            // 0x0034(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_35[0x3];                                       // 0x0035(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Get_Item;                           // 0x0038(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Divide_FloatFloat_ReturnValue;            // 0x003C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue1;                  // 0x0040(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Subtract_IntInt_ReturnValue1;             // 0x0044(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Conv_IntToFloat_ReturnValue;              // 0x0048(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Conv_IntToFloat_ReturnValue1;             // 0x004C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Divide_FloatFloat_ReturnValue1;           // 0x0050(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Conv_IntToFloat_ReturnValue2;             // 0x0054(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Subtract_FloatFloat_ReturnValue;          // 0x0058(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue2;                  // 0x005C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Variable;                                 // 0x0060(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetTotalSeconds_ReturnValue;              // 0x0064(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Multiply_FloatFloat_ReturnValue;          // 0x0068(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Subtract_FloatFloat_ReturnValue1;         // 0x006C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Subtract_FloatFloat_ReturnValue2;         // 0x0070(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_TimespanRatio_ReturnValue;                // 0x0074(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Subtract_FloatFloat_ReturnValue3;         // 0x0078(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_7C[0x4];                                       // 0x007C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FCubeStruct                            CallFunc_Array_Get_Item1;                          // 0x0080(0x0040)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_FloatFloat_ReturnValue;        // 0x00C0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_C1[0x3];                                       // 0x00C1(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_Multiply_FloatFloat_ReturnValue1;         // 0x00C4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UCurveFloat*                            CallFunc_Map_Find_Value;                           // 0x00C8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Map_Find_ReturnValue;                     // 0x00D0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_D1[0x3];                                       // 0x00D1(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Get_Item2;                          // 0x00D4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(CUBE_C_CalculateNextMove) == 0x000010, "Wrong alignment on CUBE_C_CalculateNextMove");
static_assert(sizeof(CUBE_C_CalculateNextMove) == 0x0000E0, "Wrong size on CUBE_C_CalculateNextMove");
static_assert(offsetof(CUBE_C_CalculateNextMove, TimespanTillEnd) == 0x000000, "Member 'CUBE_C_CalculateNextMove::TimespanTillEnd' has a wrong offset!");
static_assert(offsetof(CUBE_C_CalculateNextMove, RuneDestination_0) == 0x000008, "Member 'CUBE_C_CalculateNextMove::RuneDestination_0' has a wrong offset!");
static_assert(offsetof(CUBE_C_CalculateNextMove, NextIndex) == 0x00000C, "Member 'CUBE_C_CalculateNextMove::NextIndex' has a wrong offset!");
static_assert(offsetof(CUBE_C_CalculateNextMove, SecondsTillMove) == 0x000010, "Member 'CUBE_C_CalculateNextMove::SecondsTillMove' has a wrong offset!");
static_assert(offsetof(CUBE_C_CalculateNextMove, PreviousSteps) == 0x000014, "Member 'CUBE_C_CalculateNextMove::PreviousSteps' has a wrong offset!");
static_assert(offsetof(CUBE_C_CalculateNextMove, Seconds) == 0x000018, "Member 'CUBE_C_CalculateNextMove::Seconds' has a wrong offset!");
static_assert(offsetof(CUBE_C_CalculateNextMove, StepsThisRunePath) == 0x00001C, "Member 'CUBE_C_CalculateNextMove::StepsThisRunePath' has a wrong offset!");
static_assert(offsetof(CUBE_C_CalculateNextMove, TestNextIndex) == 0x000020, "Member 'CUBE_C_CalculateNextMove::TestNextIndex' has a wrong offset!");
static_assert(offsetof(CUBE_C_CalculateNextMove, StepProgress) == 0x000024, "Member 'CUBE_C_CalculateNextMove::StepProgress' has a wrong offset!");
static_assert(offsetof(CUBE_C_CalculateNextMove, CallFunc_FFloor_ReturnValue) == 0x000028, "Member 'CUBE_C_CalculateNextMove::CallFunc_FFloor_ReturnValue' has a wrong offset!");
static_assert(offsetof(CUBE_C_CalculateNextMove, CallFunc_Add_IntInt_ReturnValue) == 0x00002C, "Member 'CUBE_C_CalculateNextMove::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(CUBE_C_CalculateNextMove, CallFunc_Subtract_IntInt_ReturnValue) == 0x000030, "Member 'CUBE_C_CalculateNextMove::CallFunc_Subtract_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(CUBE_C_CalculateNextMove, CallFunc_EqualEqual_IntInt_ReturnValue) == 0x000034, "Member 'CUBE_C_CalculateNextMove::CallFunc_EqualEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(CUBE_C_CalculateNextMove, CallFunc_Array_Get_Item) == 0x000038, "Member 'CUBE_C_CalculateNextMove::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(CUBE_C_CalculateNextMove, CallFunc_Divide_FloatFloat_ReturnValue) == 0x00003C, "Member 'CUBE_C_CalculateNextMove::CallFunc_Divide_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(CUBE_C_CalculateNextMove, CallFunc_Add_IntInt_ReturnValue1) == 0x000040, "Member 'CUBE_C_CalculateNextMove::CallFunc_Add_IntInt_ReturnValue1' has a wrong offset!");
static_assert(offsetof(CUBE_C_CalculateNextMove, CallFunc_Subtract_IntInt_ReturnValue1) == 0x000044, "Member 'CUBE_C_CalculateNextMove::CallFunc_Subtract_IntInt_ReturnValue1' has a wrong offset!");
static_assert(offsetof(CUBE_C_CalculateNextMove, CallFunc_Conv_IntToFloat_ReturnValue) == 0x000048, "Member 'CUBE_C_CalculateNextMove::CallFunc_Conv_IntToFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(CUBE_C_CalculateNextMove, CallFunc_Conv_IntToFloat_ReturnValue1) == 0x00004C, "Member 'CUBE_C_CalculateNextMove::CallFunc_Conv_IntToFloat_ReturnValue1' has a wrong offset!");
static_assert(offsetof(CUBE_C_CalculateNextMove, CallFunc_Divide_FloatFloat_ReturnValue1) == 0x000050, "Member 'CUBE_C_CalculateNextMove::CallFunc_Divide_FloatFloat_ReturnValue1' has a wrong offset!");
static_assert(offsetof(CUBE_C_CalculateNextMove, CallFunc_Conv_IntToFloat_ReturnValue2) == 0x000054, "Member 'CUBE_C_CalculateNextMove::CallFunc_Conv_IntToFloat_ReturnValue2' has a wrong offset!");
static_assert(offsetof(CUBE_C_CalculateNextMove, CallFunc_Subtract_FloatFloat_ReturnValue) == 0x000058, "Member 'CUBE_C_CalculateNextMove::CallFunc_Subtract_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(CUBE_C_CalculateNextMove, CallFunc_Add_IntInt_ReturnValue2) == 0x00005C, "Member 'CUBE_C_CalculateNextMove::CallFunc_Add_IntInt_ReturnValue2' has a wrong offset!");
static_assert(offsetof(CUBE_C_CalculateNextMove, Temp_int_Variable) == 0x000060, "Member 'CUBE_C_CalculateNextMove::Temp_int_Variable' has a wrong offset!");
static_assert(offsetof(CUBE_C_CalculateNextMove, CallFunc_GetTotalSeconds_ReturnValue) == 0x000064, "Member 'CUBE_C_CalculateNextMove::CallFunc_GetTotalSeconds_ReturnValue' has a wrong offset!");
static_assert(offsetof(CUBE_C_CalculateNextMove, CallFunc_Multiply_FloatFloat_ReturnValue) == 0x000068, "Member 'CUBE_C_CalculateNextMove::CallFunc_Multiply_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(CUBE_C_CalculateNextMove, CallFunc_Subtract_FloatFloat_ReturnValue1) == 0x00006C, "Member 'CUBE_C_CalculateNextMove::CallFunc_Subtract_FloatFloat_ReturnValue1' has a wrong offset!");
static_assert(offsetof(CUBE_C_CalculateNextMove, CallFunc_Subtract_FloatFloat_ReturnValue2) == 0x000070, "Member 'CUBE_C_CalculateNextMove::CallFunc_Subtract_FloatFloat_ReturnValue2' has a wrong offset!");
static_assert(offsetof(CUBE_C_CalculateNextMove, CallFunc_TimespanRatio_ReturnValue) == 0x000074, "Member 'CUBE_C_CalculateNextMove::CallFunc_TimespanRatio_ReturnValue' has a wrong offset!");
static_assert(offsetof(CUBE_C_CalculateNextMove, CallFunc_Subtract_FloatFloat_ReturnValue3) == 0x000078, "Member 'CUBE_C_CalculateNextMove::CallFunc_Subtract_FloatFloat_ReturnValue3' has a wrong offset!");
static_assert(offsetof(CUBE_C_CalculateNextMove, CallFunc_Array_Get_Item1) == 0x000080, "Member 'CUBE_C_CalculateNextMove::CallFunc_Array_Get_Item1' has a wrong offset!");
static_assert(offsetof(CUBE_C_CalculateNextMove, CallFunc_EqualEqual_FloatFloat_ReturnValue) == 0x0000C0, "Member 'CUBE_C_CalculateNextMove::CallFunc_EqualEqual_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(CUBE_C_CalculateNextMove, CallFunc_Multiply_FloatFloat_ReturnValue1) == 0x0000C4, "Member 'CUBE_C_CalculateNextMove::CallFunc_Multiply_FloatFloat_ReturnValue1' has a wrong offset!");
static_assert(offsetof(CUBE_C_CalculateNextMove, CallFunc_Map_Find_Value) == 0x0000C8, "Member 'CUBE_C_CalculateNextMove::CallFunc_Map_Find_Value' has a wrong offset!");
static_assert(offsetof(CUBE_C_CalculateNextMove, CallFunc_Map_Find_ReturnValue) == 0x0000D0, "Member 'CUBE_C_CalculateNextMove::CallFunc_Map_Find_ReturnValue' has a wrong offset!");
static_assert(offsetof(CUBE_C_CalculateNextMove, CallFunc_Array_Get_Item2) == 0x0000D4, "Member 'CUBE_C_CalculateNextMove::CallFunc_Array_Get_Item2' has a wrong offset!");

// Function CUBE.CUBE_C.UnhideAndSetCollision
// 0x0001 (0x0001 - 0x0000)
struct CUBE_C_UnhideAndSetCollision final
{
public:
	bool                                          TurnedOn;                                          // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(CUBE_C_UnhideAndSetCollision) == 0x000001, "Wrong alignment on CUBE_C_UnhideAndSetCollision");
static_assert(sizeof(CUBE_C_UnhideAndSetCollision) == 0x000001, "Wrong size on CUBE_C_UnhideAndSetCollision");
static_assert(offsetof(CUBE_C_UnhideAndSetCollision, TurnedOn) == 0x000000, "Member 'CUBE_C_UnhideAndSetCollision::TurnedOn' has a wrong offset!");

// Function CUBE.CUBE_C.OnRep_CubeTurnedOn
// 0x0070 (0x0070 - 0x0000)
struct CUBE_C_OnRep_CubeTurnedOn final
{
public:
	bool                                          CallFunc_HasAuthority_ReturnValue;                 // 0x0000(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_HasAuthority_ReturnValue1;                // 0x0001(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0002(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3[0xD];                                        // 0x0003(0x000D)(Fixing Size After Last Property [ Dumper-7 ])
	struct FCubeStruct                            CallFunc_Array_Get_Item;                           // 0x0010(0x0040)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue1;                     // 0x0050(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_51[0x7];                                       // 0x0051(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class AActor*                                 CallFunc_BeginDeferredActorSpawnFromClass_ReturnValue; // 0x0058(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ACubeOverlapActor_C*                    CallFunc_FinishSpawningActor_ReturnValue;          // 0x0060(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(CUBE_C_OnRep_CubeTurnedOn) == 0x000010, "Wrong alignment on CUBE_C_OnRep_CubeTurnedOn");
static_assert(sizeof(CUBE_C_OnRep_CubeTurnedOn) == 0x000070, "Wrong size on CUBE_C_OnRep_CubeTurnedOn");
static_assert(offsetof(CUBE_C_OnRep_CubeTurnedOn, CallFunc_HasAuthority_ReturnValue) == 0x000000, "Member 'CUBE_C_OnRep_CubeTurnedOn::CallFunc_HasAuthority_ReturnValue' has a wrong offset!");
static_assert(offsetof(CUBE_C_OnRep_CubeTurnedOn, CallFunc_HasAuthority_ReturnValue1) == 0x000001, "Member 'CUBE_C_OnRep_CubeTurnedOn::CallFunc_HasAuthority_ReturnValue1' has a wrong offset!");
static_assert(offsetof(CUBE_C_OnRep_CubeTurnedOn, CallFunc_IsValid_ReturnValue) == 0x000002, "Member 'CUBE_C_OnRep_CubeTurnedOn::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(CUBE_C_OnRep_CubeTurnedOn, CallFunc_Array_Get_Item) == 0x000010, "Member 'CUBE_C_OnRep_CubeTurnedOn::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(CUBE_C_OnRep_CubeTurnedOn, CallFunc_IsValid_ReturnValue1) == 0x000050, "Member 'CUBE_C_OnRep_CubeTurnedOn::CallFunc_IsValid_ReturnValue1' has a wrong offset!");
static_assert(offsetof(CUBE_C_OnRep_CubeTurnedOn, CallFunc_BeginDeferredActorSpawnFromClass_ReturnValue) == 0x000058, "Member 'CUBE_C_OnRep_CubeTurnedOn::CallFunc_BeginDeferredActorSpawnFromClass_ReturnValue' has a wrong offset!");
static_assert(offsetof(CUBE_C_OnRep_CubeTurnedOn, CallFunc_FinishSpawningActor_ReturnValue) == 0x000060, "Member 'CUBE_C_OnRep_CubeTurnedOn::CallFunc_FinishSpawningActor_ReturnValue' has a wrong offset!");

// Function CUBE.CUBE_C.StepsThisRuneIndex
// 0x0004 (0x0004 - 0x0000)
struct CUBE_C_StepsThisRuneIndex final
{
public:
	int32                                         RuneDestination_0;                                 // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(CUBE_C_StepsThisRuneIndex) == 0x000004, "Wrong alignment on CUBE_C_StepsThisRuneIndex");
static_assert(sizeof(CUBE_C_StepsThisRuneIndex) == 0x000004, "Wrong size on CUBE_C_StepsThisRuneIndex");
static_assert(offsetof(CUBE_C_StepsThisRuneIndex, RuneDestination_0) == 0x000000, "Member 'CUBE_C_StepsThisRuneIndex::RuneDestination_0' has a wrong offset!");

// Function CUBE.CUBE_C.CalcRuneSteps
// 0x00C0 (0x00C0 - 0x0000)
struct CUBE_C_CalcRuneSteps final
{
public:
	int32                                         NewArrayIndex;                                     // 0x0000(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         LastIndex;                                         // 0x0004(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         AccumulatedKeyframeSteps;                          // 0x0008(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         StartingIndex;                                     // 0x000C(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         AccumulatedSteps;                                  // 0x0010(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0014(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0018(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Variable;                                 // 0x001C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Variable1;                                // 0x0020(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue1;                  // 0x0024(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue2;                  // 0x0028(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_LessEqual_IntInt_ReturnValue;             // 0x002C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_2D[0x3];                                       // 0x002D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_LastIndex_ReturnValue;              // 0x0030(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Subtract_IntInt_ReturnValue;              // 0x0034(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue3;                  // 0x0038(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue4;                  // 0x003C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0040(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Variable2;                                // 0x0044(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue5;                  // 0x0048(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_IntInt_ReturnValue;               // 0x004C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_4D[0x3];                                       // 0x004D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Subtract_IntInt_ReturnValue1;             // 0x0050(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Get_Item;                           // 0x0054(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Get_Item1;                          // 0x0058(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue6;                  // 0x005C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0060(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0064(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_65[0xB];                                       // 0x0065(0x000B)(Fixing Size After Last Property [ Dumper-7 ])
	struct FCubeStruct                            CallFunc_Array_Get_Item2;                          // 0x0070(0x0040)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_FloatFloat_ReturnValue;           // 0x00B0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(CUBE_C_CalcRuneSteps) == 0x000010, "Wrong alignment on CUBE_C_CalcRuneSteps");
static_assert(sizeof(CUBE_C_CalcRuneSteps) == 0x0000C0, "Wrong size on CUBE_C_CalcRuneSteps");
static_assert(offsetof(CUBE_C_CalcRuneSteps, NewArrayIndex) == 0x000000, "Member 'CUBE_C_CalcRuneSteps::NewArrayIndex' has a wrong offset!");
static_assert(offsetof(CUBE_C_CalcRuneSteps, LastIndex) == 0x000004, "Member 'CUBE_C_CalcRuneSteps::LastIndex' has a wrong offset!");
static_assert(offsetof(CUBE_C_CalcRuneSteps, AccumulatedKeyframeSteps) == 0x000008, "Member 'CUBE_C_CalcRuneSteps::AccumulatedKeyframeSteps' has a wrong offset!");
static_assert(offsetof(CUBE_C_CalcRuneSteps, StartingIndex) == 0x00000C, "Member 'CUBE_C_CalcRuneSteps::StartingIndex' has a wrong offset!");
static_assert(offsetof(CUBE_C_CalcRuneSteps, AccumulatedSteps) == 0x000010, "Member 'CUBE_C_CalcRuneSteps::AccumulatedSteps' has a wrong offset!");
static_assert(offsetof(CUBE_C_CalcRuneSteps, Temp_int_Loop_Counter_Variable) == 0x000014, "Member 'CUBE_C_CalcRuneSteps::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(CUBE_C_CalcRuneSteps, CallFunc_Add_IntInt_ReturnValue) == 0x000018, "Member 'CUBE_C_CalcRuneSteps::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(CUBE_C_CalcRuneSteps, Temp_int_Variable) == 0x00001C, "Member 'CUBE_C_CalcRuneSteps::Temp_int_Variable' has a wrong offset!");
static_assert(offsetof(CUBE_C_CalcRuneSteps, Temp_int_Variable1) == 0x000020, "Member 'CUBE_C_CalcRuneSteps::Temp_int_Variable1' has a wrong offset!");
static_assert(offsetof(CUBE_C_CalcRuneSteps, CallFunc_Add_IntInt_ReturnValue1) == 0x000024, "Member 'CUBE_C_CalcRuneSteps::CallFunc_Add_IntInt_ReturnValue1' has a wrong offset!");
static_assert(offsetof(CUBE_C_CalcRuneSteps, CallFunc_Add_IntInt_ReturnValue2) == 0x000028, "Member 'CUBE_C_CalcRuneSteps::CallFunc_Add_IntInt_ReturnValue2' has a wrong offset!");
static_assert(offsetof(CUBE_C_CalcRuneSteps, CallFunc_LessEqual_IntInt_ReturnValue) == 0x00002C, "Member 'CUBE_C_CalcRuneSteps::CallFunc_LessEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(CUBE_C_CalcRuneSteps, CallFunc_Array_LastIndex_ReturnValue) == 0x000030, "Member 'CUBE_C_CalcRuneSteps::CallFunc_Array_LastIndex_ReturnValue' has a wrong offset!");
static_assert(offsetof(CUBE_C_CalcRuneSteps, CallFunc_Subtract_IntInt_ReturnValue) == 0x000034, "Member 'CUBE_C_CalcRuneSteps::CallFunc_Subtract_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(CUBE_C_CalcRuneSteps, CallFunc_Add_IntInt_ReturnValue3) == 0x000038, "Member 'CUBE_C_CalcRuneSteps::CallFunc_Add_IntInt_ReturnValue3' has a wrong offset!");
static_assert(offsetof(CUBE_C_CalcRuneSteps, CallFunc_Add_IntInt_ReturnValue4) == 0x00003C, "Member 'CUBE_C_CalcRuneSteps::CallFunc_Add_IntInt_ReturnValue4' has a wrong offset!");
static_assert(offsetof(CUBE_C_CalcRuneSteps, Temp_int_Array_Index_Variable) == 0x000040, "Member 'CUBE_C_CalcRuneSteps::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(CUBE_C_CalcRuneSteps, Temp_int_Variable2) == 0x000044, "Member 'CUBE_C_CalcRuneSteps::Temp_int_Variable2' has a wrong offset!");
static_assert(offsetof(CUBE_C_CalcRuneSteps, CallFunc_Add_IntInt_ReturnValue5) == 0x000048, "Member 'CUBE_C_CalcRuneSteps::CallFunc_Add_IntInt_ReturnValue5' has a wrong offset!");
static_assert(offsetof(CUBE_C_CalcRuneSteps, CallFunc_Greater_IntInt_ReturnValue) == 0x00004C, "Member 'CUBE_C_CalcRuneSteps::CallFunc_Greater_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(CUBE_C_CalcRuneSteps, CallFunc_Subtract_IntInt_ReturnValue1) == 0x000050, "Member 'CUBE_C_CalcRuneSteps::CallFunc_Subtract_IntInt_ReturnValue1' has a wrong offset!");
static_assert(offsetof(CUBE_C_CalcRuneSteps, CallFunc_Array_Get_Item) == 0x000054, "Member 'CUBE_C_CalcRuneSteps::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(CUBE_C_CalcRuneSteps, CallFunc_Array_Get_Item1) == 0x000058, "Member 'CUBE_C_CalcRuneSteps::CallFunc_Array_Get_Item1' has a wrong offset!");
static_assert(offsetof(CUBE_C_CalcRuneSteps, CallFunc_Add_IntInt_ReturnValue6) == 0x00005C, "Member 'CUBE_C_CalcRuneSteps::CallFunc_Add_IntInt_ReturnValue6' has a wrong offset!");
static_assert(offsetof(CUBE_C_CalcRuneSteps, CallFunc_Array_Length_ReturnValue) == 0x000060, "Member 'CUBE_C_CalcRuneSteps::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(CUBE_C_CalcRuneSteps, CallFunc_Less_IntInt_ReturnValue) == 0x000064, "Member 'CUBE_C_CalcRuneSteps::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(CUBE_C_CalcRuneSteps, CallFunc_Array_Get_Item2) == 0x000070, "Member 'CUBE_C_CalcRuneSteps::CallFunc_Array_Get_Item2' has a wrong offset!");
static_assert(offsetof(CUBE_C_CalcRuneSteps, CallFunc_Greater_FloatFloat_ReturnValue) == 0x0000B0, "Member 'CUBE_C_CalcRuneSteps::CallFunc_Greater_FloatFloat_ReturnValue' has a wrong offset!");

// Function CUBE.CUBE_C.OnRep_PrintingRune
// 0x0001 (0x0001 - 0x0000)
struct CUBE_C_OnRep_PrintingRune final
{
public:
	bool                                          CallFunc_HasAuthority_ReturnValue;                 // 0x0000(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(CUBE_C_OnRep_PrintingRune) == 0x000001, "Wrong alignment on CUBE_C_OnRep_PrintingRune");
static_assert(sizeof(CUBE_C_OnRep_PrintingRune) == 0x000001, "Wrong size on CUBE_C_OnRep_PrintingRune");
static_assert(offsetof(CUBE_C_OnRep_PrintingRune, CallFunc_HasAuthority_ReturnValue) == 0x000000, "Member 'CUBE_C_OnRep_PrintingRune::CallFunc_HasAuthority_ReturnValue' has a wrong offset!");

// Function CUBE.CUBE_C.Set Tree MPC
// 0x0058 (0x0058 - 0x0000)
struct CUBE_C_Set_Tree_MPC final
{
public:
	bool                                          AtStartup;                                         // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1[0x3];                                        // 0x0001(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         HighestIndex;                                      // 0x0004(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         MPCValue;                                          // 0x0008(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable;                     // 0x000C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0010(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Map_Find_Value;                           // 0x0014(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Map_Find_ReturnValue;                     // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_19[0x3];                                       // 0x0019(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x001C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0020(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_21[0x3];                                       // 0x0021(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_Map_Find_Value1;                          // 0x0024(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Map_Find_ReturnValue1;                    // 0x0028(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_29[0x7];                                       // 0x0029(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<int32>                                 CallFunc_Map_Keys_Keys;                            // 0x0030(0x0010)(ZeroConstructor, ReferenceParm)
	bool                                          CallFunc_Greater_IntInt_ReturnValue;               // 0x0040(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_41[0x3];                                       // 0x0041(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Get_Item;                           // 0x0044(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GreaterEqual_IntInt_ReturnValue;          // 0x0048(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_49[0x3];                                       // 0x0049(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x004C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue1;                 // 0x0050(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(CUBE_C_Set_Tree_MPC) == 0x000008, "Wrong alignment on CUBE_C_Set_Tree_MPC");
static_assert(sizeof(CUBE_C_Set_Tree_MPC) == 0x000058, "Wrong size on CUBE_C_Set_Tree_MPC");
static_assert(offsetof(CUBE_C_Set_Tree_MPC, AtStartup) == 0x000000, "Member 'CUBE_C_Set_Tree_MPC::AtStartup' has a wrong offset!");
static_assert(offsetof(CUBE_C_Set_Tree_MPC, HighestIndex) == 0x000004, "Member 'CUBE_C_Set_Tree_MPC::HighestIndex' has a wrong offset!");
static_assert(offsetof(CUBE_C_Set_Tree_MPC, MPCValue) == 0x000008, "Member 'CUBE_C_Set_Tree_MPC::MPCValue' has a wrong offset!");
static_assert(offsetof(CUBE_C_Set_Tree_MPC, Temp_int_Array_Index_Variable) == 0x00000C, "Member 'CUBE_C_Set_Tree_MPC::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(CUBE_C_Set_Tree_MPC, Temp_int_Loop_Counter_Variable) == 0x000010, "Member 'CUBE_C_Set_Tree_MPC::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(CUBE_C_Set_Tree_MPC, CallFunc_Map_Find_Value) == 0x000014, "Member 'CUBE_C_Set_Tree_MPC::CallFunc_Map_Find_Value' has a wrong offset!");
static_assert(offsetof(CUBE_C_Set_Tree_MPC, CallFunc_Map_Find_ReturnValue) == 0x000018, "Member 'CUBE_C_Set_Tree_MPC::CallFunc_Map_Find_ReturnValue' has a wrong offset!");
static_assert(offsetof(CUBE_C_Set_Tree_MPC, CallFunc_Add_IntInt_ReturnValue) == 0x00001C, "Member 'CUBE_C_Set_Tree_MPC::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(CUBE_C_Set_Tree_MPC, CallFunc_Less_IntInt_ReturnValue) == 0x000020, "Member 'CUBE_C_Set_Tree_MPC::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(CUBE_C_Set_Tree_MPC, CallFunc_Map_Find_Value1) == 0x000024, "Member 'CUBE_C_Set_Tree_MPC::CallFunc_Map_Find_Value1' has a wrong offset!");
static_assert(offsetof(CUBE_C_Set_Tree_MPC, CallFunc_Map_Find_ReturnValue1) == 0x000028, "Member 'CUBE_C_Set_Tree_MPC::CallFunc_Map_Find_ReturnValue1' has a wrong offset!");
static_assert(offsetof(CUBE_C_Set_Tree_MPC, CallFunc_Map_Keys_Keys) == 0x000030, "Member 'CUBE_C_Set_Tree_MPC::CallFunc_Map_Keys_Keys' has a wrong offset!");
static_assert(offsetof(CUBE_C_Set_Tree_MPC, CallFunc_Greater_IntInt_ReturnValue) == 0x000040, "Member 'CUBE_C_Set_Tree_MPC::CallFunc_Greater_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(CUBE_C_Set_Tree_MPC, CallFunc_Array_Get_Item) == 0x000044, "Member 'CUBE_C_Set_Tree_MPC::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(CUBE_C_Set_Tree_MPC, CallFunc_GreaterEqual_IntInt_ReturnValue) == 0x000048, "Member 'CUBE_C_Set_Tree_MPC::CallFunc_GreaterEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(CUBE_C_Set_Tree_MPC, CallFunc_Array_Length_ReturnValue) == 0x00004C, "Member 'CUBE_C_Set_Tree_MPC::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(CUBE_C_Set_Tree_MPC, CallFunc_Less_IntInt_ReturnValue1) == 0x000050, "Member 'CUBE_C_Set_Tree_MPC::CallFunc_Less_IntInt_ReturnValue1' has a wrong offset!");

// Function CUBE.CUBE_C.SetSpecificTimeOfDay
// 0x0034 (0x0034 - 0x0000)
struct CUBE_C_SetSpecificTimeOfDay final
{
public:
	float                                         Seconds;                                           // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         Time;                                              // 0x0004(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Divide_FloatFloat_ReturnValue;            // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Multiply_FloatFloat_ReturnValue;          // 0x000C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable;                                // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_11[0x3];                                       // 0x0011(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_Add_FloatFloat_ReturnValue;               // 0x0014(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_FloatFloat_ReturnValue;              // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          Temp_bool_Variable1;                               // 0x0019(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1A[0x2];                                       // 0x001A(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         K2Node_Select_Default;                             // 0x001C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Percent_FloatFloat_ReturnValue;           // 0x0020(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Subtract_FloatFloat_ReturnValue;          // 0x0024(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Add_FloatFloat_ReturnValue1;              // 0x0028(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_FloatFloat_ReturnValue1;             // 0x002C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_2D[0x3];                                       // 0x002D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         K2Node_Select1_Default;                            // 0x0030(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(CUBE_C_SetSpecificTimeOfDay) == 0x000004, "Wrong alignment on CUBE_C_SetSpecificTimeOfDay");
static_assert(sizeof(CUBE_C_SetSpecificTimeOfDay) == 0x000034, "Wrong size on CUBE_C_SetSpecificTimeOfDay");
static_assert(offsetof(CUBE_C_SetSpecificTimeOfDay, Seconds) == 0x000000, "Member 'CUBE_C_SetSpecificTimeOfDay::Seconds' has a wrong offset!");
static_assert(offsetof(CUBE_C_SetSpecificTimeOfDay, Time) == 0x000004, "Member 'CUBE_C_SetSpecificTimeOfDay::Time' has a wrong offset!");
static_assert(offsetof(CUBE_C_SetSpecificTimeOfDay, CallFunc_Divide_FloatFloat_ReturnValue) == 0x000008, "Member 'CUBE_C_SetSpecificTimeOfDay::CallFunc_Divide_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(CUBE_C_SetSpecificTimeOfDay, CallFunc_Multiply_FloatFloat_ReturnValue) == 0x00000C, "Member 'CUBE_C_SetSpecificTimeOfDay::CallFunc_Multiply_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(CUBE_C_SetSpecificTimeOfDay, Temp_bool_Variable) == 0x000010, "Member 'CUBE_C_SetSpecificTimeOfDay::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(CUBE_C_SetSpecificTimeOfDay, CallFunc_Add_FloatFloat_ReturnValue) == 0x000014, "Member 'CUBE_C_SetSpecificTimeOfDay::CallFunc_Add_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(CUBE_C_SetSpecificTimeOfDay, CallFunc_Less_FloatFloat_ReturnValue) == 0x000018, "Member 'CUBE_C_SetSpecificTimeOfDay::CallFunc_Less_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(CUBE_C_SetSpecificTimeOfDay, Temp_bool_Variable1) == 0x000019, "Member 'CUBE_C_SetSpecificTimeOfDay::Temp_bool_Variable1' has a wrong offset!");
static_assert(offsetof(CUBE_C_SetSpecificTimeOfDay, K2Node_Select_Default) == 0x00001C, "Member 'CUBE_C_SetSpecificTimeOfDay::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(CUBE_C_SetSpecificTimeOfDay, CallFunc_Percent_FloatFloat_ReturnValue) == 0x000020, "Member 'CUBE_C_SetSpecificTimeOfDay::CallFunc_Percent_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(CUBE_C_SetSpecificTimeOfDay, CallFunc_Subtract_FloatFloat_ReturnValue) == 0x000024, "Member 'CUBE_C_SetSpecificTimeOfDay::CallFunc_Subtract_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(CUBE_C_SetSpecificTimeOfDay, CallFunc_Add_FloatFloat_ReturnValue1) == 0x000028, "Member 'CUBE_C_SetSpecificTimeOfDay::CallFunc_Add_FloatFloat_ReturnValue1' has a wrong offset!");
static_assert(offsetof(CUBE_C_SetSpecificTimeOfDay, CallFunc_Less_FloatFloat_ReturnValue1) == 0x00002C, "Member 'CUBE_C_SetSpecificTimeOfDay::CallFunc_Less_FloatFloat_ReturnValue1' has a wrong offset!");
static_assert(offsetof(CUBE_C_SetSpecificTimeOfDay, K2Node_Select1_Default) == 0x000030, "Member 'CUBE_C_SetSpecificTimeOfDay::K2Node_Select1_Default' has a wrong offset!");

// Function CUBE.CUBE_C.ImpulseVehicle
// 0x0098 (0x0098 - 0x0000)
struct CUBE_C_ImpulseVehicle final
{
public:
	class AFortAthenaVehicle*                     Vehicle;                                           // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                Normal;                                            // 0x0008(0x000C)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                Location;                                          // 0x0014(0x000C)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         ZMultiplier;                                       // 0x0020(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Multiply_VectorFloat_ReturnValue;         // 0x0024(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetValueAtLevel_ReturnValue;              // 0x0030(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_X;                            // 0x0034(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_Y;                            // 0x0038(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_Z;                            // 0x003C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_FMax_ReturnValue;                         // 0x0040(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TDelegate<void()>                             K2Node_CreateDelegate_OutputDelegate;              // 0x0044(0x0010)(ZeroConstructor, NoDestructor)
	struct FVector                                CallFunc_MakeVector_ReturnValue;                   // 0x0054(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FTimerHandle                           CallFunc_K2_SetTimerDelegate_ReturnValue;          // 0x0060(0x0008)(NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Multiply_VectorFloat_ReturnValue1;        // 0x0068(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0074(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_75[0x3];                                       // 0x0075(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_GetValueAtLevel_ReturnValue1;             // 0x0078(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Multiply_FloatFloat_ReturnValue;          // 0x007C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_MakeVector_ReturnValue1;                  // 0x0080(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Add_VectorVector_ReturnValue;             // 0x008C(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(CUBE_C_ImpulseVehicle) == 0x000008, "Wrong alignment on CUBE_C_ImpulseVehicle");
static_assert(sizeof(CUBE_C_ImpulseVehicle) == 0x000098, "Wrong size on CUBE_C_ImpulseVehicle");
static_assert(offsetof(CUBE_C_ImpulseVehicle, Vehicle) == 0x000000, "Member 'CUBE_C_ImpulseVehicle::Vehicle' has a wrong offset!");
static_assert(offsetof(CUBE_C_ImpulseVehicle, Normal) == 0x000008, "Member 'CUBE_C_ImpulseVehicle::Normal' has a wrong offset!");
static_assert(offsetof(CUBE_C_ImpulseVehicle, Location) == 0x000014, "Member 'CUBE_C_ImpulseVehicle::Location' has a wrong offset!");
static_assert(offsetof(CUBE_C_ImpulseVehicle, ZMultiplier) == 0x000020, "Member 'CUBE_C_ImpulseVehicle::ZMultiplier' has a wrong offset!");
static_assert(offsetof(CUBE_C_ImpulseVehicle, CallFunc_Multiply_VectorFloat_ReturnValue) == 0x000024, "Member 'CUBE_C_ImpulseVehicle::CallFunc_Multiply_VectorFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(CUBE_C_ImpulseVehicle, CallFunc_GetValueAtLevel_ReturnValue) == 0x000030, "Member 'CUBE_C_ImpulseVehicle::CallFunc_GetValueAtLevel_ReturnValue' has a wrong offset!");
static_assert(offsetof(CUBE_C_ImpulseVehicle, CallFunc_BreakVector_X) == 0x000034, "Member 'CUBE_C_ImpulseVehicle::CallFunc_BreakVector_X' has a wrong offset!");
static_assert(offsetof(CUBE_C_ImpulseVehicle, CallFunc_BreakVector_Y) == 0x000038, "Member 'CUBE_C_ImpulseVehicle::CallFunc_BreakVector_Y' has a wrong offset!");
static_assert(offsetof(CUBE_C_ImpulseVehicle, CallFunc_BreakVector_Z) == 0x00003C, "Member 'CUBE_C_ImpulseVehicle::CallFunc_BreakVector_Z' has a wrong offset!");
static_assert(offsetof(CUBE_C_ImpulseVehicle, CallFunc_FMax_ReturnValue) == 0x000040, "Member 'CUBE_C_ImpulseVehicle::CallFunc_FMax_ReturnValue' has a wrong offset!");
static_assert(offsetof(CUBE_C_ImpulseVehicle, K2Node_CreateDelegate_OutputDelegate) == 0x000044, "Member 'CUBE_C_ImpulseVehicle::K2Node_CreateDelegate_OutputDelegate' has a wrong offset!");
static_assert(offsetof(CUBE_C_ImpulseVehicle, CallFunc_MakeVector_ReturnValue) == 0x000054, "Member 'CUBE_C_ImpulseVehicle::CallFunc_MakeVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(CUBE_C_ImpulseVehicle, CallFunc_K2_SetTimerDelegate_ReturnValue) == 0x000060, "Member 'CUBE_C_ImpulseVehicle::CallFunc_K2_SetTimerDelegate_ReturnValue' has a wrong offset!");
static_assert(offsetof(CUBE_C_ImpulseVehicle, CallFunc_Multiply_VectorFloat_ReturnValue1) == 0x000068, "Member 'CUBE_C_ImpulseVehicle::CallFunc_Multiply_VectorFloat_ReturnValue1' has a wrong offset!");
static_assert(offsetof(CUBE_C_ImpulseVehicle, CallFunc_IsValid_ReturnValue) == 0x000074, "Member 'CUBE_C_ImpulseVehicle::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(CUBE_C_ImpulseVehicle, CallFunc_GetValueAtLevel_ReturnValue1) == 0x000078, "Member 'CUBE_C_ImpulseVehicle::CallFunc_GetValueAtLevel_ReturnValue1' has a wrong offset!");
static_assert(offsetof(CUBE_C_ImpulseVehicle, CallFunc_Multiply_FloatFloat_ReturnValue) == 0x00007C, "Member 'CUBE_C_ImpulseVehicle::CallFunc_Multiply_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(CUBE_C_ImpulseVehicle, CallFunc_MakeVector_ReturnValue1) == 0x000080, "Member 'CUBE_C_ImpulseVehicle::CallFunc_MakeVector_ReturnValue1' has a wrong offset!");
static_assert(offsetof(CUBE_C_ImpulseVehicle, CallFunc_Add_VectorVector_ReturnValue) == 0x00008C, "Member 'CUBE_C_ImpulseVehicle::CallFunc_Add_VectorVector_ReturnValue' has a wrong offset!");

// Function CUBE.CUBE_C.OnRep_GravVolumesSpawned
// 0x01E0 (0x01E0 - 0x0000)
struct CUBE_C_OnRep_GravVolumesSpawned final
{
public:
	int32                                         Temp_int_Variable;                                 // 0x0000(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4[0xC];                                        // 0x0004(0x000C)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTransform                             Temp_struct_Variable;                              // 0x0010(0x0030)(ConstParm, IsPlainOldData, NoDestructor)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0040(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_44[0x4];                                       // 0x0044(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UStaticMeshComponent*                   CallFunc_AddComponent_ReturnValue;                 // 0x0048(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0050(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0054(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue1;                  // 0x0058(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_5C[0x4];                                       // 0x005C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UStaticMeshComponent*                   CallFunc_Array_Get_Item;                           // 0x0060(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Add_ReturnValue;                    // 0x0068(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x006C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FTransform                             CallFunc_GetTransform_ReturnValue;                 // 0x0070(0x0030)(IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x00A0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_A1[0x3];                                       // 0x00A1(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Length_ReturnValue1;                // 0x00A4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Get_Item1;                          // 0x00A8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue1;                 // 0x00AC(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_AD[0x3];                                       // 0x00AD(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FCubeStruct                            CallFunc_Array_Get_Item2;                          // 0x00B0(0x0040)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_IntInt_ReturnValue;               // 0x00F0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_F1[0xF];                                       // 0x00F1(0x000F)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTransform                             CallFunc_ComposeTransforms_ReturnValue;            // 0x0100(0x0030)(IsPlainOldData, NoDestructor)
	struct FVector                                CallFunc_BreakTransform_Location;                  // 0x0130(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               CallFunc_BreakTransform_Rotation;                  // 0x013C(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FVector                                CallFunc_BreakTransform_Scale;                     // 0x0148(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FHitResult                             CallFunc_K2_SetWorldLocation_SweepHitResult;       // 0x0154(0x0088)(IsPlainOldData, NoDestructor, ContainsInstancedReference)
};
static_assert(alignof(CUBE_C_OnRep_GravVolumesSpawned) == 0x000010, "Wrong alignment on CUBE_C_OnRep_GravVolumesSpawned");
static_assert(sizeof(CUBE_C_OnRep_GravVolumesSpawned) == 0x0001E0, "Wrong size on CUBE_C_OnRep_GravVolumesSpawned");
static_assert(offsetof(CUBE_C_OnRep_GravVolumesSpawned, Temp_int_Variable) == 0x000000, "Member 'CUBE_C_OnRep_GravVolumesSpawned::Temp_int_Variable' has a wrong offset!");
static_assert(offsetof(CUBE_C_OnRep_GravVolumesSpawned, Temp_struct_Variable) == 0x000010, "Member 'CUBE_C_OnRep_GravVolumesSpawned::Temp_struct_Variable' has a wrong offset!");
static_assert(offsetof(CUBE_C_OnRep_GravVolumesSpawned, CallFunc_Add_IntInt_ReturnValue) == 0x000040, "Member 'CUBE_C_OnRep_GravVolumesSpawned::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(CUBE_C_OnRep_GravVolumesSpawned, CallFunc_AddComponent_ReturnValue) == 0x000048, "Member 'CUBE_C_OnRep_GravVolumesSpawned::CallFunc_AddComponent_ReturnValue' has a wrong offset!");
static_assert(offsetof(CUBE_C_OnRep_GravVolumesSpawned, Temp_int_Array_Index_Variable) == 0x000050, "Member 'CUBE_C_OnRep_GravVolumesSpawned::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(CUBE_C_OnRep_GravVolumesSpawned, Temp_int_Loop_Counter_Variable) == 0x000054, "Member 'CUBE_C_OnRep_GravVolumesSpawned::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(CUBE_C_OnRep_GravVolumesSpawned, CallFunc_Add_IntInt_ReturnValue1) == 0x000058, "Member 'CUBE_C_OnRep_GravVolumesSpawned::CallFunc_Add_IntInt_ReturnValue1' has a wrong offset!");
static_assert(offsetof(CUBE_C_OnRep_GravVolumesSpawned, CallFunc_Array_Get_Item) == 0x000060, "Member 'CUBE_C_OnRep_GravVolumesSpawned::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(CUBE_C_OnRep_GravVolumesSpawned, CallFunc_Array_Add_ReturnValue) == 0x000068, "Member 'CUBE_C_OnRep_GravVolumesSpawned::CallFunc_Array_Add_ReturnValue' has a wrong offset!");
static_assert(offsetof(CUBE_C_OnRep_GravVolumesSpawned, CallFunc_Array_Length_ReturnValue) == 0x00006C, "Member 'CUBE_C_OnRep_GravVolumesSpawned::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(CUBE_C_OnRep_GravVolumesSpawned, CallFunc_GetTransform_ReturnValue) == 0x000070, "Member 'CUBE_C_OnRep_GravVolumesSpawned::CallFunc_GetTransform_ReturnValue' has a wrong offset!");
static_assert(offsetof(CUBE_C_OnRep_GravVolumesSpawned, CallFunc_Less_IntInt_ReturnValue) == 0x0000A0, "Member 'CUBE_C_OnRep_GravVolumesSpawned::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(CUBE_C_OnRep_GravVolumesSpawned, CallFunc_Array_Length_ReturnValue1) == 0x0000A4, "Member 'CUBE_C_OnRep_GravVolumesSpawned::CallFunc_Array_Length_ReturnValue1' has a wrong offset!");
static_assert(offsetof(CUBE_C_OnRep_GravVolumesSpawned, CallFunc_Array_Get_Item1) == 0x0000A8, "Member 'CUBE_C_OnRep_GravVolumesSpawned::CallFunc_Array_Get_Item1' has a wrong offset!");
static_assert(offsetof(CUBE_C_OnRep_GravVolumesSpawned, CallFunc_Less_IntInt_ReturnValue1) == 0x0000AC, "Member 'CUBE_C_OnRep_GravVolumesSpawned::CallFunc_Less_IntInt_ReturnValue1' has a wrong offset!");
static_assert(offsetof(CUBE_C_OnRep_GravVolumesSpawned, CallFunc_Array_Get_Item2) == 0x0000B0, "Member 'CUBE_C_OnRep_GravVolumesSpawned::CallFunc_Array_Get_Item2' has a wrong offset!");
static_assert(offsetof(CUBE_C_OnRep_GravVolumesSpawned, CallFunc_Greater_IntInt_ReturnValue) == 0x0000F0, "Member 'CUBE_C_OnRep_GravVolumesSpawned::CallFunc_Greater_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(CUBE_C_OnRep_GravVolumesSpawned, CallFunc_ComposeTransforms_ReturnValue) == 0x000100, "Member 'CUBE_C_OnRep_GravVolumesSpawned::CallFunc_ComposeTransforms_ReturnValue' has a wrong offset!");
static_assert(offsetof(CUBE_C_OnRep_GravVolumesSpawned, CallFunc_BreakTransform_Location) == 0x000130, "Member 'CUBE_C_OnRep_GravVolumesSpawned::CallFunc_BreakTransform_Location' has a wrong offset!");
static_assert(offsetof(CUBE_C_OnRep_GravVolumesSpawned, CallFunc_BreakTransform_Rotation) == 0x00013C, "Member 'CUBE_C_OnRep_GravVolumesSpawned::CallFunc_BreakTransform_Rotation' has a wrong offset!");
static_assert(offsetof(CUBE_C_OnRep_GravVolumesSpawned, CallFunc_BreakTransform_Scale) == 0x000148, "Member 'CUBE_C_OnRep_GravVolumesSpawned::CallFunc_BreakTransform_Scale' has a wrong offset!");
static_assert(offsetof(CUBE_C_OnRep_GravVolumesSpawned, CallFunc_K2_SetWorldLocation_SweepHitResult) == 0x000154, "Member 'CUBE_C_OnRep_GravVolumesSpawned::CallFunc_K2_SetWorldLocation_SweepHitResult' has a wrong offset!");

// Function CUBE.CUBE_C.IsLakeSplash
// 0x0010 (0x0010 - 0x0000)
struct CUBE_C_IsLakeSplash final
{
public:
	bool                                          ReturnValue;                                       // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1[0x3];                                        // 0x0001(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_LastIndex_ReturnValue;              // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Subtract_IntInt_ReturnValue;              // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_IntInt_ReturnValue;            // 0x000C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(CUBE_C_IsLakeSplash) == 0x000004, "Wrong alignment on CUBE_C_IsLakeSplash");
static_assert(sizeof(CUBE_C_IsLakeSplash) == 0x000010, "Wrong size on CUBE_C_IsLakeSplash");
static_assert(offsetof(CUBE_C_IsLakeSplash, ReturnValue) == 0x000000, "Member 'CUBE_C_IsLakeSplash::ReturnValue' has a wrong offset!");
static_assert(offsetof(CUBE_C_IsLakeSplash, CallFunc_Array_LastIndex_ReturnValue) == 0x000004, "Member 'CUBE_C_IsLakeSplash::CallFunc_Array_LastIndex_ReturnValue' has a wrong offset!");
static_assert(offsetof(CUBE_C_IsLakeSplash, CallFunc_Subtract_IntInt_ReturnValue) == 0x000008, "Member 'CUBE_C_IsLakeSplash::CallFunc_Subtract_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(CUBE_C_IsLakeSplash, CallFunc_EqualEqual_IntInt_ReturnValue) == 0x00000C, "Member 'CUBE_C_IsLakeSplash::CallFunc_EqualEqual_IntInt_ReturnValue' has a wrong offset!");

// Function CUBE.CUBE_C.OnRep_DestTurnedOn
// 0x0120 (0x0120 - 0x0000)
struct CUBE_C_OnRep_DestTurnedOn final
{
public:
	struct FTransform                             Temp_struct_Variable;                              // 0x0000(0x0030)(ConstParm, IsPlainOldData, NoDestructor)
	class UStaticMeshComponent*                   CallFunc_AddComponent_ReturnValue;                 // 0x0030(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0038(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_39[0x7];                                       // 0x0039(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTransform                             CallFunc_MakeTransform_ReturnValue;                // 0x0040(0x0030)(IsPlainOldData, NoDestructor)
	struct FLinearColor                           CallFunc_Conv_VectorToLinearColor_ReturnValue;     // 0x0070(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FHitResult                             CallFunc_K2_SetWorldTransform_SweepHitResult;      // 0x0080(0x0088)(IsPlainOldData, NoDestructor, ContainsInstancedReference)
	struct FLinearColor                           CallFunc_Conv_VectorToLinearColor_ReturnValue1;    // 0x0108(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(CUBE_C_OnRep_DestTurnedOn) == 0x000010, "Wrong alignment on CUBE_C_OnRep_DestTurnedOn");
static_assert(sizeof(CUBE_C_OnRep_DestTurnedOn) == 0x000120, "Wrong size on CUBE_C_OnRep_DestTurnedOn");
static_assert(offsetof(CUBE_C_OnRep_DestTurnedOn, Temp_struct_Variable) == 0x000000, "Member 'CUBE_C_OnRep_DestTurnedOn::Temp_struct_Variable' has a wrong offset!");
static_assert(offsetof(CUBE_C_OnRep_DestTurnedOn, CallFunc_AddComponent_ReturnValue) == 0x000030, "Member 'CUBE_C_OnRep_DestTurnedOn::CallFunc_AddComponent_ReturnValue' has a wrong offset!");
static_assert(offsetof(CUBE_C_OnRep_DestTurnedOn, CallFunc_IsValid_ReturnValue) == 0x000038, "Member 'CUBE_C_OnRep_DestTurnedOn::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(CUBE_C_OnRep_DestTurnedOn, CallFunc_MakeTransform_ReturnValue) == 0x000040, "Member 'CUBE_C_OnRep_DestTurnedOn::CallFunc_MakeTransform_ReturnValue' has a wrong offset!");
static_assert(offsetof(CUBE_C_OnRep_DestTurnedOn, CallFunc_Conv_VectorToLinearColor_ReturnValue) == 0x000070, "Member 'CUBE_C_OnRep_DestTurnedOn::CallFunc_Conv_VectorToLinearColor_ReturnValue' has a wrong offset!");
static_assert(offsetof(CUBE_C_OnRep_DestTurnedOn, CallFunc_K2_SetWorldTransform_SweepHitResult) == 0x000080, "Member 'CUBE_C_OnRep_DestTurnedOn::CallFunc_K2_SetWorldTransform_SweepHitResult' has a wrong offset!");
static_assert(offsetof(CUBE_C_OnRep_DestTurnedOn, CallFunc_Conv_VectorToLinearColor_ReturnValue1) == 0x000108, "Member 'CUBE_C_OnRep_DestTurnedOn::CallFunc_Conv_VectorToLinearColor_ReturnValue1' has a wrong offset!");

}


#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: GA_Athena_C4

#include "Basic.hpp"

#include "CoreUObject_structs.hpp"
#include "GameplayAbilities_structs.hpp"
#include "FortniteGame_structs.hpp"
#include "FortniteGame_classes.hpp"
#include "GameplayTags_structs.hpp"
#include "Engine_structs.hpp"


namespace SDK
{

// BlueprintGeneratedClass GA_Athena_C4.GA_Athena_C4_C
// 0x0240 (0x0B78 - 0x0938)
class UGA_Athena_C4_C final : public UFortGameplayAbility
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x0938(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	struct FGameplayTag                           EventActivation;                                   // 0x0940(0x0008)(Edit, BlueprintVisible, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)
	struct FGameplayTag                           EventComplete;                                     // 0x0948(0x0008)(Edit, BlueprintVisible, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)
	float                                         GrenadeSpeedMin;                                   // 0x0950(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         GrenadeSpeedMax;                                   // 0x0954(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         GravityScale;                                      // 0x0958(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_95C[0x4];                                      // 0x095C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class USoundBase*                             GrenadeSound;                                      // 0x0960(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FGameplayTag                           EC_DefaultExplosion;                               // 0x0968(0x0008)(Edit, BlueprintVisible, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)
	struct FFortGameplayEffectContainerSpec       EC_ReturnedEffect;                                 // 0x0970(0x0080)(Edit, BlueprintVisible, DisableEditOnInstance)
	float                                         ExplosionRadius;                                   // 0x09F0(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         AdditionalThrowAngle;                              // 0x09F4(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FFortFeedbackHandle                    GrenadeDialogFeedback;                             // 0x09F8(0x0018)(Edit, BlueprintVisible, DisableEditOnInstance, NoDestructor)
	bool                                          GrenadeAmmo;                                       // 0x0A10(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	bool                                          PlasmaGrenades;                                    // 0x0A11(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	bool                                          Flashbang;                                         // 0x0A12(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	uint8                                         Pad_A13[0x1];                                      // 0x0A13(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                GrenadeTargetingOriginOffset;                      // 0x0A14(0x000C)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AB_BGA_Athena_C4_C*                     DummyProjectile;                                   // 0x0A20(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          DummyShouldBounce;                                 // 0x0A28(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	uint8                                         Pad_A29[0x3];                                      // 0x0A29(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         DummyBounciness;                                   // 0x0A2C(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         DummyFriction;                                     // 0x0A30(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         TrajectoryUpdateInterval;                          // 0x0A34(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         DummyMaxSpeed;                                     // 0x0A38(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         DummyGravity;                                      // 0x0A3C(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         DummyTimeStep;                                     // 0x0A40(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         DummyExtent;                                       // 0x0A44(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                GrenadeTargetingOriginOffset_Crouched;             // 0x0A48(0x000C)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          InThrowWindup;                                     // 0x0A54(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	uint8                                         Pad_A55[0x3];                                      // 0x0A55(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class ABP_ProjectileTrajectory_C*             TrajectoryIndicator;                               // 0x0A58(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UClass*                                 TrajectoryIndicatorClass;                          // 0x0A60(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          AbilityKeyPressed;                                 // 0x0A68(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	uint8                                         Pad_A69[0x3];                                      // 0x0A69(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         MaxSpeedPitch;                                     // 0x0A6C(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         MinSpeedPitch;                                     // 0x0A70(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_A74[0x4];                                      // 0x0A74(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FGameplayEventData                     Event_Data;                                        // 0x0A78(0x00A8)(Edit, BlueprintVisible, DisableEditOnInstance)
	class AFortPlayerPawn*                        PlayerPawn;                                        // 0x0B20(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         MaxTossPitch;                                      // 0x0B28(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         MaxTrajectoryBounces;                              // 0x0B2C(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         PostThrowCancelDelay;                              // 0x0B30(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_B34[0x4];                                      // 0x0B34(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class AB_BGA_Athena_C4_C*                     RefToC4;                                           // 0x0B38(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         Activation_Radius;                                 // 0x0B40(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         ExplosionLevel;                                    // 0x0B44(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UClass*                                 BGA_C4;                                            // 0x0B48(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FGameplayTag                           GroupActorTag;                                     // 0x0B50(0x0008)(Edit, BlueprintVisible, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)
	class UClass*                                 PassiveGE;                                         // 0x0B58(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         PostThrowEndDelay;                                 // 0x0B60(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_B64[0x4];                                      // 0x0B64(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FCurveTableRowHandle                   AthenaGameData;                                    // 0x0B68(0x0010)(Edit, BlueprintVisible, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)

public:
	void ExecuteUbergraph_GA_Athena_C4(int32 EntryPoint);
	void OnAbilityInputReleased();
	void TossGrenade();
	void CleanupTrajectoryDisplay();
	void K2_OnEndAbility(bool bWasCancelled);
	void Server_SpawnProjectile(const struct FVector& Location, const struct FRotator& Direction);
	void K2_ActivateAbility();
	void OnFinish_D5C0750D468D5EC1DF1F15815C808778();
	void OnFinish_01A70CBD4A577C13B81445B3B305B7EF();
	void OnFinish_F3EE7C7A41D0D02E5385ED9F13BBC693();
	void OnFinish_A4C94A3649D1AB25587D6FB932B0FB1A();
	void Triggered_C84858EE4C8DF3AD547017AE92DD2D25(const struct FGameplayAbilityTargetDataHandle& TargetData, const struct FGameplayTag& ApplicationTag);
	void Cancelled_C84858EE4C8DF3AD547017AE92DD2D25(const struct FGameplayAbilityTargetDataHandle& TargetData, const struct FGameplayTag& ApplicationTag);
	void Completed_C84858EE4C8DF3AD547017AE92DD2D25(const struct FGameplayAbilityTargetDataHandle& TargetData, const struct FGameplayTag& ApplicationTag);
	void UpdateTrajectorySpline();
	void SetupDummyProjectile();

	void SpawnLocationAndRotation(struct FVector* OutLoc, struct FRotator* OutRot) const;
	void CalcGrenadeSpeedFromPitch(float AimPitch, float* GrenadeSpeed) const;

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"GA_Athena_C4_C">();
	}
	static class UGA_Athena_C4_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<UGA_Athena_C4_C>();
	}
};
static_assert(alignof(UGA_Athena_C4_C) == 0x000008, "Wrong alignment on UGA_Athena_C4_C");
static_assert(sizeof(UGA_Athena_C4_C) == 0x000B78, "Wrong size on UGA_Athena_C4_C");
static_assert(offsetof(UGA_Athena_C4_C, UberGraphFrame) == 0x000938, "Member 'UGA_Athena_C4_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(UGA_Athena_C4_C, EventActivation) == 0x000940, "Member 'UGA_Athena_C4_C::EventActivation' has a wrong offset!");
static_assert(offsetof(UGA_Athena_C4_C, EventComplete) == 0x000948, "Member 'UGA_Athena_C4_C::EventComplete' has a wrong offset!");
static_assert(offsetof(UGA_Athena_C4_C, GrenadeSpeedMin) == 0x000950, "Member 'UGA_Athena_C4_C::GrenadeSpeedMin' has a wrong offset!");
static_assert(offsetof(UGA_Athena_C4_C, GrenadeSpeedMax) == 0x000954, "Member 'UGA_Athena_C4_C::GrenadeSpeedMax' has a wrong offset!");
static_assert(offsetof(UGA_Athena_C4_C, GravityScale) == 0x000958, "Member 'UGA_Athena_C4_C::GravityScale' has a wrong offset!");
static_assert(offsetof(UGA_Athena_C4_C, GrenadeSound) == 0x000960, "Member 'UGA_Athena_C4_C::GrenadeSound' has a wrong offset!");
static_assert(offsetof(UGA_Athena_C4_C, EC_DefaultExplosion) == 0x000968, "Member 'UGA_Athena_C4_C::EC_DefaultExplosion' has a wrong offset!");
static_assert(offsetof(UGA_Athena_C4_C, EC_ReturnedEffect) == 0x000970, "Member 'UGA_Athena_C4_C::EC_ReturnedEffect' has a wrong offset!");
static_assert(offsetof(UGA_Athena_C4_C, ExplosionRadius) == 0x0009F0, "Member 'UGA_Athena_C4_C::ExplosionRadius' has a wrong offset!");
static_assert(offsetof(UGA_Athena_C4_C, AdditionalThrowAngle) == 0x0009F4, "Member 'UGA_Athena_C4_C::AdditionalThrowAngle' has a wrong offset!");
static_assert(offsetof(UGA_Athena_C4_C, GrenadeDialogFeedback) == 0x0009F8, "Member 'UGA_Athena_C4_C::GrenadeDialogFeedback' has a wrong offset!");
static_assert(offsetof(UGA_Athena_C4_C, GrenadeAmmo) == 0x000A10, "Member 'UGA_Athena_C4_C::GrenadeAmmo' has a wrong offset!");
static_assert(offsetof(UGA_Athena_C4_C, PlasmaGrenades) == 0x000A11, "Member 'UGA_Athena_C4_C::PlasmaGrenades' has a wrong offset!");
static_assert(offsetof(UGA_Athena_C4_C, Flashbang) == 0x000A12, "Member 'UGA_Athena_C4_C::Flashbang' has a wrong offset!");
static_assert(offsetof(UGA_Athena_C4_C, GrenadeTargetingOriginOffset) == 0x000A14, "Member 'UGA_Athena_C4_C::GrenadeTargetingOriginOffset' has a wrong offset!");
static_assert(offsetof(UGA_Athena_C4_C, DummyProjectile) == 0x000A20, "Member 'UGA_Athena_C4_C::DummyProjectile' has a wrong offset!");
static_assert(offsetof(UGA_Athena_C4_C, DummyShouldBounce) == 0x000A28, "Member 'UGA_Athena_C4_C::DummyShouldBounce' has a wrong offset!");
static_assert(offsetof(UGA_Athena_C4_C, DummyBounciness) == 0x000A2C, "Member 'UGA_Athena_C4_C::DummyBounciness' has a wrong offset!");
static_assert(offsetof(UGA_Athena_C4_C, DummyFriction) == 0x000A30, "Member 'UGA_Athena_C4_C::DummyFriction' has a wrong offset!");
static_assert(offsetof(UGA_Athena_C4_C, TrajectoryUpdateInterval) == 0x000A34, "Member 'UGA_Athena_C4_C::TrajectoryUpdateInterval' has a wrong offset!");
static_assert(offsetof(UGA_Athena_C4_C, DummyMaxSpeed) == 0x000A38, "Member 'UGA_Athena_C4_C::DummyMaxSpeed' has a wrong offset!");
static_assert(offsetof(UGA_Athena_C4_C, DummyGravity) == 0x000A3C, "Member 'UGA_Athena_C4_C::DummyGravity' has a wrong offset!");
static_assert(offsetof(UGA_Athena_C4_C, DummyTimeStep) == 0x000A40, "Member 'UGA_Athena_C4_C::DummyTimeStep' has a wrong offset!");
static_assert(offsetof(UGA_Athena_C4_C, DummyExtent) == 0x000A44, "Member 'UGA_Athena_C4_C::DummyExtent' has a wrong offset!");
static_assert(offsetof(UGA_Athena_C4_C, GrenadeTargetingOriginOffset_Crouched) == 0x000A48, "Member 'UGA_Athena_C4_C::GrenadeTargetingOriginOffset_Crouched' has a wrong offset!");
static_assert(offsetof(UGA_Athena_C4_C, InThrowWindup) == 0x000A54, "Member 'UGA_Athena_C4_C::InThrowWindup' has a wrong offset!");
static_assert(offsetof(UGA_Athena_C4_C, TrajectoryIndicator) == 0x000A58, "Member 'UGA_Athena_C4_C::TrajectoryIndicator' has a wrong offset!");
static_assert(offsetof(UGA_Athena_C4_C, TrajectoryIndicatorClass) == 0x000A60, "Member 'UGA_Athena_C4_C::TrajectoryIndicatorClass' has a wrong offset!");
static_assert(offsetof(UGA_Athena_C4_C, AbilityKeyPressed) == 0x000A68, "Member 'UGA_Athena_C4_C::AbilityKeyPressed' has a wrong offset!");
static_assert(offsetof(UGA_Athena_C4_C, MaxSpeedPitch) == 0x000A6C, "Member 'UGA_Athena_C4_C::MaxSpeedPitch' has a wrong offset!");
static_assert(offsetof(UGA_Athena_C4_C, MinSpeedPitch) == 0x000A70, "Member 'UGA_Athena_C4_C::MinSpeedPitch' has a wrong offset!");
static_assert(offsetof(UGA_Athena_C4_C, Event_Data) == 0x000A78, "Member 'UGA_Athena_C4_C::Event_Data' has a wrong offset!");
static_assert(offsetof(UGA_Athena_C4_C, PlayerPawn) == 0x000B20, "Member 'UGA_Athena_C4_C::PlayerPawn' has a wrong offset!");
static_assert(offsetof(UGA_Athena_C4_C, MaxTossPitch) == 0x000B28, "Member 'UGA_Athena_C4_C::MaxTossPitch' has a wrong offset!");
static_assert(offsetof(UGA_Athena_C4_C, MaxTrajectoryBounces) == 0x000B2C, "Member 'UGA_Athena_C4_C::MaxTrajectoryBounces' has a wrong offset!");
static_assert(offsetof(UGA_Athena_C4_C, PostThrowCancelDelay) == 0x000B30, "Member 'UGA_Athena_C4_C::PostThrowCancelDelay' has a wrong offset!");
static_assert(offsetof(UGA_Athena_C4_C, RefToC4) == 0x000B38, "Member 'UGA_Athena_C4_C::RefToC4' has a wrong offset!");
static_assert(offsetof(UGA_Athena_C4_C, Activation_Radius) == 0x000B40, "Member 'UGA_Athena_C4_C::Activation_Radius' has a wrong offset!");
static_assert(offsetof(UGA_Athena_C4_C, ExplosionLevel) == 0x000B44, "Member 'UGA_Athena_C4_C::ExplosionLevel' has a wrong offset!");
static_assert(offsetof(UGA_Athena_C4_C, BGA_C4) == 0x000B48, "Member 'UGA_Athena_C4_C::BGA_C4' has a wrong offset!");
static_assert(offsetof(UGA_Athena_C4_C, GroupActorTag) == 0x000B50, "Member 'UGA_Athena_C4_C::GroupActorTag' has a wrong offset!");
static_assert(offsetof(UGA_Athena_C4_C, PassiveGE) == 0x000B58, "Member 'UGA_Athena_C4_C::PassiveGE' has a wrong offset!");
static_assert(offsetof(UGA_Athena_C4_C, PostThrowEndDelay) == 0x000B60, "Member 'UGA_Athena_C4_C::PostThrowEndDelay' has a wrong offset!");
static_assert(offsetof(UGA_Athena_C4_C, AthenaGameData) == 0x000B68, "Member 'UGA_Athena_C4_C::AthenaGameData' has a wrong offset!");

}


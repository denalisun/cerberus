#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: GA_ThrowConsumable

#include "Basic.hpp"

#include "FortniteGame_structs.hpp"
#include "FortniteGame_classes.hpp"
#include "GameplayTags_structs.hpp"
#include "Engine_structs.hpp"
#include "GameplayAbilities_structs.hpp"
#include "CoreUObject_structs.hpp"


namespace SDK
{

// BlueprintGeneratedClass GA_ThrowConsumable.GA_ThrowConsumable_C
// 0x0170 (0x0AA8 - 0x0938)
class UGA_ThrowConsumable_C : public UFortGameplayAbility
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x0938(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	class AFortPlayerPawn*                        PlayerPawn;                                        // 0x0940(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          AbilityKeyPressed;                                 // 0x0948(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	bool                                          InThrowWindup;                                     // 0x0949(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	uint8                                         Pad_94A[0x2];                                      // 0x094A(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         AdditionalThrowAngle;                              // 0x094C(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         MaxTossPitch;                                      // 0x0950(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                GrenadeTargetingOriginOffset;                      // 0x0954(0x000C)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                GrenadeTargetingOriginOffset_Crouched;             // 0x0960(0x000C)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_96C[0x4];                                      // 0x096C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class AFortProjectileBase*                    SpawnedProjectile;                                 // 0x0970(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UClass*                                 Proj_ThrownProjectile;                             // 0x0978(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FFortGameplayEffectContainerSpec       ExplosionEffectContainerSpec;                      // 0x0980(0x0080)(Edit, BlueprintVisible, DisableEditOnInstance)
	struct FScalableFloat                         ProjectileSpeed;                                   // 0x0A00(0x0020)(Edit, BlueprintVisible, DisableEditOnInstance)
	struct FScalableFloat                         ProjectileGravityScale;                            // 0x0A20(0x0020)(Edit, BlueprintVisible, DisableEditOnInstance)
	float                                         TrajectoryUpdateInterval;                          // 0x0A40(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FGameplayTag                           EC_DefaultExplosion;                               // 0x0A44(0x0008)(Edit, BlueprintVisible, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_A4C[0x4];                                      // 0x0A4C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UAnimMontage*                           CookMonage;                                        // 0x0A50(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UAnimMontage*                           ThrowMontage;                                      // 0x0A58(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FGameplayTag                           GC_OnThrow;                                        // 0x0A60(0x0008)(Edit, BlueprintVisible, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)
	class ABP_ProjectileTrajectory_C*             TrajectoryIndicator;                               // 0x0A68(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UClass*                                 TrajectoryIndicatorClass;                          // 0x0A70(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AFortProjectileBase*                    DummyProjectile;                                   // 0x0A78(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         DummyMaxSpeed;                                     // 0x0A80(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         DummyGravity;                                      // 0x0A84(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         DummyExtent;                                       // 0x0A88(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         DummyTimeStep;                                     // 0x0A8C(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UClass*                                 GE_InWindup;                                       // 0x0A90(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FActiveGameplayEffectHandle            Handle_GE_InWindup;                                // 0x0A98(0x0008)(Edit, BlueprintVisible, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)
	bool                                          SpawnedOnEquip;                                    // 0x0AA0(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)

public:
	void ExecuteUbergraph_GA_ThrowConsumable(int32 EntryPoint);
	void UpdateTrajectory();
	void CleanupTrajectoryIndicatorOnUnequip();
	void K2_ActivateAbility();
	void OnAbilityInputReleased();
	void InitTrajectoryVariables();
	void K2_OnEndAbility(bool bWasCancelled);
	void AttemptSpawnThrownProjectile();
	void ThrowProjectile();
	void OnCompleted_D89CCB8E47DB19D6DCF41F96F207CC3D();
	void OnBlendOut_D89CCB8E47DB19D6DCF41F96F207CC3D();
	void OnInterrupted_D89CCB8E47DB19D6DCF41F96F207CC3D();
	void OnCancelled_D89CCB8E47DB19D6DCF41F96F207CC3D();
	void OnFinish_96367E244486362FDDE5ED87D909C17B();
	void Triggered_01C5B37D48E3DC6F82DDC58640CE2A27(const struct FGameplayAbilityTargetDataHandle& TargetData, const struct FGameplayTag& ApplicationTag);
	void Cancelled_01C5B37D48E3DC6F82DDC58640CE2A27(const struct FGameplayAbilityTargetDataHandle& TargetData, const struct FGameplayTag& ApplicationTag);
	void Completed_01C5B37D48E3DC6F82DDC58640CE2A27(const struct FGameplayAbilityTargetDataHandle& TargetData, const struct FGameplayTag& ApplicationTag);
	void PrethrowSetup();
	void SpawnThrownProjectile(class UClass* ProjectileClass_0, const struct FVector& ProjectileSpawnLocation, const struct FRotator& ProjectileSpawnDirection, const struct FFortGameplayEffectContainerSpec& ExplosionEffectContainerSpec_0, float ProjectileInitialSpeed, float ProjectileGravityScale_0, class AFortProjectileBase** SpawnedProjectile_0);
	void OnProjectileSpawned(class AFortProjectileBase* SpawnedProjectile_0);
	void OnProjectileSetup();
	void SetupDummyProjectile();
	void UpdateTrajectorySpline();
	void PostThrowCleanup();
	void CleanupTrajectory();
	class AFortProjectileTrajectory* SpawnTrajectoryIndicator(bool bSpawnOnEquip);

	void GetSpawnLocationAndRotation(struct FVector* Location, struct FRotator* Rotation) const;
	void GetOwningPlayer(class AFortPlayerPawn** Player_Pawn) const;
	void GetProjectileTrajectoryPoints(TArray<struct FVector>* OutSplinePoints, TArray<struct FVector>* OutSplineTangents, struct FHitResult* OutHitResult) const;
	TSubclassOf<class AFortProjectileTrajectory> GetProjectileTrajectoryActor() const;

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"GA_ThrowConsumable_C">();
	}
	static class UGA_ThrowConsumable_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<UGA_ThrowConsumable_C>();
	}
};
static_assert(alignof(UGA_ThrowConsumable_C) == 0x000008, "Wrong alignment on UGA_ThrowConsumable_C");
static_assert(sizeof(UGA_ThrowConsumable_C) == 0x000AA8, "Wrong size on UGA_ThrowConsumable_C");
static_assert(offsetof(UGA_ThrowConsumable_C, UberGraphFrame) == 0x000938, "Member 'UGA_ThrowConsumable_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(UGA_ThrowConsumable_C, PlayerPawn) == 0x000940, "Member 'UGA_ThrowConsumable_C::PlayerPawn' has a wrong offset!");
static_assert(offsetof(UGA_ThrowConsumable_C, AbilityKeyPressed) == 0x000948, "Member 'UGA_ThrowConsumable_C::AbilityKeyPressed' has a wrong offset!");
static_assert(offsetof(UGA_ThrowConsumable_C, InThrowWindup) == 0x000949, "Member 'UGA_ThrowConsumable_C::InThrowWindup' has a wrong offset!");
static_assert(offsetof(UGA_ThrowConsumable_C, AdditionalThrowAngle) == 0x00094C, "Member 'UGA_ThrowConsumable_C::AdditionalThrowAngle' has a wrong offset!");
static_assert(offsetof(UGA_ThrowConsumable_C, MaxTossPitch) == 0x000950, "Member 'UGA_ThrowConsumable_C::MaxTossPitch' has a wrong offset!");
static_assert(offsetof(UGA_ThrowConsumable_C, GrenadeTargetingOriginOffset) == 0x000954, "Member 'UGA_ThrowConsumable_C::GrenadeTargetingOriginOffset' has a wrong offset!");
static_assert(offsetof(UGA_ThrowConsumable_C, GrenadeTargetingOriginOffset_Crouched) == 0x000960, "Member 'UGA_ThrowConsumable_C::GrenadeTargetingOriginOffset_Crouched' has a wrong offset!");
static_assert(offsetof(UGA_ThrowConsumable_C, SpawnedProjectile) == 0x000970, "Member 'UGA_ThrowConsumable_C::SpawnedProjectile' has a wrong offset!");
static_assert(offsetof(UGA_ThrowConsumable_C, Proj_ThrownProjectile) == 0x000978, "Member 'UGA_ThrowConsumable_C::Proj_ThrownProjectile' has a wrong offset!");
static_assert(offsetof(UGA_ThrowConsumable_C, ExplosionEffectContainerSpec) == 0x000980, "Member 'UGA_ThrowConsumable_C::ExplosionEffectContainerSpec' has a wrong offset!");
static_assert(offsetof(UGA_ThrowConsumable_C, ProjectileSpeed) == 0x000A00, "Member 'UGA_ThrowConsumable_C::ProjectileSpeed' has a wrong offset!");
static_assert(offsetof(UGA_ThrowConsumable_C, ProjectileGravityScale) == 0x000A20, "Member 'UGA_ThrowConsumable_C::ProjectileGravityScale' has a wrong offset!");
static_assert(offsetof(UGA_ThrowConsumable_C, TrajectoryUpdateInterval) == 0x000A40, "Member 'UGA_ThrowConsumable_C::TrajectoryUpdateInterval' has a wrong offset!");
static_assert(offsetof(UGA_ThrowConsumable_C, EC_DefaultExplosion) == 0x000A44, "Member 'UGA_ThrowConsumable_C::EC_DefaultExplosion' has a wrong offset!");
static_assert(offsetof(UGA_ThrowConsumable_C, CookMonage) == 0x000A50, "Member 'UGA_ThrowConsumable_C::CookMonage' has a wrong offset!");
static_assert(offsetof(UGA_ThrowConsumable_C, ThrowMontage) == 0x000A58, "Member 'UGA_ThrowConsumable_C::ThrowMontage' has a wrong offset!");
static_assert(offsetof(UGA_ThrowConsumable_C, GC_OnThrow) == 0x000A60, "Member 'UGA_ThrowConsumable_C::GC_OnThrow' has a wrong offset!");
static_assert(offsetof(UGA_ThrowConsumable_C, TrajectoryIndicator) == 0x000A68, "Member 'UGA_ThrowConsumable_C::TrajectoryIndicator' has a wrong offset!");
static_assert(offsetof(UGA_ThrowConsumable_C, TrajectoryIndicatorClass) == 0x000A70, "Member 'UGA_ThrowConsumable_C::TrajectoryIndicatorClass' has a wrong offset!");
static_assert(offsetof(UGA_ThrowConsumable_C, DummyProjectile) == 0x000A78, "Member 'UGA_ThrowConsumable_C::DummyProjectile' has a wrong offset!");
static_assert(offsetof(UGA_ThrowConsumable_C, DummyMaxSpeed) == 0x000A80, "Member 'UGA_ThrowConsumable_C::DummyMaxSpeed' has a wrong offset!");
static_assert(offsetof(UGA_ThrowConsumable_C, DummyGravity) == 0x000A84, "Member 'UGA_ThrowConsumable_C::DummyGravity' has a wrong offset!");
static_assert(offsetof(UGA_ThrowConsumable_C, DummyExtent) == 0x000A88, "Member 'UGA_ThrowConsumable_C::DummyExtent' has a wrong offset!");
static_assert(offsetof(UGA_ThrowConsumable_C, DummyTimeStep) == 0x000A8C, "Member 'UGA_ThrowConsumable_C::DummyTimeStep' has a wrong offset!");
static_assert(offsetof(UGA_ThrowConsumable_C, GE_InWindup) == 0x000A90, "Member 'UGA_ThrowConsumable_C::GE_InWindup' has a wrong offset!");
static_assert(offsetof(UGA_ThrowConsumable_C, Handle_GE_InWindup) == 0x000A98, "Member 'UGA_ThrowConsumable_C::Handle_GE_InWindup' has a wrong offset!");
static_assert(offsetof(UGA_ThrowConsumable_C, SpawnedOnEquip) == 0x000AA0, "Member 'UGA_ThrowConsumable_C::SpawnedOnEquip' has a wrong offset!");

}


#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: B_UtilityItem_Balloons_Athena

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "FortniteGame_structs.hpp"
#include "CoreUObject_structs.hpp"
#include "B_UtilityItem_Generic_Athena_classes.hpp"


namespace SDK
{

// BlueprintGeneratedClass B_UtilityItem_Balloons_Athena.B_UtilityItem_Balloons_Athena_C
// 0x0120 (0x0AA8 - 0x0988)
class AB_UtilityItem_Balloons_Athena_C final : public AB_UtilityItem_Generic_Athena_C
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x0988(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	class UAudioComponent*                        Baloon_FloatingLoop_SoundComp;                     // 0x0990(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UAudioComponent*                        Balloon_MaxAltitude_Sound;                         // 0x0998(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	TArray<class ABuildingGameplayActor*>         Balloons;                                          // 0x09A0(0x0010)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, DisableEditOnInstance)
	class UFortWorldItemDefinition*               Balloons_WID;                                      // 0x09B0(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class USoundBase*                             Ballon_Inflate_Sound;                              // 0x09B8(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class USoundBase*                             Ballon_StartToRise_Sound;                          // 0x09C0(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class USoundBase*                             Ballon_ReleaseSingle_Sound;                        // 0x09C8(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         BalloonsNeededForFlight;                           // 0x09D0(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_9D4[0x4];                                      // 0x09D4(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class USoundBase*                             Balloon_ReleaseMultiple_Sound;                     // 0x09D8(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class USoundBase*                             Balloon_maxheightLoop;                             // 0x09E0(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CurrentBalloonsInUse;                              // 0x09E8(0x0004)(Edit, BlueprintVisible, Net, ZeroConstructor, IsPlainOldData, RepNotify, NoDestructor, HasGetValueTypeHash)
	EFortCustomMovement                           FortCustomMovementMode;                            // 0x09EC(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_9ED[0x3];                                      // 0x09ED(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FRotator                               RotationOffset;                                    // 0x09F0(0x000C)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	EFortCustomMovement                           Ballooning;                                        // 0x09FC(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_9FD[0x3];                                      // 0x09FD(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         BalloonToSpawn;                                    // 0x0A00(0x0004)(Edit, BlueprintVisible, Net, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               RotationOffset_0;                                  // 0x0A04(0x000C)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	struct FRotator                               RotationOffset_1;                                  // 0x0A10(0x000C)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	struct FRotator                               RotationOffset_2;                                  // 0x0A1C(0x000C)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	struct FRotator                               RotationOffset_3;                                  // 0x0A28(0x000C)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	struct FRotator                               RotationOffset_4;                                  // 0x0A34(0x000C)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	struct FRotator                               RotationOffset_5;                                  // 0x0A40(0x000C)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	uint8                                         Pad_A4C[0x4];                                      // 0x0A4C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 PopAtMaxHeightFunctionName;                        // 0x0A50(0x0010)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, HasGetValueTypeHash)
	float                                         PopAtMaxHeightTimer;                               // 0x0A60(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_A64[0x4];                                      // 0x0A64(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class USoundBase*                             Balloon_Pop_Shot_Sound;                            // 0x0A68(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class USoundBase*                             Balloon_pop_sound;                                 // 0x0A70(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         BalloonColorRandom;                                // 0x0A78(0x0004)(Edit, BlueprintVisible, Net, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         BalloonStencilRandom;                              // 0x0A7C(0x0004)(Edit, BlueprintVisible, Net, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<int32>                                 IntArray;                                          // 0x0A80(0x0010)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance)
	class USkeletalMeshComponent*                 PlayerPawnMesh;                                    // 0x0A90(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class USoundBase*                             Balloon_floating_Loop;                             // 0x0A98(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class USoundBase*                             Balloon_floating_MaxAltitude_Loop;                 // 0x0AA0(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

public:
	void ExecuteUbergraph_B_UtilityItem_Balloons_Athena(int32 EntryPoint);
	void OnWeaponAttached();
	void BallooningMovementModeSwitch();
	void BalloonPopAudio();
	void PopAtMaxHeight();
	void AtMaxHeight(int32 RelationToCeiling);
	void ReOrderBalloons();
	void BalloonShot(class AActor* DamagedActor, float Damage, class AController* InstigatedBy, class AActor* DamageCauser, const struct FVector& HitLocation, class UPrimitiveComponent* FHitComponent, class FName BoneName, const struct FVector& Momentum);
	void MovementModeChangeFloat(class ACharacter* Character, EMovementMode PrevMovementMode, uint8 PreviousCustomMode);
	void RemoveItemFromPlayer();
	void EnteredVehicle(int32 SeatIndex);
	void ReleaseAllBalloons();
	void ReleaseBalloon(bool ReleaseAll);
	void SpawnBalloon();
	void K2_OnUnEquip();
	void UserConstructionScript();
	void OnRep_CurrentBalloonsInUse();

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"B_UtilityItem_Balloons_Athena_C">();
	}
	static class AB_UtilityItem_Balloons_Athena_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<AB_UtilityItem_Balloons_Athena_C>();
	}
};
static_assert(alignof(AB_UtilityItem_Balloons_Athena_C) == 0x000008, "Wrong alignment on AB_UtilityItem_Balloons_Athena_C");
static_assert(sizeof(AB_UtilityItem_Balloons_Athena_C) == 0x000AA8, "Wrong size on AB_UtilityItem_Balloons_Athena_C");
static_assert(offsetof(AB_UtilityItem_Balloons_Athena_C, UberGraphFrame) == 0x000988, "Member 'AB_UtilityItem_Balloons_Athena_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(AB_UtilityItem_Balloons_Athena_C, Baloon_FloatingLoop_SoundComp) == 0x000990, "Member 'AB_UtilityItem_Balloons_Athena_C::Baloon_FloatingLoop_SoundComp' has a wrong offset!");
static_assert(offsetof(AB_UtilityItem_Balloons_Athena_C, Balloon_MaxAltitude_Sound) == 0x000998, "Member 'AB_UtilityItem_Balloons_Athena_C::Balloon_MaxAltitude_Sound' has a wrong offset!");
static_assert(offsetof(AB_UtilityItem_Balloons_Athena_C, Balloons) == 0x0009A0, "Member 'AB_UtilityItem_Balloons_Athena_C::Balloons' has a wrong offset!");
static_assert(offsetof(AB_UtilityItem_Balloons_Athena_C, Balloons_WID) == 0x0009B0, "Member 'AB_UtilityItem_Balloons_Athena_C::Balloons_WID' has a wrong offset!");
static_assert(offsetof(AB_UtilityItem_Balloons_Athena_C, Ballon_Inflate_Sound) == 0x0009B8, "Member 'AB_UtilityItem_Balloons_Athena_C::Ballon_Inflate_Sound' has a wrong offset!");
static_assert(offsetof(AB_UtilityItem_Balloons_Athena_C, Ballon_StartToRise_Sound) == 0x0009C0, "Member 'AB_UtilityItem_Balloons_Athena_C::Ballon_StartToRise_Sound' has a wrong offset!");
static_assert(offsetof(AB_UtilityItem_Balloons_Athena_C, Ballon_ReleaseSingle_Sound) == 0x0009C8, "Member 'AB_UtilityItem_Balloons_Athena_C::Ballon_ReleaseSingle_Sound' has a wrong offset!");
static_assert(offsetof(AB_UtilityItem_Balloons_Athena_C, BalloonsNeededForFlight) == 0x0009D0, "Member 'AB_UtilityItem_Balloons_Athena_C::BalloonsNeededForFlight' has a wrong offset!");
static_assert(offsetof(AB_UtilityItem_Balloons_Athena_C, Balloon_ReleaseMultiple_Sound) == 0x0009D8, "Member 'AB_UtilityItem_Balloons_Athena_C::Balloon_ReleaseMultiple_Sound' has a wrong offset!");
static_assert(offsetof(AB_UtilityItem_Balloons_Athena_C, Balloon_maxheightLoop) == 0x0009E0, "Member 'AB_UtilityItem_Balloons_Athena_C::Balloon_maxheightLoop' has a wrong offset!");
static_assert(offsetof(AB_UtilityItem_Balloons_Athena_C, CurrentBalloonsInUse) == 0x0009E8, "Member 'AB_UtilityItem_Balloons_Athena_C::CurrentBalloonsInUse' has a wrong offset!");
static_assert(offsetof(AB_UtilityItem_Balloons_Athena_C, FortCustomMovementMode) == 0x0009EC, "Member 'AB_UtilityItem_Balloons_Athena_C::FortCustomMovementMode' has a wrong offset!");
static_assert(offsetof(AB_UtilityItem_Balloons_Athena_C, RotationOffset) == 0x0009F0, "Member 'AB_UtilityItem_Balloons_Athena_C::RotationOffset' has a wrong offset!");
static_assert(offsetof(AB_UtilityItem_Balloons_Athena_C, Ballooning) == 0x0009FC, "Member 'AB_UtilityItem_Balloons_Athena_C::Ballooning' has a wrong offset!");
static_assert(offsetof(AB_UtilityItem_Balloons_Athena_C, BalloonToSpawn) == 0x000A00, "Member 'AB_UtilityItem_Balloons_Athena_C::BalloonToSpawn' has a wrong offset!");
static_assert(offsetof(AB_UtilityItem_Balloons_Athena_C, RotationOffset_0) == 0x000A04, "Member 'AB_UtilityItem_Balloons_Athena_C::RotationOffset_0' has a wrong offset!");
static_assert(offsetof(AB_UtilityItem_Balloons_Athena_C, RotationOffset_1) == 0x000A10, "Member 'AB_UtilityItem_Balloons_Athena_C::RotationOffset_1' has a wrong offset!");
static_assert(offsetof(AB_UtilityItem_Balloons_Athena_C, RotationOffset_2) == 0x000A1C, "Member 'AB_UtilityItem_Balloons_Athena_C::RotationOffset_2' has a wrong offset!");
static_assert(offsetof(AB_UtilityItem_Balloons_Athena_C, RotationOffset_3) == 0x000A28, "Member 'AB_UtilityItem_Balloons_Athena_C::RotationOffset_3' has a wrong offset!");
static_assert(offsetof(AB_UtilityItem_Balloons_Athena_C, RotationOffset_4) == 0x000A34, "Member 'AB_UtilityItem_Balloons_Athena_C::RotationOffset_4' has a wrong offset!");
static_assert(offsetof(AB_UtilityItem_Balloons_Athena_C, RotationOffset_5) == 0x000A40, "Member 'AB_UtilityItem_Balloons_Athena_C::RotationOffset_5' has a wrong offset!");
static_assert(offsetof(AB_UtilityItem_Balloons_Athena_C, PopAtMaxHeightFunctionName) == 0x000A50, "Member 'AB_UtilityItem_Balloons_Athena_C::PopAtMaxHeightFunctionName' has a wrong offset!");
static_assert(offsetof(AB_UtilityItem_Balloons_Athena_C, PopAtMaxHeightTimer) == 0x000A60, "Member 'AB_UtilityItem_Balloons_Athena_C::PopAtMaxHeightTimer' has a wrong offset!");
static_assert(offsetof(AB_UtilityItem_Balloons_Athena_C, Balloon_Pop_Shot_Sound) == 0x000A68, "Member 'AB_UtilityItem_Balloons_Athena_C::Balloon_Pop_Shot_Sound' has a wrong offset!");
static_assert(offsetof(AB_UtilityItem_Balloons_Athena_C, Balloon_pop_sound) == 0x000A70, "Member 'AB_UtilityItem_Balloons_Athena_C::Balloon_pop_sound' has a wrong offset!");
static_assert(offsetof(AB_UtilityItem_Balloons_Athena_C, BalloonColorRandom) == 0x000A78, "Member 'AB_UtilityItem_Balloons_Athena_C::BalloonColorRandom' has a wrong offset!");
static_assert(offsetof(AB_UtilityItem_Balloons_Athena_C, BalloonStencilRandom) == 0x000A7C, "Member 'AB_UtilityItem_Balloons_Athena_C::BalloonStencilRandom' has a wrong offset!");
static_assert(offsetof(AB_UtilityItem_Balloons_Athena_C, IntArray) == 0x000A80, "Member 'AB_UtilityItem_Balloons_Athena_C::IntArray' has a wrong offset!");
static_assert(offsetof(AB_UtilityItem_Balloons_Athena_C, PlayerPawnMesh) == 0x000A90, "Member 'AB_UtilityItem_Balloons_Athena_C::PlayerPawnMesh' has a wrong offset!");
static_assert(offsetof(AB_UtilityItem_Balloons_Athena_C, Balloon_floating_Loop) == 0x000A98, "Member 'AB_UtilityItem_Balloons_Athena_C::Balloon_floating_Loop' has a wrong offset!");
static_assert(offsetof(AB_UtilityItem_Balloons_Athena_C, Balloon_floating_MaxAltitude_Loop) == 0x000AA0, "Member 'AB_UtilityItem_Balloons_Athena_C::Balloon_floating_MaxAltitude_Loop' has a wrong offset!");

}


#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: B_Prj_Athena_GiftBox

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "CoreUObject_structs.hpp"
#include "ECardinalDirection_structs.hpp"
#include "FortniteGame_structs.hpp"
#include "FortniteGame_classes.hpp"


namespace SDK
{

// BlueprintGeneratedClass B_Prj_Athena_GiftBox.B_Prj_Athena_GiftBox_C
// 0x0290 (0x0A48 - 0x07B8)
class AB_Prj_Athena_GiftBox_C final : public AFortSuperTowerGrenadeProjectile
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x07B8(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	class UParticleSystemComponent*               Trail;                                             // 0x07C0(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UStaticMeshComponent*                   Mesh;                                              // 0x07C8(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class URotatingMovementComponent*             RotatingMovement;                                  // 0x07D0(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	struct FVector                                BaseDestination;                                   // 0x07D8(0x000C)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_7E4[0x4];                                      // 0x07E4(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UParticleSystem*                        P_BuildBuilding;                                   // 0x07E8(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class USoundBase*                             Cue_CloseSound;                                    // 0x07F0(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class USoundBase*                             Cue_DistantSound;                                  // 0x07F8(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                GridExplosionOffset;                               // 0x0800(0x000C)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         GridSizeXY;                                        // 0x080C(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         GridSizeZ;                                         // 0x0810(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         GridYOffset;                                       // 0x0814(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         GridZOffset;                                       // 0x0818(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ECardinalDirection                            CardinalDirection;                                 // 0x081C(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_81D[0x3];                                      // 0x081D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	TMap<ECardinalDirection, float>               OrientationYawOffsets;                             // 0x0820(0x0050)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance)
	TMap<ECardinalDirection, struct FVector>      OrientationLocationOffsets;                        // 0x0870(0x0050)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance)
	bool                                          IsDebug;                                           // 0x08C0(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	uint8                                         Pad_8C1[0x3];                                      // 0x08C1(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         TracedActorBuildDelay;                             // 0x08C4(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                BaseDestinationOffsetUnderground;                  // 0x08C8(0x000C)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_8D4[0x4];                                      // 0x08D4(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<struct FVector>                        ClearedCells_Normal;                               // 0x08D8(0x0010)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance)
	struct FVector                                LastBounceLocation;                                // 0x08E8(0x000C)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         MinBounceDistance;                                 // 0x08F4(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         LastBounceTime;                                    // 0x08F8(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         MinTimeBetweenBounces;                             // 0x08FC(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class USoundBase*                             BounceSound;                                       // 0x0900(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<struct FVector>                        ClearedCells_Underground;                          // 0x0908(0x0010)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance)
	bool                                          b_SpawnTracedActors;                               // 0x0918(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	uint8                                         Pad_919[0x7];                                      // 0x0919(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class UClass*>                         BGAClasses_Traced;                                 // 0x0920(0x0010)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance)
	TArray<struct FVector>                        BGALocations_Traced;                               // 0x0930(0x0010)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance)
	TArray<struct FRotator>                       BGARotations_Traced;                               // 0x0940(0x0010)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance)
	struct FVector                                DoorTraceOffsetHigh;                               // 0x0950(0x000C)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                DoorTraceOffsetLow;                                // 0x095C(0x000C)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          b_HitTerrain;                                      // 0x0968(0x0001)(Edit, BlueprintVisible, Net, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	uint8                                         Pad_969[0x7];                                      // 0x0969(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class USoundBase*                             InAirLoopSound;                                    // 0x0970(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UAudioComponent*                        InAirLoopComponent;                                // 0x0978(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         BounceTimeout;                                     // 0x0980(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_984[0x4];                                      // 0x0984(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UClass*                                 BuilderClass;                                      // 0x0988(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UClass*                                 BuilderClassBasement;                              // 0x0990(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<struct FVector>                        BGAScales_Traced;                                  // 0x0998(0x0010)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance)
	struct FVector                                LootSpawnLocation;                                 // 0x09A8(0x000C)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               LootSpawnRotation;                                 // 0x09B4(0x000C)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	struct FVector                                QuestTraceExtentTall;                              // 0x09C0(0x000C)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                QuestTraceExtent;                                  // 0x09CC(0x000C)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                QuestTractOffsetTall;                              // 0x09D8(0x000C)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                QuestTraceOffset;                                  // 0x09E4(0x000C)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AFortPlayerController*                  ControllerWhoThrew;                                // 0x09F0(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UFortQuestItemDefinition*               QuestItem;                                         // 0x09F8(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   ObjBackendName;                                    // 0x0A00(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FDataTableRowHandle                    ObjStat;                                           // 0x0A08(0x0010)(Edit, BlueprintVisible, DisableEditOnInstance, NoDestructor)
	class USoundBase*                             QuestSuccessSound;                                 // 0x0A18(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UParticleSystem*                        QuestSuccessEmitter;                               // 0x0A20(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UParticleSystem*                        P_BuildBuilding_Tall;                              // 0x0A28(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                Offset_ParticleSystem;                             // 0x0A30(0x000C)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                Offset_ParticleSystem_Tall;                        // 0x0A3C(0x000C)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

public:
	void ExecuteUbergraph_B_Prj_Athena_GiftBox(int32 EntryPoint);
	void Play_Quest_Success_FX();
	void OnBeginPlayQuestCheck();
	void ReceiveEndPlay(EEndPlayReason EndPlayReason);
	void Delete_another_actor();
	void Handle_Bounce(const struct FVector& Hit_Location);
	void ReceiveBeginPlay();
	void ReceiveHit(class UPrimitiveComponent* MyComp, class AActor* Other, class UPrimitiveComponent* OtherComp, bool bSelfMoved, const struct FVector& HitLocation, const struct FVector& HitNormal, const struct FVector& NormalImpulse, const struct FHitResult& Hit);
	void OnExploded(const TArray<class AActor*>& HitActors, const TArray<struct FHitResult>& HitResults);
	void OnStop(const struct FHitResult& Hit);
	void UserConstructionScript();
	void SetBaseDestination(const struct FHitResult& Hit);
	void CreateBaseSection(const struct FVector& ReferenceLocation, const TArray<class UClass*>& BGAClassArray, TArray<struct FVector>& BGALocationArray, TArray<struct FRotator>& BGARotationArray);
	void ClearAndBuild(TArray<struct FVector>& ClearedGridCells, const TArray<class UClass*>& BGAClassArray, TArray<struct FVector>& BGALocationArray, TArray<struct FRotator>& BGARotationArray, bool DestroyFloorsQuickly);
	void SpawnContents(const struct FVector& ReferenceLocation);
	void HandleProps(TArray<class AActor*>& Array);
	void CalculateCardinalDirection();
	void CallDynamicBuilder(class UClass* Class_0, const struct FVector& Location);
	void ClearOnly(TArray<struct FVector>& ClearedGridCells, bool DestroyFloorsQuickly);
	void SpawnProps(const struct FVector& ReferenceLocation);
	void CheckForGiftedTargets(const struct FVector& TraceLocation, const struct FVector& BoxExtent);

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"B_Prj_Athena_GiftBox_C">();
	}
	static class AB_Prj_Athena_GiftBox_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<AB_Prj_Athena_GiftBox_C>();
	}
};
static_assert(alignof(AB_Prj_Athena_GiftBox_C) == 0x000008, "Wrong alignment on AB_Prj_Athena_GiftBox_C");
static_assert(sizeof(AB_Prj_Athena_GiftBox_C) == 0x000A48, "Wrong size on AB_Prj_Athena_GiftBox_C");
static_assert(offsetof(AB_Prj_Athena_GiftBox_C, UberGraphFrame) == 0x0007B8, "Member 'AB_Prj_Athena_GiftBox_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(AB_Prj_Athena_GiftBox_C, Trail) == 0x0007C0, "Member 'AB_Prj_Athena_GiftBox_C::Trail' has a wrong offset!");
static_assert(offsetof(AB_Prj_Athena_GiftBox_C, Mesh) == 0x0007C8, "Member 'AB_Prj_Athena_GiftBox_C::Mesh' has a wrong offset!");
static_assert(offsetof(AB_Prj_Athena_GiftBox_C, RotatingMovement) == 0x0007D0, "Member 'AB_Prj_Athena_GiftBox_C::RotatingMovement' has a wrong offset!");
static_assert(offsetof(AB_Prj_Athena_GiftBox_C, BaseDestination) == 0x0007D8, "Member 'AB_Prj_Athena_GiftBox_C::BaseDestination' has a wrong offset!");
static_assert(offsetof(AB_Prj_Athena_GiftBox_C, P_BuildBuilding) == 0x0007E8, "Member 'AB_Prj_Athena_GiftBox_C::P_BuildBuilding' has a wrong offset!");
static_assert(offsetof(AB_Prj_Athena_GiftBox_C, Cue_CloseSound) == 0x0007F0, "Member 'AB_Prj_Athena_GiftBox_C::Cue_CloseSound' has a wrong offset!");
static_assert(offsetof(AB_Prj_Athena_GiftBox_C, Cue_DistantSound) == 0x0007F8, "Member 'AB_Prj_Athena_GiftBox_C::Cue_DistantSound' has a wrong offset!");
static_assert(offsetof(AB_Prj_Athena_GiftBox_C, GridExplosionOffset) == 0x000800, "Member 'AB_Prj_Athena_GiftBox_C::GridExplosionOffset' has a wrong offset!");
static_assert(offsetof(AB_Prj_Athena_GiftBox_C, GridSizeXY) == 0x00080C, "Member 'AB_Prj_Athena_GiftBox_C::GridSizeXY' has a wrong offset!");
static_assert(offsetof(AB_Prj_Athena_GiftBox_C, GridSizeZ) == 0x000810, "Member 'AB_Prj_Athena_GiftBox_C::GridSizeZ' has a wrong offset!");
static_assert(offsetof(AB_Prj_Athena_GiftBox_C, GridYOffset) == 0x000814, "Member 'AB_Prj_Athena_GiftBox_C::GridYOffset' has a wrong offset!");
static_assert(offsetof(AB_Prj_Athena_GiftBox_C, GridZOffset) == 0x000818, "Member 'AB_Prj_Athena_GiftBox_C::GridZOffset' has a wrong offset!");
static_assert(offsetof(AB_Prj_Athena_GiftBox_C, CardinalDirection) == 0x00081C, "Member 'AB_Prj_Athena_GiftBox_C::CardinalDirection' has a wrong offset!");
static_assert(offsetof(AB_Prj_Athena_GiftBox_C, OrientationYawOffsets) == 0x000820, "Member 'AB_Prj_Athena_GiftBox_C::OrientationYawOffsets' has a wrong offset!");
static_assert(offsetof(AB_Prj_Athena_GiftBox_C, OrientationLocationOffsets) == 0x000870, "Member 'AB_Prj_Athena_GiftBox_C::OrientationLocationOffsets' has a wrong offset!");
static_assert(offsetof(AB_Prj_Athena_GiftBox_C, IsDebug) == 0x0008C0, "Member 'AB_Prj_Athena_GiftBox_C::IsDebug' has a wrong offset!");
static_assert(offsetof(AB_Prj_Athena_GiftBox_C, TracedActorBuildDelay) == 0x0008C4, "Member 'AB_Prj_Athena_GiftBox_C::TracedActorBuildDelay' has a wrong offset!");
static_assert(offsetof(AB_Prj_Athena_GiftBox_C, BaseDestinationOffsetUnderground) == 0x0008C8, "Member 'AB_Prj_Athena_GiftBox_C::BaseDestinationOffsetUnderground' has a wrong offset!");
static_assert(offsetof(AB_Prj_Athena_GiftBox_C, ClearedCells_Normal) == 0x0008D8, "Member 'AB_Prj_Athena_GiftBox_C::ClearedCells_Normal' has a wrong offset!");
static_assert(offsetof(AB_Prj_Athena_GiftBox_C, LastBounceLocation) == 0x0008E8, "Member 'AB_Prj_Athena_GiftBox_C::LastBounceLocation' has a wrong offset!");
static_assert(offsetof(AB_Prj_Athena_GiftBox_C, MinBounceDistance) == 0x0008F4, "Member 'AB_Prj_Athena_GiftBox_C::MinBounceDistance' has a wrong offset!");
static_assert(offsetof(AB_Prj_Athena_GiftBox_C, LastBounceTime) == 0x0008F8, "Member 'AB_Prj_Athena_GiftBox_C::LastBounceTime' has a wrong offset!");
static_assert(offsetof(AB_Prj_Athena_GiftBox_C, MinTimeBetweenBounces) == 0x0008FC, "Member 'AB_Prj_Athena_GiftBox_C::MinTimeBetweenBounces' has a wrong offset!");
static_assert(offsetof(AB_Prj_Athena_GiftBox_C, BounceSound) == 0x000900, "Member 'AB_Prj_Athena_GiftBox_C::BounceSound' has a wrong offset!");
static_assert(offsetof(AB_Prj_Athena_GiftBox_C, ClearedCells_Underground) == 0x000908, "Member 'AB_Prj_Athena_GiftBox_C::ClearedCells_Underground' has a wrong offset!");
static_assert(offsetof(AB_Prj_Athena_GiftBox_C, b_SpawnTracedActors) == 0x000918, "Member 'AB_Prj_Athena_GiftBox_C::b_SpawnTracedActors' has a wrong offset!");
static_assert(offsetof(AB_Prj_Athena_GiftBox_C, BGAClasses_Traced) == 0x000920, "Member 'AB_Prj_Athena_GiftBox_C::BGAClasses_Traced' has a wrong offset!");
static_assert(offsetof(AB_Prj_Athena_GiftBox_C, BGALocations_Traced) == 0x000930, "Member 'AB_Prj_Athena_GiftBox_C::BGALocations_Traced' has a wrong offset!");
static_assert(offsetof(AB_Prj_Athena_GiftBox_C, BGARotations_Traced) == 0x000940, "Member 'AB_Prj_Athena_GiftBox_C::BGARotations_Traced' has a wrong offset!");
static_assert(offsetof(AB_Prj_Athena_GiftBox_C, DoorTraceOffsetHigh) == 0x000950, "Member 'AB_Prj_Athena_GiftBox_C::DoorTraceOffsetHigh' has a wrong offset!");
static_assert(offsetof(AB_Prj_Athena_GiftBox_C, DoorTraceOffsetLow) == 0x00095C, "Member 'AB_Prj_Athena_GiftBox_C::DoorTraceOffsetLow' has a wrong offset!");
static_assert(offsetof(AB_Prj_Athena_GiftBox_C, b_HitTerrain) == 0x000968, "Member 'AB_Prj_Athena_GiftBox_C::b_HitTerrain' has a wrong offset!");
static_assert(offsetof(AB_Prj_Athena_GiftBox_C, InAirLoopSound) == 0x000970, "Member 'AB_Prj_Athena_GiftBox_C::InAirLoopSound' has a wrong offset!");
static_assert(offsetof(AB_Prj_Athena_GiftBox_C, InAirLoopComponent) == 0x000978, "Member 'AB_Prj_Athena_GiftBox_C::InAirLoopComponent' has a wrong offset!");
static_assert(offsetof(AB_Prj_Athena_GiftBox_C, BounceTimeout) == 0x000980, "Member 'AB_Prj_Athena_GiftBox_C::BounceTimeout' has a wrong offset!");
static_assert(offsetof(AB_Prj_Athena_GiftBox_C, BuilderClass) == 0x000988, "Member 'AB_Prj_Athena_GiftBox_C::BuilderClass' has a wrong offset!");
static_assert(offsetof(AB_Prj_Athena_GiftBox_C, BuilderClassBasement) == 0x000990, "Member 'AB_Prj_Athena_GiftBox_C::BuilderClassBasement' has a wrong offset!");
static_assert(offsetof(AB_Prj_Athena_GiftBox_C, BGAScales_Traced) == 0x000998, "Member 'AB_Prj_Athena_GiftBox_C::BGAScales_Traced' has a wrong offset!");
static_assert(offsetof(AB_Prj_Athena_GiftBox_C, LootSpawnLocation) == 0x0009A8, "Member 'AB_Prj_Athena_GiftBox_C::LootSpawnLocation' has a wrong offset!");
static_assert(offsetof(AB_Prj_Athena_GiftBox_C, LootSpawnRotation) == 0x0009B4, "Member 'AB_Prj_Athena_GiftBox_C::LootSpawnRotation' has a wrong offset!");
static_assert(offsetof(AB_Prj_Athena_GiftBox_C, QuestTraceExtentTall) == 0x0009C0, "Member 'AB_Prj_Athena_GiftBox_C::QuestTraceExtentTall' has a wrong offset!");
static_assert(offsetof(AB_Prj_Athena_GiftBox_C, QuestTraceExtent) == 0x0009CC, "Member 'AB_Prj_Athena_GiftBox_C::QuestTraceExtent' has a wrong offset!");
static_assert(offsetof(AB_Prj_Athena_GiftBox_C, QuestTractOffsetTall) == 0x0009D8, "Member 'AB_Prj_Athena_GiftBox_C::QuestTractOffsetTall' has a wrong offset!");
static_assert(offsetof(AB_Prj_Athena_GiftBox_C, QuestTraceOffset) == 0x0009E4, "Member 'AB_Prj_Athena_GiftBox_C::QuestTraceOffset' has a wrong offset!");
static_assert(offsetof(AB_Prj_Athena_GiftBox_C, ControllerWhoThrew) == 0x0009F0, "Member 'AB_Prj_Athena_GiftBox_C::ControllerWhoThrew' has a wrong offset!");
static_assert(offsetof(AB_Prj_Athena_GiftBox_C, QuestItem) == 0x0009F8, "Member 'AB_Prj_Athena_GiftBox_C::QuestItem' has a wrong offset!");
static_assert(offsetof(AB_Prj_Athena_GiftBox_C, ObjBackendName) == 0x000A00, "Member 'AB_Prj_Athena_GiftBox_C::ObjBackendName' has a wrong offset!");
static_assert(offsetof(AB_Prj_Athena_GiftBox_C, ObjStat) == 0x000A08, "Member 'AB_Prj_Athena_GiftBox_C::ObjStat' has a wrong offset!");
static_assert(offsetof(AB_Prj_Athena_GiftBox_C, QuestSuccessSound) == 0x000A18, "Member 'AB_Prj_Athena_GiftBox_C::QuestSuccessSound' has a wrong offset!");
static_assert(offsetof(AB_Prj_Athena_GiftBox_C, QuestSuccessEmitter) == 0x000A20, "Member 'AB_Prj_Athena_GiftBox_C::QuestSuccessEmitter' has a wrong offset!");
static_assert(offsetof(AB_Prj_Athena_GiftBox_C, P_BuildBuilding_Tall) == 0x000A28, "Member 'AB_Prj_Athena_GiftBox_C::P_BuildBuilding_Tall' has a wrong offset!");
static_assert(offsetof(AB_Prj_Athena_GiftBox_C, Offset_ParticleSystem) == 0x000A30, "Member 'AB_Prj_Athena_GiftBox_C::Offset_ParticleSystem' has a wrong offset!");
static_assert(offsetof(AB_Prj_Athena_GiftBox_C, Offset_ParticleSystem_Tall) == 0x000A3C, "Member 'AB_Prj_Athena_GiftBox_C::Offset_ParticleSystem_Tall' has a wrong offset!");

}

